{"ast":null,"code":"import _objectSpread from\"/home/michal/Desktop/projekty/java/SurfSchoolSchedule/SurfSchoolSchedule/surf-school-schedule/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{SAVE_PRICE_TABLE_REQUEST,FETCH_PRICE_TABLE_REQUEST,UPDATE_PRICE_TABLE_REQUEST,DELETE_PRICE_TABLE_REQUEST,FETCH_ALL_PRICE_TABLES_REQUEST,FETCH_ALL_PRICE_TABLES_SUCCESS,PRICE_TABLE_SUCCESS,PRICE_TABLE_FAILURE}from\"./priceTableTypes\";var initialState={priceTable:'',error:'',priceTables:[]};var reducer=function reducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case FETCH_ALL_PRICE_TABLES_REQUEST:return _objectSpread({},state);case UPDATE_PRICE_TABLE_REQUEST:console.log(action);return _objectSpread(_objectSpread({},state),{},{priceTable:action.updatedPriceTable,//update specific priceTable\npriceTables:state.priceTables.map(function(item,index){// Replace the item at index = updatedPriceTable\nif(index===action.updatedPriceTable.id){return action.updatedPriceTable;}// Leave every other item unchanged\nreturn item;})});case FETCH_PRICE_TABLE_REQUEST:return _objectSpread(_objectSpread({},state),{},{priceTable:action.updatedPriceTable});case SAVE_PRICE_TABLE_REQUEST:return _objectSpread(_objectSpread({},state),{},{priceTables:state.priceTables.concat(action.newItem),priceTable:action.newItem});case DELETE_PRICE_TABLE_REQUEST:return _objectSpread(_objectSpread({},state),{},{priceTables:state.priceTables.filter(function(item){return item.id!==action.priceTableId;})});case PRICE_TABLE_SUCCESS:return _objectSpread(_objectSpread({},state),{},{priceTable:action.payload,error:''});case PRICE_TABLE_FAILURE:return _objectSpread(_objectSpread({},state),{},{//priceTable: '',\nerror:action.payload});case FETCH_ALL_PRICE_TABLES_SUCCESS:return _objectSpread(_objectSpread({},state),{},{priceTables:action.payload,error:''});default:return state;}};export default reducer;","map":{"version":3,"sources":["/home/michal/Desktop/projekty/java/SurfSchoolSchedule/SurfSchoolSchedule/surf-school-schedule/src/services/priceTable/priceTableReducer.js"],"names":["SAVE_PRICE_TABLE_REQUEST","FETCH_PRICE_TABLE_REQUEST","UPDATE_PRICE_TABLE_REQUEST","DELETE_PRICE_TABLE_REQUEST","FETCH_ALL_PRICE_TABLES_REQUEST","FETCH_ALL_PRICE_TABLES_SUCCESS","PRICE_TABLE_SUCCESS","PRICE_TABLE_FAILURE","initialState","priceTable","error","priceTables","reducer","state","action","type","console","log","updatedPriceTable","map","item","index","id","concat","newItem","filter","priceTableId","payload"],"mappings":"mNAAA,OACIA,wBADJ,CAC8BC,yBAD9B,CACyDC,0BADzD,CACqFC,0BADrF,CAEIC,8BAFJ,CAEoCC,8BAFpC,CAGIC,mBAHJ,CAGyBC,mBAHzB,KAIO,mBAJP,CAMA,GAAMC,CAAAA,YAAY,CAAG,CACjBC,UAAU,CAAE,EADK,CAEjBC,KAAK,CAAE,EAFU,CAGjBC,WAAW,CAAE,EAHI,CAArB,CAMA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAkC,IAAjCC,CAAAA,KAAiC,2DAAzBL,YAAyB,IAAXM,CAAAA,MAAW,2CAC9C,OAAQA,MAAM,CAACC,IAAf,EACI,IAAKX,CAAAA,8BAAL,CACI,wBACOS,KADP,EAGJ,IAAKX,CAAAA,0BAAL,CACIc,OAAO,CAACC,GAAR,CAAYH,MAAZ,EACA,sCACOD,KADP,MAEIJ,UAAU,CAAEK,MAAM,CAACI,iBAFvB,CAGI;AACAP,WAAW,CAAEE,KAAK,CAACF,WAAN,CAAkBQ,GAAlB,CAAsB,SAACC,IAAD,CAAOC,KAAP,CAAiB,CAChD;AACA,GAAIA,KAAK,GAAKP,MAAM,CAACI,iBAAP,CAAyBI,EAAvC,CAA2C,CACvC,MAAOR,CAAAA,MAAM,CAACI,iBAAd,CACH,CACD;AACA,MAAOE,CAAAA,IAAP,CACH,CAPY,CAJjB,GAaJ,IAAKnB,CAAAA,yBAAL,CACI,sCACOY,KADP,MAEIJ,UAAU,CAAEK,MAAM,CAACI,iBAFvB,GAIJ,IAAKlB,CAAAA,wBAAL,CACI,sCACOa,KADP,MAEIF,WAAW,CAAEE,KAAK,CAACF,WAAN,CAAkBY,MAAlB,CAAyBT,MAAM,CAACU,OAAhC,CAFjB,CAGIf,UAAU,CAAEK,MAAM,CAACU,OAHvB,GAKJ,IAAKrB,CAAAA,0BAAL,CACI,sCACOU,KADP,MAEIF,WAAW,CAAEE,KAAK,CAACF,WAAN,CAAkBc,MAAlB,CAAyB,SAAAL,IAAI,QAAIA,CAAAA,IAAI,CAACE,EAAL,GAAYR,MAAM,CAACY,YAAvB,EAA7B,CAFjB,GAIJ,IAAKpB,CAAAA,mBAAL,CACI,sCACOO,KADP,MAEIJ,UAAU,CAAEK,MAAM,CAACa,OAFvB,CAGIjB,KAAK,CAAE,EAHX,GAKJ,IAAKH,CAAAA,mBAAL,CACI,sCACOM,KADP,MAEI;AACAH,KAAK,CAAEI,MAAM,CAACa,OAHlB,GAKJ,IAAKtB,CAAAA,8BAAL,CACI,sCACOQ,KADP,MAEIF,WAAW,CAAEG,MAAM,CAACa,OAFxB,CAGIjB,KAAK,CAAE,EAHX,GAKJ,QAAS,MAAOG,CAAAA,KAAP,CAtDb,CAwDH,CAzDD,CA2DA,cAAeD,CAAAA,OAAf","sourcesContent":["import {\n    SAVE_PRICE_TABLE_REQUEST, FETCH_PRICE_TABLE_REQUEST, UPDATE_PRICE_TABLE_REQUEST, DELETE_PRICE_TABLE_REQUEST, \n    FETCH_ALL_PRICE_TABLES_REQUEST, FETCH_ALL_PRICE_TABLES_SUCCESS,\n    PRICE_TABLE_SUCCESS, PRICE_TABLE_FAILURE\n} from \"./priceTableTypes\";\n\nconst initialState = {\n    priceTable: '',\n    error: '',\n    priceTables: [],\n};\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case FETCH_ALL_PRICE_TABLES_REQUEST:\n            return {\n                ...state\n            };\n        case UPDATE_PRICE_TABLE_REQUEST:\n            console.log(action);\n            return {\n                ...state,\n                priceTable: action.updatedPriceTable,\n                //update specific priceTable\n                priceTables: state.priceTables.map((item, index) => {\n                    // Replace the item at index = updatedPriceTable\n                    if (index === action.updatedPriceTable.id) {\n                        return action.updatedPriceTable;\n                    }\n                    // Leave every other item unchanged\n                    return item;\n                })\n            };\n        case FETCH_PRICE_TABLE_REQUEST:\n            return {\n                ...state,\n                priceTable: action.updatedPriceTable\n            };\n        case SAVE_PRICE_TABLE_REQUEST:\n            return {\n                ...state,\n                priceTables: state.priceTables.concat(action.newItem),\n                priceTable: action.newItem\n            };\n        case DELETE_PRICE_TABLE_REQUEST:\n            return {\n                ...state,\n                priceTables: state.priceTables.filter(item => item.id !== action.priceTableId),\n            };\n        case PRICE_TABLE_SUCCESS:\n            return {\n                ...state,\n                priceTable: action.payload,\n                error: ''\n            };\n        case PRICE_TABLE_FAILURE:\n            return {\n                ...state,\n                //priceTable: '',\n                error: action.payload\n            };\n        case FETCH_ALL_PRICE_TABLES_SUCCESS:\n            return {\n                ...state,\n                priceTables: action.payload,\n                error: ''\n            };\n        default: return state;\n    }\n};\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}