{"ast":null,"code":"var _jsxFileName = \"/home/michal/Desktop/projekty/java/SurfSchoolSchedule/SurfSchoolSchedule/surf-school-schedule/src/components/PriceTable/PriceTable.js\";\nimport React from 'react';\nimport { Form, Card, Col, Button } from 'react-bootstrap';\nimport { faSave, faUndo, faArrowLeft, faEdit, faPlusSquare } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport SuccessToast from '../SuccessToast';\nimport { connect } from 'react-redux';\nimport { savePriceTable, fetchPriceTable, updatePriceTable } from '../../services/index';\n\nclass PriceTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.initialState = {\n      id: '',\n      name: '',\n      minNrHours: '',\n      onePPrice: '',\n      twoPPrice: '',\n      threePPrice: ''\n    };\n\n    this.findPriceTableById = idPriceTable => {\n      this.props.fetchPriceTable(idPriceTable);\n      setTimeout(() => {\n        let priceTable = this.props.priceTable.priceTable;\n\n        if (priceTable != null) {\n          this.setState({\n            id: priceTable.id,\n            name: priceTable.name,\n            minNrHours: priceTable.minNrHours,\n            onePPrice: priceTable.onePPrice,\n            twoPPrice: priceTable.twoPPrice,\n            threePPrice: priceTable.threePPrice\n          });\n        }\n      }, 1000);\n    };\n\n    this.returnToList = () => {\n      return this.props.history.push(\"/priceTableList\");\n    };\n\n    this.submitPriceTable = event => {\n      event.preventDefault();\n      const priceTable = {\n        name: this.state.name,\n        minNrHours: this.state.minNrHours,\n        onePPrice: this.state.onePPrice,\n        twoPPrice: this.state.twoPPrice,\n        threePPrice: this.state.threePPrice\n      };\n      this.props.savePriceTable(priceTable);\n      setTimeout(() => {\n        if (this.props.priceTable) {\n          this.setState({\n            \"show\": true,\n            \"method\": \"post\"\n          });\n          setTimeout(() => this.setState({\n            \"show\": false\n          }), 3000);\n          setTimeout(() => this.returnToList(), 1000);\n        } else {\n          this.setState({\n            \"showInvalidMessage\": true,\n            \"method\": \"post\"\n          });\n          setTimeout(() => this.setState({\n            \"showInvalidMessage\": false\n          }), 3000);\n        }\n      }, 1000);\n    };\n\n    this.updatePriceTable = event => {\n      event.preventDefault();\n      const priceTable = {\n        id: this.state.id,\n        name: this.state.name,\n        minNrHours: this.state.minNrHours,\n        onePPrice: this.state.onePPrice,\n        twoPPrice: this.state.twoPPrice,\n        threePPrice: this.state.threePPrice\n      };\n      this.props.updatePriceTable(priceTable);\n      setTimeout(() => {\n        if (!this.props.priceTable.error) {\n          this.setState({\n            \"show\": true,\n            \"method\": \"put\"\n          });\n          setTimeout(() => this.setState({\n            \"show\": false\n          }), 3000);\n          setTimeout(() => this.returnToList(), 1000);\n        } else {\n          this.setState({\n            \"showInvalidMessage\": true,\n            \"method\": \"post\"\n          });\n          setTimeout(() => this.setState({\n            \"showInvalidMessage\": false\n          }), 3000);\n        }\n      }, 2000);\n    };\n\n    this.resetPriceTable = () => {\n      this.setState(() => this.initialState);\n    };\n\n    this.priceTableChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.state = this.initialState;\n    this.state.show = false;\n    this.state.showInvalidMessage = false;\n    this.state.method = 'post';\n    this.priceTableChange = this.priceTableChange.bind(this);\n    this.submitPriceTable = this.submitPriceTable.bind(this);\n  }\n\n  componentDidMount() {\n    const idPriceTable = +this.props.match.params.id;\n\n    if (idPriceTable) {\n      this.findPriceTableById(idPriceTable);\n    }\n  }\n\n  //?????????????????????????????????????????????????\n  render() {\n    const {\n      name,\n      minNrHours,\n      onePPrice,\n      twoPPrice,\n      threePPrice\n    } = this.state;\n    const idPriceTable = +this.props.match.params.id;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        \"display\": this.state.show ? \"block\" : \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(SuccessToast, {\n      show: this.state.show,\n      message: this.state.method === \"put\" ? \"PriceTable Updated Successfully\" : \"PriceTable Saved Successfully.\",\n      type: \"success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        \"display\": this.state.showInvalidMessage ? \"block\" : \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(SuccessToast, {\n      show: this.state.showInvalidMessage,\n      message: \"Invalid Data - might be in the data base already\",\n      type: \"dangerNoSuccess\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Card, {\n      className: \"border border-dark bg-dark text-white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: idPriceTable ? faEdit : faPlusSquare,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 25\n      }\n    }), \" \", idPriceTable ? \"Update PriceTable\" : \"Add New PriceTable\"), /*#__PURE__*/React.createElement(Form, {\n      onReset: this.resetPriceTable,\n      onSubmit: idPriceTable ? this.updatePriceTable : this.submitPriceTable,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 37\n      }\n    }, \"Offer Name\"), /*#__PURE__*/React.createElement(Form.Control, {\n      required: true,\n      autoComplete: \"off\",\n      type: \"test\",\n      name: \"name\",\n      value: name,\n      onChange: this.priceTableChange,\n      placeholder: \"Enter Offer Name\",\n      className: \"bg-dark text-white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridMinNrHours\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 37\n      }\n    }, \"Min Nr of Hours\"), /*#__PURE__*/React.createElement(Form.Control, {\n      required: true,\n      autoComplete: \"off\",\n      type: \"test\",\n      name: \"minNrHours\",\n      value: minNrHours,\n      onChange: this.priceTableChange,\n      placeholder: \" Enter Min Nr of Hours\",\n      className: \"bg-dark text-white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 37\n      }\n    }))), /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridOnePPrice\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 37\n      }\n    }, \"Price for 1 Person\"), /*#__PURE__*/React.createElement(Form.Control, {\n      required: true,\n      autoComplete: \"off\",\n      type: \"test\",\n      name: \"onePPrice\",\n      value: onePPrice,\n      onChange: this.priceTableChange,\n      placeholder: \"Enter Price\",\n      className: \"bg-dark text-white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridTwoPPrice\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 37\n      }\n    }, \"Price for 1 P in group of 2\"), /*#__PURE__*/React.createElement(Form.Control, {\n      required: true,\n      autoComplete: \"off\",\n      type: \"test\",\n      name: \"twoPPrice\",\n      value: twoPPrice,\n      onChange: this.priceTableChange,\n      placeholder: \" Enter price\",\n      className: \"bg-dark text-white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridThreePPrice\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 37\n      }\n    }, \"Price for 1 P in group of 3\"), /*#__PURE__*/React.createElement(Form.Control, {\n      required: true,\n      autoComplete: \"off\",\n      type: \"test\",\n      name: \"threePPrice\",\n      value: threePPrice,\n      onChange: this.priceTableChange,\n      placeholder: \" Enter price\",\n      className: \"bg-dark text-white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 37\n      }\n    })))), /*#__PURE__*/React.createElement(Card.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      size: \"sm\",\n      variant: \"primary\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faSave,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 37\n      }\n    }), \" \", idPriceTable ? \"Update\" : \"Submit\"), '      ', /*#__PURE__*/React.createElement(Button, {\n      size: \"sm\",\n      variant: \"secondary\",\n      type: \"reset\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faUndo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 37\n      }\n    }), \"  Reset\")), '      ', /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      size: \"sm\",\n      variant: \"light\",\n      type: \"button\",\n      onClick: this.returnToList.bind(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faArrowLeft,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 37\n      }\n    }), \"  Return\"))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    //savedPriceTableObject: state.priceTable,\n    //      priceTableObject: state.priceTable,\n    //  updatedPriceTable: state.priceTable.priceTable\n    priceTable: state.priceTable\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    savePriceTable: priceTable => dispatch(savePriceTable(priceTable)),\n    fetchPriceTable: priceTableId => dispatch(fetchPriceTable(priceTableId)),\n    updatePriceTable: priceTable => dispatch(updatePriceTable(priceTable))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PriceTable);","map":{"version":3,"sources":["/home/michal/Desktop/projekty/java/SurfSchoolSchedule/SurfSchoolSchedule/surf-school-schedule/src/components/PriceTable/PriceTable.js"],"names":["React","Form","Card","Col","Button","faSave","faUndo","faArrowLeft","faEdit","faPlusSquare","FontAwesomeIcon","SuccessToast","connect","savePriceTable","fetchPriceTable","updatePriceTable","PriceTable","Component","constructor","props","initialState","id","name","minNrHours","onePPrice","twoPPrice","threePPrice","findPriceTableById","idPriceTable","setTimeout","priceTable","setState","returnToList","history","push","submitPriceTable","event","preventDefault","state","error","resetPriceTable","priceTableChange","target","value","show","showInvalidMessage","method","bind","componentDidMount","match","params","render","mapStateToProps","mapDispatchToProps","dispatch","priceTableId"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Form, Card, Col, Button } from 'react-bootstrap';\nimport { faSave, faUndo, faArrowLeft, faEdit, faPlusSquare } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport SuccessToast from '../SuccessToast';\n\n\nimport { connect } from 'react-redux';\nimport { savePriceTable, fetchPriceTable, updatePriceTable } from '../../services/index';\n\nclass PriceTable extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = this.initialState;\n        this.state.show = false;\n        this.state.showInvalidMessage = false;\n        this.state.method = 'post';\n        this.priceTableChange = this.priceTableChange.bind(this);\n        this.submitPriceTable = this.submitPriceTable.bind(this);\n    }\n\n    initialState = {\n        id: '', name: '', minNrHours: '', onePPrice: '', twoPPrice: '', threePPrice: ''\n    }\n\n    componentDidMount() {\n        const idPriceTable = +this.props.match.params.id;\n        if (idPriceTable) {\n            this.findPriceTableById(idPriceTable);\n        }\n    };\n\n\n    findPriceTableById = (idPriceTable) => {\n\n        this.props.fetchPriceTable(idPriceTable);\n        setTimeout(() => {\n\n            let priceTable = this.props.priceTable.priceTable;\n            if (priceTable != null) {\n                this.setState({\n                    id: priceTable.id,\n                    name: priceTable.name,\n                    minNrHours: priceTable.minNrHours,\n                    onePPrice: priceTable.onePPrice,\n                    twoPPrice: priceTable.twoPPrice,\n                    threePPrice: priceTable.threePPrice\n                });\n            }\n        }, 1000);\n    };\n\n    returnToList = () => {\n        return this.props.history.push(\"/priceTableList\");\n    };\n\n    submitPriceTable = event => {\n        event.preventDefault();\n\n        const priceTable = {\n            name: this.state.name,\n            minNrHours: this.state.minNrHours,\n            onePPrice: this.state.onePPrice,\n            twoPPrice: this.state.twoPPrice,\n            threePPrice: this.state.threePPrice,\n        };\n\n        this.props.savePriceTable(priceTable);\n        setTimeout(() => {\n            if (this.props.priceTable) {\n                this.setState({ \"show\": true, \"method\": \"post\" });\n                setTimeout(() => this.setState({ \"show\": false }), 3000);\n                setTimeout(() => this.returnToList(), 1000);\n            } else {\n                this.setState({ \"showInvalidMessage\": true, \"method\": \"post\" });\n                setTimeout(() => this.setState({ \"showInvalidMessage\": false }), 3000);\n            }\n        }, 1000);\n    };\n\n    updatePriceTable = event => {\n        event.preventDefault();\n\n        const priceTable = {\n            id: this.state.id,\n            name: this.state.name,\n            minNrHours: this.state.minNrHours,\n            onePPrice: this.state.onePPrice,\n            twoPPrice: this.state.twoPPrice,\n            threePPrice: this.state.threePPrice,\n        };\n\n        this.props.updatePriceTable(priceTable);\n        setTimeout(() => {\n\n            if (!this.props.priceTable.error) {\n                this.setState({ \"show\": true, \"method\": \"put\" });\n                setTimeout(() => this.setState({ \"show\": false }), 3000);\n                setTimeout(() => this.returnToList(), 1000);\n            } else {\n                this.setState({ \"showInvalidMessage\": true, \"method\": \"post\" });\n                setTimeout(() => this.setState({ \"showInvalidMessage\": false }), 3000);\n            }\n        }, 2000);\n    }\n\n    resetPriceTable = () => {\n        this.setState(() => this.initialState);\n    };//??????????????????????????????????????????????????????????\n\n    priceTableChange = event => {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    };//?????????????????????????????????????????????????\n\n    render() {\n        const { name, minNrHours, onePPrice, twoPPrice, threePPrice } = this.state;\n        const idPriceTable = +this.props.match.params.id;\n        return (\n            <div>\n                <div style={{ \"display\": this.state.show ? \"block\" : \"none\" }}>\n                    <SuccessToast show={this.state.show} message={this.state.method === \"put\" ? \"PriceTable Updated Successfully\" : \"PriceTable Saved Successfully.\"} type=\"success\" />\n                </div>\n                <div style={{ \"display\": this.state.showInvalidMessage ? \"block\" : \"none\" }}>\n                    <SuccessToast show={this.state.showInvalidMessage} message={\"Invalid Data - might be in the data base already\"} type=\"dangerNoSuccess\" />\n                </div>\n\n                <Card className={\"border border-dark bg-dark text-white\"}>\n                    <Card.Header>\n                        <FontAwesomeIcon icon={idPriceTable ? faEdit : faPlusSquare} /> {idPriceTable ? \"Update PriceTable\" : \"Add New PriceTable\"}\n                    </Card.Header>\n                    <Form onReset={this.resetPriceTable} onSubmit={idPriceTable ? this.updatePriceTable : this.submitPriceTable}>\n                        <Card.Body>\n                            <Form.Row>\n                                <Form.Group as={Col} controlId=\"formGridName\">\n                                    <Form.Label>Offer Name</Form.Label>\n                                    <Form.Control required\n                                        autoComplete=\"off\"\n                                        type=\"test\"\n                                        name=\"name\"\n                                        value={name}\n                                        onChange={this.priceTableChange}\n                                        placeholder=\"Enter Offer Name\"\n                                        className={\"bg-dark text-white\"} />\n                                </Form.Group>\n\n                                <Form.Group as={Col} controlId=\"formGridMinNrHours\">\n                                    <Form.Label>Min Nr of Hours</Form.Label>\n                                    <Form.Control required\n                                        autoComplete=\"off\"\n                                        type=\"test\"\n                                        name=\"minNrHours\"\n                                        value={minNrHours}\n                                        onChange={this.priceTableChange}\n                                        placeholder=\" Enter Min Nr of Hours\"\n                                        className={\"bg-dark text-white\"} />\n                                </Form.Group>\n                            </Form.Row>\n\n                            <Form.Row>\n                                <Form.Group as={Col} controlId=\"formGridOnePPrice\">\n                                    <Form.Label>Price for 1 Person</Form.Label>\n                                    <Form.Control required\n                                        autoComplete=\"off\"\n                                        type=\"test\"\n                                        name=\"onePPrice\"\n                                        value={onePPrice}\n                                        onChange={this.priceTableChange}\n                                        placeholder=\"Enter Price\"\n                                        className={\"bg-dark text-white\"} />\n                                </Form.Group>\n\n                                <Form.Group as={Col} controlId=\"formGridTwoPPrice\">\n                                    <Form.Label>Price for 1 P in group of 2</Form.Label>\n                                    <Form.Control required\n                                        autoComplete=\"off\"\n                                        type=\"test\"\n                                        name=\"twoPPrice\"\n                                        value={twoPPrice}\n                                        onChange={this.priceTableChange}\n                                        placeholder=\" Enter price\"\n                                        className={\"bg-dark text-white\"} />\n                                </Form.Group>\n\n                                <Form.Group as={Col} controlId=\"formGridThreePPrice\">\n                                    <Form.Label>Price for 1 P in group of 3</Form.Label>\n                                    <Form.Control required\n                                        autoComplete=\"off\"\n                                        type=\"test\"\n                                        name=\"threePPrice\"\n                                        value={threePPrice}\n                                        onChange={this.priceTableChange}\n                                        placeholder=\" Enter price\"\n                                        className={\"bg-dark text-white\"} />\n                                </Form.Group>\n                            </Form.Row>\n\n                        </Card.Body>\n\n                        <Card.Footer>\n                            <div>\n                                <Button size=\"sm\" variant=\"primary\" type=\"submit\">\n                                    <FontAwesomeIcon icon={faSave} /> {idPriceTable ? \"Update\" : \"Submit\"}\n                                </Button>\n                                {'      '}\n\n                                <Button size=\"sm\" variant=\"secondary\" type=\"reset\">\n                                    <FontAwesomeIcon icon={faUndo} />  Reset\n                    </Button>\n                            </div>\n                            {'      '}\n                            <div>\n                                <Button size=\"sm\" variant=\"light\" type=\"button\" onClick={this.returnToList.bind()}>\n                                    <FontAwesomeIcon icon={faArrowLeft} />  Return\n                    </Button>\n                            </div>\n                        </Card.Footer>\n                    </Form >\n\n\n                </Card >\n            </div>\n        );\n    }\n\n}\n\nconst mapStateToProps = state => {\n    return {\n        //savedPriceTableObject: state.priceTable,\n        //      priceTableObject: state.priceTable,\n        //  updatedPriceTable: state.priceTable.priceTable\n        priceTable: state.priceTable\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        savePriceTable: (priceTable) => dispatch(savePriceTable(priceTable)),\n        fetchPriceTable: (priceTableId) => dispatch(fetchPriceTable(priceTableId)),\n        updatePriceTable: (priceTable) => dispatch(updatePriceTable(priceTable))\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PriceTable);\n"]},"metadata":{},"sourceType":"module"}