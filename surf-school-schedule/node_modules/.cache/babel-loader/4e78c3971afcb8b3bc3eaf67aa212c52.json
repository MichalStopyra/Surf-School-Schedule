{"ast":null,"code":"var _jsxFileName = \"/home/michal/Desktop/projekty/java/SurfSchoolSchedule/SurfSchoolSchedule/surf-school-schedule/src/components/Lesson/Schedule.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { Card, Table, ButtonGroup, Button, InputGroup, FormControl } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCalendarAlt, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport SuccessToast from '../SuccessToast';\nimport Popover from '../Popover';\nimport InstructorDay from './InstructorDay';\nimport LessonForm from './LessonForm';\nimport './../../style/Style.css';\nimport { connect } from 'react-redux';\nimport { updateLesson, deleteLesson } from '../../services/index';\n\nclass Schedule extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.changePage = event => {\n      let target = parseInt(event.target.value);\n\n      if (this.state.searchedLesson) {\n        this.searchLesson(target);\n      } else {\n        this.findAllLessons(target);\n      }\n\n      this.setState({\n        [event.target.name]: target\n      });\n    };\n\n    this.prevPage = () => {\n      let prevPage = this.state.currentPage - 1;\n\n      if (this.state.currentPage > 1) {\n        if (this.state.searchedLesson) {\n          this.searchLesson(prevPage);\n        } else {\n          this.findAllLessons(prevPage);\n        }\n      }\n    };\n\n    this.nextPage = () => {\n      let nextPage = this.state.currentPage + 1;\n\n      if (this.state.currentPage < Math.ceil(this.state.totalElements / this.state.lessonsPerPage)) {\n        if (this.state.searchedLesson) {\n          this.searchLesson(nextPage);\n        } else {\n          this.findAllLessons(nextPage);\n        }\n      }\n    };\n\n    this.lessonStatusChange = (lesson, newStatus) => {\n      if (!lesson) return;\n      lesson.status = newStatus;\n      console.log(lesson);\n      this.props.updateLesson(lesson);\n    };\n\n    this.deleteLesson = lesson => {\n      if (!lesson) return;\n      console.log(lesson);\n      this.props.deleteLesson(lesson.id);\n      this.findAllInstructorsAndSchedules(this.state.date); // setTimeout(() => {\n      //     if (this.props.lesson != null) {\n      //         this.setState({ \"show\": true });\n      //         setTimeout(() => this.setState({ \"show\": false }), 1000);\n      //     } else {\n      //         this.setState({ \"show\": false });\n      //     }\n      // }, 1000);\n      //this.props.fetchAllLessons(this.props.lesson.currentPage, this.state.lessonsPerPage, this.props.lesson.sortDirection);\n    };\n\n    this.changeShowPopover = () => {\n      this.setState({\n        \"showPopover\": !this.state.showPopover\n      });\n    };\n\n    this.changeShowForm = (instructor, index) => {\n      if (this.state.showForm) {\n        this.setState({\n          \"showForm\": !this.state.showForm\n        });\n        return;\n      } else {\n        index += 9;\n        this.setState({\n          \"showPopover\": !this.state.showPopover,\n          \"showForm\": !this.state.showForm,\n          \"instructor\": instructor,\n          \"lessonHour\": index + \":00\"\n        });\n      }\n    };\n\n    let today = new Date();\n    this.state = {\n      date: today.getMonth() + 1 + '-' + today.getDate() + '-' + today.getFullYear(),\n      instructor: 'khjghgxchgvjh',\n      lessonHour: '',\n      instructors: [],\n      lessons: [],\n      instructorDay: [],\n      currentPage: 1,\n      lessonsPerPage: 5,\n      searchedLesson: '',\n      sortToggle: false,\n      showForm: false,\n      showPopover: false\n    }; // this.getFieldColor = this.getFieldColor.bind(this);\n  }\n\n  componentDidMount() {\n    this.findAllInstructorsAndSchedules(this.state.date);\n  }\n\n  findAllInstructorsAndSchedules(date) {\n    var instructors = [];\n    axios.get(\"http://localhost:8080/instructor-api/list?page=0&size=999999999&sortBy=firstName&sortDir=desc\").then(response => response.data).then(data => {\n      instructors = data.content;\n      this.findAllInstructorDay(instructors, date);\n    });\n  }\n\n  findAllInstructorDay(instructors, date) {\n    let allInstrDayTable = [];\n    instructors.forEach(function (instructor) {\n      axios.get(\"http://localhost:8080/lesson-api/\" + instructor.id + \"/\" + date).then(response => {\n        if (response.data != null) {\n          let tempInstrDay = {\n            instructor: '',\n            lessonsThisDay: []\n          };\n          tempInstrDay.instructor = instructor; //save when the lessons start \n\n          let tab = response.data.content; //save lessons at specific indexes in array - representing gour of the lesson\n\n          tab.forEach(function (element) {\n            //get hour and create index\n            let time = element.time;\n            time = time.split(\":\")[0]; //first lesson starts at 9 so minus 9 to get index in the array\n\n            let index = time - 9; //if lesson is 1 hour long -add it to array once; if longer than 1 hour - duplicate it in array\n\n            for (let j = 0; j < element.howLong; ++j) {\n              tempInstrDay.lessonsThisDay[index + j] = element;\n            }\n          });\n          allInstrDayTable.push(tempInstrDay);\n        }\n      });\n    });\n    this.setState({\n      instructorDay: allInstrDayTable\n    });\n    setTimeout(() => this.forceUpdate(), 500);\n  } //change status of lessons that have their date in the past and were not given into not given\n\n\n  checkIfLessonInThePast() {\n    let today = new Date();\n\n    for (let i = 0; i < this.state.lessons.length; ++i) {\n      let temp = new Date(this.state.lessons[i].date);\n\n      if (this.state.lessons[i].status === \"To_Give\" && temp < today) {\n        console.log(\"asd\");\n        this.lessonStatusChange(this.state.lessons[i], 3);\n      }\n    }\n  }\n\n  render() {\n    const {\n      instructorDay,\n      instructors\n    } = this.state;\n    console.log(this.state);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(LessonForm, {\n      instructory: this.state.instructor,\n      lessonHour: this.state.lessonHour,\n      date: this.state.date,\n      showForm: this.state.showForm,\n      handleClose: (instructor, index) => this.changeShowForm(instructor, index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Card, {\n      className: \"border border-dark bg-dark text-white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        \"float\": \"left\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faCalendarAlt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 29\n      }\n    }), \"  \", this.state.date)), /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      variant: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 37\n      }\n    }, \"Instructor\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 37\n      }\n    }, \"9:00\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 37\n      }\n    }, \"10:00\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 37\n      }\n    }, \"11:00\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 37\n      }\n    }, \"12:00\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 37\n      }\n    }, \"13:00\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 37\n      }\n    }, \"14:00\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 37\n      }\n    }, \"15:00\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 37\n      }\n    }, \"16:00\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 37\n      }\n    }, \"17:00\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 37\n      }\n    }, \"18:00\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 37\n      }\n    }, \"19:00\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 37\n      }\n    }, \"20:00\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(InstructorDay, {\n      showPopover: this.state.showPopover,\n      changeShowPopover: () => this.changeShowPopover(),\n      instructorDay: instructorDay,\n      lessonStatusChange: (lesson, newStatus) => this.lessonStatusChange(lesson, newStatus),\n      deleteLesson: lesson => this.deleteLesson(lesson),\n      changeShowForm: (instructor, index) => this.changeShowForm(instructor, index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 33\n      }\n    })))), /*#__PURE__*/React.createElement(Card.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    //savedStudentObject: state.student,\n    //      studentObject: state.student,\n    //  updatedStudent: state.student.student\n    lesson: state.lesson\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateLesson: lesson => dispatch(updateLesson(lesson)),\n    deleteLesson: lesson => dispatch(deleteLesson(lesson))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Schedule);","map":{"version":3,"sources":["/home/michal/Desktop/projekty/java/SurfSchoolSchedule/SurfSchoolSchedule/surf-school-schedule/src/components/Lesson/Schedule.js"],"names":["React","axios","Card","Table","ButtonGroup","Button","InputGroup","FormControl","FontAwesomeIcon","faCalendarAlt","faTimes","SuccessToast","Popover","InstructorDay","LessonForm","connect","updateLesson","deleteLesson","Schedule","Component","constructor","props","changePage","event","target","parseInt","value","state","searchedLesson","searchLesson","findAllLessons","setState","name","prevPage","currentPage","nextPage","Math","ceil","totalElements","lessonsPerPage","lessonStatusChange","lesson","newStatus","status","console","log","id","findAllInstructorsAndSchedules","date","changeShowPopover","showPopover","changeShowForm","instructor","index","showForm","today","Date","getMonth","getDate","getFullYear","lessonHour","instructors","lessons","instructorDay","sortToggle","componentDidMount","get","then","response","data","content","findAllInstructorDay","allInstrDayTable","forEach","tempInstrDay","lessonsThisDay","tab","element","time","split","j","howLong","push","setTimeout","forceUpdate","checkIfLessonInThePast","i","length","temp","render","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport axios from 'axios';\nimport { Card, Table, ButtonGroup, Button, InputGroup, FormControl } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCalendarAlt, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport SuccessToast from '../SuccessToast';\nimport Popover from '../Popover';\nimport InstructorDay from './InstructorDay';\nimport LessonForm from './LessonForm';\n\nimport './../../style/Style.css';\n\nimport { connect } from 'react-redux';\nimport { updateLesson, deleteLesson } from '../../services/index';\n\n\n\nclass Schedule extends React.Component {\n\n    constructor(props) {\n        super(props);\n        let today = new Date();\n        this.state = {\n            date: today.getMonth() + 1 + '-' + today.getDate() + '-' + today.getFullYear(),\n            instructor: 'khjghgxchgvjh',\n            lessonHour: '',\n            instructors: [],\n            lessons: [],\n            instructorDay: [],\n            currentPage: 1,\n            lessonsPerPage: 5,\n            searchedLesson: '',\n            sortToggle: false,\n            showForm: false,\n            showPopover: false\n        };\n        // this.getFieldColor = this.getFieldColor.bind(this);\n\n    }\n\n    componentDidMount() {\n        this.findAllInstructorsAndSchedules(this.state.date);\n    }\n\n\n    findAllInstructorsAndSchedules(date) {\n        var instructors = [];\n\n        axios.get(\"http://localhost:8080/instructor-api/list?page=0&size=999999999&sortBy=firstName&sortDir=desc\")\n            .then(response => response.data)\n            .then((data) => {\n                instructors = data.content;\n                this.findAllInstructorDay(instructors, date);\n            });\n\n    }\n\n    findAllInstructorDay(instructors, date) {\n        let allInstrDayTable = [];\n        instructors.forEach(function (instructor) {\n            axios.get(\"http://localhost:8080/lesson-api/\" + instructor.id + \"/\" + date)\n                .then(response => {\n                    if (response.data != null) {\n\n                        let tempInstrDay = {\n                            instructor: '',\n                            lessonsThisDay: []\n                        };\n\n                        tempInstrDay.instructor = instructor;\n                        //save when the lessons start \n                        let tab = response.data.content;\n                        //save lessons at specific indexes in array - representing gour of the lesson\n\n                        tab.forEach(function (element) {\n                            //get hour and create index\n                            let time = element.time;\n                            time = time.split(\":\")[0];\n                            //first lesson starts at 9 so minus 9 to get index in the array\n                            let index = time - 9;\n\n                            //if lesson is 1 hour long -add it to array once; if longer than 1 hour - duplicate it in array\n                            for (let j = 0; j < element.howLong; ++j) {\n                                tempInstrDay.lessonsThisDay[index + j] = element;\n                            }\n                        });\n                        allInstrDayTable.push(tempInstrDay);\n                    }\n                })\n        });\n        this.setState({\n            instructorDay: allInstrDayTable\n        });\n        setTimeout(() => this.forceUpdate(), 500);\n    }\n\n    //change status of lessons that have their date in the past and were not given into not given\n    checkIfLessonInThePast() {\n        let today = new Date();\n\n        for (let i = 0; i < this.state.lessons.length; ++i) {\n            let temp = new Date(this.state.lessons[i].date);\n            if (this.state.lessons[i].status === \"To_Give\" && temp < today) {\n                console.log(\"asd\");\n                this.lessonStatusChange(this.state.lessons[i], 3)\n            }\n        }\n    };\n\n\n    changePage = event => {\n        let target = parseInt(event.target.value);\n        if (this.state.searchedLesson) {\n            this.searchLesson(target)\n        } else {\n            this.findAllLessons(target);\n        }\n        this.setState({\n            [event.target.name]: target\n        });\n\n    };\n\n    prevPage = () => {\n        let prevPage = this.state.currentPage - 1;\n        if (this.state.currentPage > 1) {\n            if (this.state.searchedLesson) {\n                this.searchLesson(prevPage)\n            } else {\n                this.findAllLessons(prevPage);\n            }\n        }\n    };\n\n    nextPage = () => {\n        let nextPage = this.state.currentPage + 1;\n        if (this.state.currentPage < Math.ceil(this.state.totalElements / this.state.lessonsPerPage)) {\n            if (this.state.searchedLesson) {\n                this.searchLesson(nextPage)\n            } else {\n                this.findAllLessons(nextPage);\n            }\n        }\n    };\n\n    lessonStatusChange = (lesson, newStatus) => {\n        if (!lesson)\n            return;\n        lesson.status = newStatus;\n\n        console.log(lesson);\n        this.props.updateLesson(lesson);\n    };\n\n    deleteLesson = (lesson) => {\n        if (!lesson)\n            return;\n        console.log(lesson);\n        this.props.deleteLesson(lesson.id);\n        this.findAllInstructorsAndSchedules(this.state.date);\n\n        // setTimeout(() => {\n        //     if (this.props.lesson != null) {\n        //         this.setState({ \"show\": true });\n        //         setTimeout(() => this.setState({ \"show\": false }), 1000);\n\n        //     } else {\n        //         this.setState({ \"show\": false });\n        //     }\n        // }, 1000);\n        //this.props.fetchAllLessons(this.props.lesson.currentPage, this.state.lessonsPerPage, this.props.lesson.sortDirection);\n\n    };\n\n    //function showing/hiding popover with buttons after clicking on a specific schedule field\n    changeShowPopover = () => {\n        this.setState({ \"showPopover\": !this.state.showPopover });\n    }\n\n    //if close form => change showForm to hide it\n    //if open form => get instructor and hour to pre-fill the form\n    changeShowForm = (instructor, index) => {\n        if (this.state.showForm) {\n            this.setState({\n                \"showForm\": !this.state.showForm,\n            });\n            return;\n        }\n        else {\n            index += 9;\n                this.setState({\n                    \"showPopover\": !this.state.showPopover,\n                    \"showForm\": !this.state.showForm,\n                    \"instructor\": instructor,\n                    \"lessonHour\": index + \":00\"\n                });          \n        }\n    }\n\n    render() {\n        const { instructorDay, instructors } = this.state;\n        console.log(this.state);\n        return (\n            <div>\n                <LessonForm instructory={this.state.instructor} lessonHour={this.state.lessonHour} date={this.state.date}\n                    showForm={this.state.showForm} handleClose={(instructor, index) => this.changeShowForm(instructor, index)}></LessonForm>\n                <Card className={\"border border-dark bg-dark text-white\"}>\n                    <Card.Header>\n                        <div style={{ \"float\": \"left\" }}>\n                            <FontAwesomeIcon icon={faCalendarAlt} />  {this.state.date}\n                        </div>\n\n                    </Card.Header>\n                    <Card.Body>\n                        <Table striped bordered hover variant=\"dark\">\n                            <thead>\n                                <tr>\n                                    <th>Instructor</th>\n                                    <th>9:00</th>\n                                    <th>10:00</th>\n                                    <th>11:00</th>\n                                    <th>12:00</th>\n                                    <th>13:00</th>\n                                    <th>14:00</th>\n                                    <th>15:00</th>\n                                    <th>16:00</th>\n                                    <th>17:00</th>\n                                    <th>18:00</th>\n                                    <th>19:00</th>\n                                    <th>20:00</th>\n\n                                </tr>\n                            </thead>\n\n                            <tbody>\n\n                                <InstructorDay showPopover={this.state.showPopover} changeShowPopover={() => this.changeShowPopover()}\n                                    instructorDay={instructorDay}\n                                    lessonStatusChange={(lesson, newStatus) => this.lessonStatusChange(lesson, newStatus)}\n                                    deleteLesson={(lesson) => this.deleteLesson(lesson)}\n                                    changeShowForm={(instructor, index) => this.changeShowForm(instructor, index)} />\n                            </tbody>\n\n\n                        </Table>\n                    </Card.Body>\n                    <Card.Footer>\n\n\n\n                    </Card.Footer>\n                </Card>\n            </div>\n\n        );\n    }\n\n\n}\n\nconst mapStateToProps = state => {\n    return {\n        //savedStudentObject: state.student,\n        //      studentObject: state.student,\n        //  updatedStudent: state.student.student\n        lesson: state.lesson,\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        updateLesson: (lesson) => dispatch(updateLesson(lesson)),\n        deleteLesson: (lesson) => dispatch(deleteLesson(lesson))\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Schedule);"]},"metadata":{},"sourceType":"module"}