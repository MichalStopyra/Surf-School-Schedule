{"ast":null,"code":"var _jsxFileName = \"/home/michal/Desktop/projekty/java/SurfSchoolSchedule/SurfSchoolSchedule/surf-school-schedule/src/components/Popover.js\";\nimport React, { Component } from 'react';\nimport { Popover, Button, OverlayTrigger, ButtonGroup } from 'react-bootstrap';\nimport { faCheck, faTimes, faUserPlus, faEdit } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Link } from 'react-router-dom';\nexport default class SuccessToast extends React.Component {\n  render() {\n    // const toastCss = {\n    //     position: 'fixed',\n    //     top: '10px',\n    //     right: '10px',\n    //     zIndex: '1',\n    //     boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)'\n    // };\n    if (this.props.data && this.props.isNotInFuture) {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(OverlayTrigger, {\n        trigger: \"focus\" //showPopover={this.props.showPopover}\n        ,\n        key: \"right\",\n        placement: \"bottom\",\n        overlay: /*#__PURE__*/React.createElement(Popover, Object.assign({}, this.props, {\n          id: `popover-positioned-right`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 29\n          }\n        }), /*#__PURE__*/React.createElement(Popover.Title, {\n          className: \"border border-dark bg-dark text-white\",\n          as: \"h3\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 33\n          }\n        }, \"Actions\"), /*#__PURE__*/React.createElement(Popover.Content, {\n          className: \"border border-dark bg-light text-white\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          size: \"sm\",\n          variant: \"outline-info\",\n          type: \"button\",\n          onClick: () => {\n            this.props.lessonStatusChange();\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n          icon: faCheck,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 41\n          }\n        })), /*#__PURE__*/React.createElement(Button, {\n          size: \"sm\",\n          variant: \"outline-dark\",\n          type: \"button\",\n          onClick: () => {\n            this.props.editLesson();\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n          icon: faEdit,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 41\n          }\n        })), /*#__PURE__*/React.createElement(Button, {\n          size: \"sm\",\n          variant: \"outline-danger\",\n          type: \"button\",\n          onClick: () => {\n            this.props.deleteLesson();\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n          icon: faTimes,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 41\n          }\n        })))),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        size: \"sm\",\n        variant: this.props.buttonColor,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }\n      }, this.props.data)));\n    } else if (this.props.data && !this.props.isNotInFuture) {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(OverlayTrigger, {\n        trigger: \"focus\" //showPopover={this.props.showPopover}\n        ,\n        key: \"right\",\n        placement: \"right-start\",\n        overlay: /*#__PURE__*/React.createElement(Popover, {\n          id: `popover-positioned-right`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(Popover.Title, {\n          className: \"border border-dark bg-dark text-white\",\n          as: \"h3\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 33\n          }\n        }, \"Actions\"), /*#__PURE__*/React.createElement(Popover.Content, {\n          className: \"border border-dark bg-light text-white\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          size: \"sm\",\n          variant: \"outline-dark\",\n          type: \"button\",\n          onClick: () => {\n            this.props.editLesson();\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n          icon: faEdit,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 41\n          }\n        })), /*#__PURE__*/React.createElement(Button, {\n          size: \"sm\",\n          variant: \"outline-danger\",\n          type: \"button\",\n          onClick: () => {\n            this.props.deleteLesson();\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n          icon: faTimes,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 41\n          }\n        })))),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        size: \"sm\",\n        variant: this.props.buttonColor,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 25\n        }\n      }, this.props.data)));\n    } else {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(OverlayTrigger, {\n        trigger: \"focus\",\n        key: \"right\",\n        placement: \"right\",\n        overlay: /*#__PURE__*/React.createElement(Popover, {\n          id: `popover-positioned-right`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(Popover.Title, {\n          className: \"border border-dark bg-dark text-white\",\n          as: \"h3\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 33\n          }\n        }, \"Actions\"), /*#__PURE__*/React.createElement(Popover.Content, {\n          className: \"border border-dark bg-light text-white\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          show: \"false\",\n          size: \"lg\",\n          variant: \"info\",\n          block: true,\n          onClick: () => {\n            this.props.changeShowForm();\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 37\n          }\n        }, \"  \", /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n          icon: faUserPlus,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 139\n          }\n        }), \" \"))),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(ButtonGroup, {\n        vertical: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        size: \"lg\",\n        variant: \"transparent\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        size: \"lg\",\n        variant: \"transparent\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 29\n        }\n      }))));\n    }\n  }\n\n}","map":{"version":3,"sources":["/home/michal/Desktop/projekty/java/SurfSchoolSchedule/SurfSchoolSchedule/surf-school-schedule/src/components/Popover.js"],"names":["React","Component","Popover","Button","OverlayTrigger","ButtonGroup","faCheck","faTimes","faUserPlus","faEdit","FontAwesomeIcon","Link","SuccessToast","render","props","data","isNotInFuture","lessonStatusChange","editLesson","deleteLesson","buttonColor","changeShowForm"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Popover, Button, OverlayTrigger, ButtonGroup } from 'react-bootstrap';\nimport { faCheck, faTimes, faUserPlus, faEdit} from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Link } from 'react-router-dom';\n\n\nexport default class SuccessToast extends React.Component {\n\n\n    render() {\n        // const toastCss = {\n        //     position: 'fixed',\n        //     top: '10px',\n        //     right: '10px',\n        //     zIndex: '1',\n        //     boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)'\n        // };\n        if (this.props.data && this.props.isNotInFuture) {\n            return (\n                <>\n\n                    <OverlayTrigger\n                    trigger = \"focus\"\n                        //showPopover={this.props.showPopover}\n                        key=\"right\"\n                        placement=\"bottom\"\n                        overlay={\n                            <Popover {...this.props} id={`popover-positioned-right`}>\n                                <Popover.Title className={\"border border-dark bg-dark text-white\"} as=\"h3\">Actions</Popover.Title>\n                                <Popover.Content className={\"border border-dark bg-light text-white\"}>\n                                    <Button size=\"sm\" variant=\"outline-info\" type=\"button\" onClick={() => { this.props.lessonStatusChange() }}>\n                                        <FontAwesomeIcon icon={faCheck} />\n                                    </Button>\n                                    <Button size=\"sm\" variant=\"outline-dark\" type=\"button\" onClick={() => { this.props.editLesson() }}>\n                                        <FontAwesomeIcon icon={faEdit} />\n                                    </Button>\n                                    <Button size=\"sm\" variant=\"outline-danger\" type=\"button\" onClick={() => { this.props.deleteLesson() }}>\n                                        <FontAwesomeIcon icon={faTimes} />\n                                    </Button>\n\n                                </Popover.Content>\n                            </Popover>\n                        }\n                    >\n\n                        <Button size =\"sm\" variant={this.props.buttonColor} >{this.props.data}</Button>\n                    </OverlayTrigger>\n\n                </>\n            );\n        }\n        else if (this.props.data && !this.props.isNotInFuture) {\n            return (\n                <>\n\n                    <OverlayTrigger\n                    trigger = \"focus\"\n                        //showPopover={this.props.showPopover}\n                        key=\"right\"\n                        placement=\"right-start\"\n                        overlay={\n                            <Popover id={`popover-positioned-right`}>\n                                <Popover.Title className={\"border border-dark bg-dark text-white\"} as=\"h3\">Actions</Popover.Title>\n                                <Popover.Content className={\"border border-dark bg-light text-white\"}>\n                                    <Button size=\"sm\" variant=\"outline-dark\" type=\"button\" onClick={() => { this.props.editLesson() }}>\n                                        <FontAwesomeIcon icon={faEdit} />\n                                    </Button>\n                                    <Button size=\"sm\" variant=\"outline-danger\" type=\"button\" onClick={() => { this.props.deleteLesson() }}>\n                                        <FontAwesomeIcon icon={faTimes} />\n                                    </Button>\n\n                                </Popover.Content>\n                            </Popover>\n                        }\n                    >\n\n                        <Button size =\"sm\" variant={this.props.buttonColor} >{this.props.data}</Button>\n                    </OverlayTrigger>\n\n                </>\n            );\n        }\n        else {\n            return (\n                <>\n\n                    <OverlayTrigger\n                        trigger=\"focus\"\n                        key=\"right\"\n                        placement=\"right\"\n                        overlay={\n                            <Popover id={`popover-positioned-right`}>\n                                <Popover.Title className={\"border border-dark bg-dark text-white\"} as=\"h3\">Actions</Popover.Title>\n\n                                <Popover.Content className={\"border border-dark bg-light text-white\"}>\n                                    {/* <Link to={\"add-lesson\"} className=\"nav-link\"> <Button show=\"false\" size=\"lg\" variant=\"info\" block>  <FontAwesomeIcon icon={faUserPlus} /> </Button> </Link> */}\n                                    <Button show=\"false\" size=\"lg\" variant=\"info\" block onClick={() => { this.props.changeShowForm() }}>  <FontAwesomeIcon icon={faUserPlus} /> </Button>\n\n                                </Popover.Content>\n                            </Popover>\n                        }\n                    >\n                        <ButtonGroup vertical>\n                            <Button size=\"lg\" variant=\"transparent\" ></Button>\n                            <Button size=\"lg\" variant=\"transparent\" ></Button>\n                        </ButtonGroup>\n\n                    </OverlayTrigger>\n\n                </>\n            );\n        }\n\n    };\n}"]},"metadata":{},"sourceType":"module"}