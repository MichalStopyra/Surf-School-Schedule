{"ast":null,"code":"var _jsxFileName = \"/home/michal/Desktop/projekty/java/SurfSchoolSchedule/SurfSchoolSchedule/surf-school-schedule/src/components/Student/StudentSettle.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { Card, Table, ButtonGroup, Button, InputGroup, FormControl, Form, Col } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faWallet, faSave, faUndo, faArrowLeft } from '@fortawesome/free-solid-svg-icons';\nimport SuccessToast from '../SuccessToast';\nimport StudentLessonsList from './StudentLessonsList';\nimport { connect } from 'react-redux';\nimport { deleteLesson, fetchAllLessonsForStudent, searchLessons, updateLesson, fetchStudent, fetchAllPriceTables, fetchPriceTableWithNrOfLessons } from './../../services/index';\nimport './../../style/Style.css';\n\nclass StudentSettle extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.countTotalPrice = () => {\n      let tempTotalPrice = priceOneH[0] * howMany1p;\n      tempTotalPrice += priceOneH[1] * howMany2p;\n      tempTotalPrice += priceOneH[2] * howMany3p;\n      this.setState({\n        totalPrice: tempTotalPrice\n      });\n    };\n\n    this.countLessons = () => {\n      let lessons = this.props.lessons;\n      lessons = lessons.filter(lesson => lesson.status === \"Finished_Unpaid\");\n      let count1p = 0;\n      let count2p = 0;\n      let count3p = 0;\n\n      for (let i = 0; i < lessons.length; ++i) {\n        switch (lessons[i].nrStudents) {\n          case 1:\n            count1p += lessons[i].howLong;\n            break;\n\n          case 2:\n            count2p += lessons[i].howLong;\n            break;\n\n          default:\n            count3p += lessons[i].howLong;\n            break;\n        }\n\n        this.setState({\n          howMany1p: count1p,\n          howMany2p: count2p,\n          howMany3p: count3p\n        });\n      }\n    };\n\n    this.findAllPriceTables = () => {\n      let fullNrOfLessons = this.props.student.student.lessonHours;\n      this.props.fetchPriceTableWithNrOfLessons(fullNrOfLessons);\n      setTimeout(() => {\n        this.props.fetchAllPriceTables(this.props.priceTable.priceTable);\n        let priceOneHTab = [this.props.priceTable.priceTable.onePPrice, this.props.priceTable.priceTable.twoPPrice, this.props.priceTable.priceTable.threePPrice];\n        this.setState({\n          priceOneH: priceOneHTab\n        });\n      }, 100);\n    };\n\n    this.findStudentById = idStudent => {\n      this.props.fetchStudent(idStudent);\n      setTimeout(() => {\n        let student = this.props.student.student;\n\n        if (student != null) {\n          this.setState({\n            student: student // id: student.id,\n            // lastName: student.lastName,\n            // firstName: student.firstName,\n            // idCardNr: student.idCardNr,\n            // telNr: student.telNr,\n            // paymentStatus: student.paymentStatus,\n            // lessonHours: student.lessonHours,\n            // unpaidLessons: student.unpaidLessons,\n            // moneyOwing: student.moneyOwing,\n            // moneyInAdvance: student.moneyInAdvance\n\n          });\n        }\n      }, 1000);\n    };\n\n    this.settleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value,\n        priceOneH: this.state.priceOneH * ((100 - this.state.discount) / 100)\n      });\n    };\n\n    this.handleCheckboxChange = whichOne => {\n      // if(!this.state.disableCustomPrice)\n      this.setState({\n        [whichOne]: !this.state[whichOne],\n        priceOneH: ''\n      }); // else\n      // this.setState({ disableCustomPrice: !this.state.disableCustomPrice});\n    };\n\n    this.state = {\n      idStudent: +this.props.match.params.id,\n      student: '',\n      lessons: [],\n      priceTable: '',\n      priceOneH: [],\n      customPrice: '',\n      payForHowMany: '',\n      discount: '',\n      totalPrice: '',\n      howMany1p: '',\n      howMany2p: '',\n      howMany3p: '',\n      currentPage: 1,\n      lessonsPerPage: 5,\n      searchedLesson: '',\n      sortToggle: false,\n      disableCustomPrice: true,\n      disableDiscount: true\n    };\n  }\n\n  componentDidMount() {\n    this.findStudentById(this.state.idStudent);\n    this.props.fetchAllLessonsForStudent(+this.props.match.params.id, 1, this.state.lessonsPerPage);\n    setTimeout(() => {\n      this.findAllPriceTables();\n      this.countLessons();\n      this.countTotalPrice();\n    }, 1000);\n  }\n\n  render() {\n    const searchedLesson = this.props.lesson.searchedLesson;\n    const totalPages = this.props.lesson.totalPages;\n    const totalElements = this.props.lesson.totalElements;\n    const lesson = this.props.lesson;\n    const lessons = this.props.lessons;\n    const currentPage = this.props.lesson.currentPage;\n    const student = this.props.student.student;\n    const {\n      moneyInAdvance,\n      unpaidLessons,\n      paymentStatus,\n      lessonHours\n    } = this.props.student.student;\n    const priceTables = this.props.priceTable.priceTables;\n    const {\n      priceTable,\n      priceOneH,\n      discount,\n      totalPrice,\n      payForHowMany,\n      howMany1p,\n      howMany2p,\n      howMany3p,\n      customPrice\n    } = this.state;\n    const pageNumCss = {\n      width: \"45px\",\n      border: \"1px solid #F8F8FF\",\n      color: \"#F8F8FF\",\n      textAlign: \"center\",\n      fontWeight: \"bold\"\n    };\n    const searchBoxCss = {\n      width: \"100px\",\n      border: \"1px solid #17A2B8\",\n      color: \"#17A2B8\",\n      textAlign: \"center\",\n      fontWeight: \"bold\"\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        \"display\": this.state.show ? \"block\" : \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(SuccessToast, {\n      show: this.state.show,\n      message: \"Student Settled Successfully\",\n      type: \"success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Card, {\n      className: \"border border-dark bg-dark text-white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faWallet,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 25\n      }\n    }), \" Settle Student\"), /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"container\",\n      style: {\n        \"clear\": \"both\",\n        \"display\": \"flex\",\n        \"justifyContent\": \"space-between\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 37\n      }\n    }, \"Student\"), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 37\n      }\n    }, student.firstName + \" \" + student.lastName), /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 37\n      }\n    }, \"Full Nr of Lessons [h]\"), /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 37\n      }\n    }, lessonHours), /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 37\n      }\n    }, \"Nr of Unpaid Lessons [h] (1p/2p/+3p)\"), /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 37\n      }\n    }, unpaidLessons, \" (\", howMany1p, \"/\", howMany2p, \"/\", howMany3p, \")\"), /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 37\n      }\n    }, \"Money in advance [zl]\"), /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 37\n      }\n    }, moneyInAdvance), /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 37\n      }\n    }, \"Total price\"), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 37\n      }\n    }, totalPrice ? totalPrice : 0, \" zl\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridPriceTables\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 41\n      }\n    }, \"Offer\"), /*#__PURE__*/React.createElement(Form.Control, {\n      disabled: !this.state.disableCustomPrice,\n      required: true,\n      as: \"select\",\n      autoComplete: \"off\",\n      name: \"priceTable\",\n      value: priceTable,\n      onChange: this.settleChange,\n      className: \"bg-dark text-white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 41\n      }\n    }, this.state.disableCustomPrice ? priceTables.map(priceTable => /*#__PURE__*/React.createElement(\"option\", {\n      key: priceTable.id,\n      value: JSON.stringify(priceTable),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 49\n      }\n    }, priceTable.name + \" \" + priceTable.minNrHours + \"h\")) : \"\")), /*#__PURE__*/React.createElement(InputGroup, {\n      className: \"mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup.Prepend, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup.Checkbox, {\n      onChange: () => this.handleCheckboxChange(\"disableCustomPrice\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridCustomPrice\",\n      name: \"customPrice\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 45\n      }\n    }, \"Custom Price\"), /*#__PURE__*/React.createElement(Form.Control, {\n      disabled: this.state.disableCustomPrice,\n      autoComplete: \"off\",\n      type: \"test\",\n      name: \"customPrice\",\n      value: customPrice,\n      onChange: this.settleChange,\n      placeholder: this.state.disableCustomPrice ? \"\" : \"Enter Price [zl]\",\n      className: \"bg-dark text-white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 45\n      }\n    }))), /*#__PURE__*/React.createElement(InputGroup, {\n      className: \"mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup.Prepend, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup.Checkbox, {\n      onChange: () => this.handleCheckboxChange(\"disableDiscount\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridDiscount\",\n      name: \"discount\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 45\n      }\n    }, \"Discount [%]\"), /*#__PURE__*/React.createElement(Form.Control, {\n      disabled: this.state.disableDiscount,\n      autoComplete: \"off\",\n      type: \"test\",\n      name: \"discount\",\n      value: discount,\n      onChange: this.settleChange,\n      placeholder: this.state.disableDiscount ? \"\" : \"Enter Discount [%]\",\n      className: \"bg-dark text-white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 45\n      }\n    }))), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridPayForHowMany\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 41\n      }\n    }, \"How many lessons to pay for\"), /*#__PURE__*/React.createElement(Form.Control, {\n      required: true,\n      autoComplete: \"off\",\n      name: \"payForHowMany\",\n      type: \"test\",\n      value: payForHowMany,\n      onChange: this.studentChange,\n      placeholder: \"How Many\",\n      className: \"bg-dark text-white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 41\n      }\n    }))))), /*#__PURE__*/React.createElement(Card.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      size: \"sm\",\n      variant: \"primary\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faSave,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 37\n      }\n    }), \" \", this.state.id ? \"Update\" : \"Submit\"), '      ', /*#__PURE__*/React.createElement(Button, {\n      size: \"sm\",\n      variant: \"secondary\",\n      type: \"reset\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faUndo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 37\n      }\n    }), \"  Reset\")), '      ', /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      size: \"sm\",\n      variant: \"light\",\n      type: \"button\",\n      onClick: () => {},\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faArrowLeft,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 37\n      }\n    }), \"  Return\"))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    lessons: state.lesson.lessons,\n    lesson: state.lesson.lesson,\n    student: state.student,\n    priceTable: state.priceTable\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchAllLessonsForStudent: (studentId, currentPage, size) => dispatch(fetchAllLessonsForStudent(studentId, currentPage, size)),\n    deleteLesson: lessonId => dispatch(deleteLesson(lessonId)),\n    searchLessons: (searchedLesson, currentPage, sizePage) => dispatch(searchLessons(searchedLesson, currentPage, sizePage)),\n    updateLesson: lesson => dispatch(updateLesson(lesson)),\n    fetchStudent: studentId => dispatch(fetchStudent(studentId)),\n    fetchAllPriceTables: firstElement => dispatch(fetchAllPriceTables(firstElement)),\n    fetchPriceTableWithNrOfLessons: fullNrOfLessons => dispatch(fetchPriceTableWithNrOfLessons(fullNrOfLessons))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StudentSettle);","map":{"version":3,"sources":["/home/michal/Desktop/projekty/java/SurfSchoolSchedule/SurfSchoolSchedule/surf-school-schedule/src/components/Student/StudentSettle.js"],"names":["React","axios","Link","Card","Table","ButtonGroup","Button","InputGroup","FormControl","Form","Col","FontAwesomeIcon","faWallet","faSave","faUndo","faArrowLeft","SuccessToast","StudentLessonsList","connect","deleteLesson","fetchAllLessonsForStudent","searchLessons","updateLesson","fetchStudent","fetchAllPriceTables","fetchPriceTableWithNrOfLessons","StudentSettle","Component","constructor","props","countTotalPrice","tempTotalPrice","priceOneH","howMany1p","howMany2p","howMany3p","setState","totalPrice","countLessons","lessons","filter","lesson","status","count1p","count2p","count3p","i","length","nrStudents","howLong","findAllPriceTables","fullNrOfLessons","student","lessonHours","setTimeout","priceTable","priceOneHTab","onePPrice","twoPPrice","threePPrice","findStudentById","idStudent","settleChange","event","target","name","value","state","discount","handleCheckboxChange","whichOne","match","params","id","customPrice","payForHowMany","currentPage","lessonsPerPage","searchedLesson","sortToggle","disableCustomPrice","disableDiscount","componentDidMount","render","totalPages","totalElements","moneyInAdvance","unpaidLessons","paymentStatus","priceTables","pageNumCss","width","border","color","textAlign","fontWeight","searchBoxCss","show","firstName","lastName","map","JSON","stringify","minNrHours","studentChange","mapStateToProps","mapDispatchToProps","dispatch","studentId","size","lessonId","sizePage","firstElement"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,WAAtB,EAAmCC,MAAnC,EAA2CC,UAA3C,EAAuDC,WAAvD,EAAoEC,IAApE,EAA0EC,GAA1E,QAAqF,iBAArF;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,QAAT,EAAmBC,MAAnB,EAA2BC,MAA3B,EAAmCC,WAAnC,QAAsD,mCAAtD;AACA,OAAOC,YAAP,MAAyB,iBAAzB;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,EAAuBC,yBAAvB,EAAkDC,aAAlD,EAAiEC,YAAjE,EACIC,YADJ,EACkBC,mBADlB,EACuCC,8BADvC,QAC6E,wBAD7E;AAGA,OAAO,yBAAP;;AAGA,MAAMC,aAAN,SAA4B1B,KAAK,CAAC2B,SAAlC,CAA4C;AAExCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAkCnBC,eAlCmB,GAkCD,MAAM;AACpB,UAAIC,cAAc,GAAGC,SAAS,CAAC,CAAD,CAAT,GAAeC,SAApC;AACAF,MAAAA,cAAc,IAAIC,SAAS,CAAC,CAAD,CAAT,GAAeE,SAAjC;AACAH,MAAAA,cAAc,IAAIC,SAAS,CAAC,CAAD,CAAT,GAAeG,SAAjC;AACA,WAAKC,QAAL,CAAc;AACVC,QAAAA,UAAU,EAAEN;AADF,OAAd;AAIH,KA1CkB;;AAAA,SA4CnBO,YA5CmB,GA4CJ,MAAM;AACjB,UAAIC,OAAO,GAAG,KAAKV,KAAL,CAAWU,OAAzB;AAEAA,MAAAA,OAAO,GAAGA,OAAO,CAACC,MAAR,CAAeC,MAAM,IAAIA,MAAM,CAACC,MAAP,KAAkB,iBAA3C,CAAV;AACA,UAAIC,OAAO,GAAG,CAAd;AACA,UAAIC,OAAO,GAAG,CAAd;AACA,UAAIC,OAAO,GAAG,CAAd;;AACA,WAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGP,OAAO,CAACQ,MAA3B,EAAmC,EAAED,CAArC,EAAwC;AACpC,gBAAOP,OAAO,CAACO,CAAD,CAAP,CAAWE,UAAlB;AACI,eAAK,CAAL;AACIL,YAAAA,OAAO,IAAEJ,OAAO,CAACO,CAAD,CAAP,CAAWG,OAApB;AACA;;AACJ,eAAK,CAAL;AACIL,YAAAA,OAAO,IAAEL,OAAO,CAACO,CAAD,CAAP,CAAWG,OAApB;AACA;;AACJ;AACIJ,YAAAA,OAAO,IAAEN,OAAO,CAACO,CAAD,CAAP,CAAWG,OAApB;AACA;AATR;;AAWJ,aAAKb,QAAL,CAAc;AACVH,UAAAA,SAAS,EAAEU,OADD;AAEVT,UAAAA,SAAS,EAAEU,OAFD;AAGVT,UAAAA,SAAS,EAAEU;AAHD,SAAd;AAKC;AACJ,KArEkB;;AAAA,SAwEnBK,kBAxEmB,GAwEE,MAAM;AACvB,UAAIC,eAAe,GAAG,KAAKtB,KAAL,CAAWuB,OAAX,CAAmBA,OAAnB,CAA2BC,WAAjD;AACA,WAAKxB,KAAL,CAAWJ,8BAAX,CAA0C0B,eAA1C;AACAG,MAAAA,UAAU,CAAC,MAAM;AAAC,aAAKzB,KAAL,CAAWL,mBAAX,CAA+B,KAAKK,KAAL,CAAW0B,UAAX,CAAsBA,UAArD;AACd,YAAIC,YAAY,GAAG,CAAC,KAAK3B,KAAL,CAAW0B,UAAX,CAAsBA,UAAtB,CAAiCE,SAAlC,EAA6C,KAAK5B,KAAL,CAAW0B,UAAX,CAAsBA,UAAtB,CAAiCG,SAA9E,EAAyF,KAAK7B,KAAL,CAAW0B,UAAX,CAAsBA,UAAtB,CAAiCI,WAA1H,CAAnB;AACA,aAAKvB,QAAL,CAAc;AAACJ,UAAAA,SAAS,EAAEwB;AAAZ,SAAd;AAEH,OAJS,EAIP,GAJO,CAAV;AAMH,KAjFkB;;AAAA,SAmFnBI,eAnFmB,GAmFAC,SAAD,IAAe;AAE7B,WAAKhC,KAAL,CAAWN,YAAX,CAAwBsC,SAAxB;AACAP,MAAAA,UAAU,CAAC,MAAM;AAEb,YAAIF,OAAO,GAAG,KAAKvB,KAAL,CAAWuB,OAAX,CAAmBA,OAAjC;;AACA,YAAIA,OAAO,IAAI,IAAf,EAAqB;AACjB,eAAKhB,QAAL,CAAc;AACVgB,YAAAA,OAAO,EAAEA,OADC,CAEV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAXU,WAAd;AAaH;AACJ,OAlBS,EAkBP,IAlBO,CAAV;AAmBH,KAzGkB;;AAAA,SAkHnBU,YAlHmB,GAkHJC,KAAK,IAAI;AACpB,WAAK3B,QAAL,CAAc;AACV,SAAC2B,KAAK,CAACC,MAAN,CAAaC,IAAd,GAAqBF,KAAK,CAACC,MAAN,CAAaE,KADxB;AAEVlC,QAAAA,SAAS,EAAE,KAAKmC,KAAL,CAAWnC,SAAX,IAAyB,CAAC,MAAI,KAAKmC,KAAL,CAAWC,QAAhB,IAA0B,GAAnD;AAFD,OAAd;AAKH,KAxHkB;;AAAA,SA0HnBC,oBA1HmB,GA0HKC,QAAD,IAAc;AACjC;AACA,WAAKlC,QAAL,CAAc;AACV,SAACkC,QAAD,GAAY,CAAC,KAAKH,KAAL,CAAWG,QAAX,CADH;AAEVtC,QAAAA,SAAS,EAAE;AAFD,OAAd,EAFiC,CAMjC;AACA;AACH,KAlIkB;;AAEf,SAAKmC,KAAL,GAAa;AACTN,MAAAA,SAAS,EAAE,CAAC,KAAKhC,KAAL,CAAW0C,KAAX,CAAiBC,MAAjB,CAAwBC,EAD3B;AAETrB,MAAAA,OAAO,EAAE,EAFA;AAGTb,MAAAA,OAAO,EAAE,EAHA;AAITgB,MAAAA,UAAU,EAAE,EAJH;AAKTvB,MAAAA,SAAS,EAAE,EALF;AAMT0C,MAAAA,WAAW,EAAE,EANJ;AAOTC,MAAAA,aAAa,EAAE,EAPN;AAQTP,MAAAA,QAAQ,EAAE,EARD;AAST/B,MAAAA,UAAU,EAAE,EATH;AAUTJ,MAAAA,SAAS,EAAE,EAVF;AAWTC,MAAAA,SAAS,EAAE,EAXF;AAYTC,MAAAA,SAAS,EAAE,EAZF;AAaTyC,MAAAA,WAAW,EAAE,CAbJ;AAcTC,MAAAA,cAAc,EAAE,CAdP;AAeTC,MAAAA,cAAc,EAAE,EAfP;AAgBTC,MAAAA,UAAU,EAAE,KAhBH;AAiBTC,MAAAA,kBAAkB,EAAE,IAjBX;AAkBTC,MAAAA,eAAe,EAAE;AAlBR,KAAb;AAoBH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKtB,eAAL,CAAqB,KAAKO,KAAL,CAAWN,SAAhC;AACA,SAAKhC,KAAL,CAAWT,yBAAX,CAAqC,CAAC,KAAKS,KAAL,CAAW0C,KAAX,CAAiBC,MAAjB,CAAwBC,EAA9D,EAAkE,CAAlE,EAAqE,KAAKN,KAAL,CAAWU,cAAhF;AACAvB,IAAAA,UAAU,CAAC,MAAM;AAAC,WAAKJ,kBAAL;AACd,WAAKZ,YAAL;AACA,WAAKR,eAAL;AACH,KAHS,EAGP,IAHO,CAAV;AAKH;;AAoGDqD,EAAAA,MAAM,GAAG;AACL,UAAML,cAAc,GAAG,KAAKjD,KAAL,CAAWY,MAAX,CAAkBqC,cAAzC;AACA,UAAMM,UAAU,GAAG,KAAKvD,KAAL,CAAWY,MAAX,CAAkB2C,UAArC;AACA,UAAMC,aAAa,GAAG,KAAKxD,KAAL,CAAWY,MAAX,CAAkB4C,aAAxC;AACA,UAAM5C,MAAM,GAAG,KAAKZ,KAAL,CAAWY,MAA1B;AACA,UAAMF,OAAO,GAAG,KAAKV,KAAL,CAAWU,OAA3B;AACA,UAAMqC,WAAW,GAAG,KAAK/C,KAAL,CAAWY,MAAX,CAAkBmC,WAAtC;AACA,UAAMxB,OAAO,GAAG,KAAKvB,KAAL,CAAWuB,OAAX,CAAmBA,OAAnC;AACA,UAAM;AAAEkC,MAAAA,cAAF;AAAkBC,MAAAA,aAAlB;AAAiCC,MAAAA,aAAjC;AAAgDnC,MAAAA;AAAhD,QAAgE,KAAKxB,KAAL,CAAWuB,OAAX,CAAmBA,OAAzF;AACA,UAAMqC,WAAW,GAAG,KAAK5D,KAAL,CAAW0B,UAAX,CAAsBkC,WAA1C;AACA,UAAM;AAAClC,MAAAA,UAAD;AAAavB,MAAAA,SAAb;AAAwBoC,MAAAA,QAAxB;AAAkC/B,MAAAA,UAAlC;AAA8CsC,MAAAA,aAA9C;AAA6D1C,MAAAA,SAA7D;AAAwEC,MAAAA,SAAxE;AAAmFC,MAAAA,SAAnF;AAA8FuC,MAAAA;AAA9F,QAA6G,KAAKP,KAAxH;AAGA,UAAMuB,UAAU,GAAG;AACfC,MAAAA,KAAK,EAAE,MADQ;AAEfC,MAAAA,MAAM,EAAE,mBAFO;AAGfC,MAAAA,KAAK,EAAE,SAHQ;AAIfC,MAAAA,SAAS,EAAE,QAJI;AAKfC,MAAAA,UAAU,EAAE;AALG,KAAnB;AAQA,UAAMC,YAAY,GAAG;AACjBL,MAAAA,KAAK,EAAE,OADU;AAEjBC,MAAAA,MAAM,EAAE,mBAFS;AAGjBC,MAAAA,KAAK,EAAE,SAHU;AAIjBC,MAAAA,SAAS,EAAE,QAJM;AAKjBC,MAAAA,UAAU,EAAE;AALK,KAArB;AAQA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,KAAK,EAAE;AAAE,mBAAW,KAAK5B,KAAL,CAAW8B,IAAX,GAAkB,OAAlB,GAA4B;AAAzC,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,YAAD;AAAc,MAAA,IAAI,EAAE,KAAK9B,KAAL,CAAW8B,IAA/B;AAAqC,MAAA,OAAO,EAAE,8BAA9C;AAA8E,MAAA,IAAI,EAAC,SAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,eASI,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAE,uCAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,eAAD;AAAiB,MAAA,IAAI,EAAErF,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,oBADJ,eAII,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,EAAE,EAAC,WAAR;AAAoB,MAAA,KAAK,EAAE;AAAE,iBAAS,MAAX;AAAmB,mBAAW,MAA9B;AAAsC,0BAAkB;AAAxD,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKwC,OAAO,CAAC8C,SAAR,GAAoB,GAApB,GAA0B9C,OAAO,CAAC+C,QAAvC,CAFJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK9C,WAAL,CALJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAPJ,eAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKkC,aAAL,QAAsBtD,SAAtB,OAAkCC,SAAlC,OAA8CC,SAA9C,MARJ,eAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAVJ,eAWI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKmD,cAAL,CAXJ,eAaI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAbJ,eAcI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKjD,UAAU,GAAGA,UAAH,GAAgB,CAA/B,QAdJ,CAFJ,eAmBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,EAAE,EAAE3B,GAAhB;AAAqB,MAAA,SAAS,EAAC,qBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,eAEI,oBAAC,IAAD,CAAM,OAAN;AACI,MAAA,QAAQ,EAAE,CAAC,KAAKyD,KAAL,CAAWa,kBAD1B;AAEI,MAAA,QAAQ,MAFZ;AAEa,MAAA,EAAE,EAAC,QAFhB;AAGI,MAAA,YAAY,EAAC,KAHjB;AAII,MAAA,IAAI,EAAC,YAJT;AAKI,MAAA,KAAK,EAAEzB,UALX;AAMI,MAAA,QAAQ,EAAE,KAAKO,YANnB;AAOI,MAAA,SAAS,EAAE,oBAPf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQK,KAAKK,KAAL,CAAWa,kBAAX,GAAgCS,WAAW,CAACW,GAAZ,CAAgB7C,UAAU,iBACvD;AAAQ,MAAA,GAAG,EAAEA,UAAU,CAACkB,EAAxB;AAA4B,MAAA,KAAK,EAAE4B,IAAI,CAACC,SAAL,CAAe/C,UAAf,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKA,UAAU,CAACU,IAAX,GAAkB,GAAlB,GAAwBV,UAAU,CAACgD,UAAnC,GAAgD,GADrD,CAD6B,CAAhC,GAKG,EAbR,CAFJ,CADJ,eAoBI,oBAAC,UAAD;AAAY,MAAA,SAAS,EAAC,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,UAAD,CAAY,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,UAAD,CAAY,QAAZ;AAAqB,MAAA,QAAQ,EAAE,MAAM,KAAKlC,oBAAL,CAA0B,oBAA1B,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,eAII,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,EAAE,EAAE3D,GAAhB;AAAqB,MAAA,SAAS,EAAC,qBAA/B;AAAqD,MAAA,IAAI,EAAC,aAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI,oBAAC,IAAD,CAAM,OAAN;AACI,MAAA,QAAQ,EAAE,KAAKyD,KAAL,CAAWa,kBADzB;AAEI,MAAA,YAAY,EAAC,KAFjB;AAGI,MAAA,IAAI,EAAC,MAHT;AAII,MAAA,IAAI,EAAC,aAJT;AAKI,MAAA,KAAK,EAAEN,WALX;AAMI,MAAA,QAAQ,EAAE,KAAKZ,YANnB;AAOI,MAAA,WAAW,EAAE,KAAKK,KAAL,CAAWa,kBAAX,GAAgC,EAAhC,GAAqC,kBAPtD;AAQI,MAAA,SAAS,EAAE,oBARf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAJJ,CApBJ,eAsCI,oBAAC,UAAD;AAAY,MAAA,SAAS,EAAC,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,UAAD,CAAY,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,UAAD,CAAY,QAAZ;AAAqB,MAAA,QAAQ,EAAE,MAAM,KAAKX,oBAAL,CAA0B,iBAA1B,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,eAII,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,EAAE,EAAE3D,GAAhB;AAAqB,MAAA,SAAS,EAAC,kBAA/B;AAAkD,MAAA,IAAI,EAAC,UAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI,oBAAC,IAAD,CAAM,OAAN;AACI,MAAA,QAAQ,EAAE,KAAKyD,KAAL,CAAWc,eADzB;AAEI,MAAA,YAAY,EAAC,KAFjB;AAGI,MAAA,IAAI,EAAC,MAHT;AAII,MAAA,IAAI,EAAC,UAJT;AAKI,MAAA,KAAK,EAAEb,QALX;AAMI,MAAA,QAAQ,EAAE,KAAKN,YANnB;AAOI,MAAA,WAAW,EAAE,KAAKK,KAAL,CAAWc,eAAX,GAA6B,EAA7B,GAAkC,oBAPnD;AAQI,MAAA,SAAS,EAAE,oBARf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAJJ,CAtCJ,eAwDI,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,EAAE,EAAEvE,GAAhB;AAAqB,MAAA,SAAS,EAAC,uBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCADJ,eAEI,oBAAC,IAAD,CAAM,OAAN;AAAc,MAAA,QAAQ,MAAtB;AACI,MAAA,YAAY,EAAC,KADjB;AAEI,MAAA,IAAI,EAAC,eAFT;AAGI,MAAA,IAAI,EAAC,MAHT;AAII,MAAA,KAAK,EAAEiE,aAJX;AAKI,MAAA,QAAQ,EAAE,KAAK6B,aALnB;AAMI,MAAA,WAAW,EAAC,UANhB;AAOI,MAAA,SAAS,EAAE,oBAPf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAxDJ,CAnBJ,CADJ,CADJ,eA8FI,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,IAAb;AAAkB,MAAA,OAAO,EAAC,SAA1B;AAAoC,MAAA,IAAI,EAAC,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,eAAD;AAAiB,MAAA,IAAI,EAAE3F,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,OACuC,KAAKsD,KAAL,CAAWM,EAAX,GAAgB,QAAhB,GAA2B,QADlE,CADJ,EAIK,QAJL,eAMI,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,IAAb;AAAkB,MAAA,OAAO,EAAC,WAA1B;AAAsC,MAAA,IAAI,EAAC,OAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,eAAD;AAAiB,MAAA,IAAI,EAAE3D,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,YANJ,CADJ,EAWK,QAXL,eAYI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,IAAb;AAAkB,MAAA,OAAO,EAAC,OAA1B;AAAkC,MAAA,IAAI,EAAC,QAAvC;AAAgD,MAAA,OAAO,EAAE,MAAM,CAAG,CAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,eAAD;AAAiB,MAAA,IAAI,EAAEC,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,aADJ,CAZJ,CA9FJ,CAJJ,CATJ,CADJ;AAoIH;;AAvSuC;;AA2S5C,MAAM0F,eAAe,GAAGtC,KAAK,IAAI;AAC7B,SAAO;AACH5B,IAAAA,OAAO,EAAE4B,KAAK,CAAC1B,MAAN,CAAaF,OADnB;AAEHE,IAAAA,MAAM,EAAE0B,KAAK,CAAC1B,MAAN,CAAaA,MAFlB;AAGHW,IAAAA,OAAO,EAAEe,KAAK,CAACf,OAHZ;AAIHG,IAAAA,UAAU,EAAEY,KAAK,CAACZ;AAJf,GAAP;AAMH,CAPD;;AAUA,MAAMmD,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACHvF,IAAAA,yBAAyB,EAAE,CAACwF,SAAD,EAAYhC,WAAZ,EAAyBiC,IAAzB,KAAkCF,QAAQ,CAACvF,yBAAyB,CAACwF,SAAD,EAAYhC,WAAZ,EAAyBiC,IAAzB,CAA1B,CADlE;AAEH1F,IAAAA,YAAY,EAAG2F,QAAD,IAAcH,QAAQ,CAACxF,YAAY,CAAC2F,QAAD,CAAb,CAFjC;AAGHzF,IAAAA,aAAa,EAAE,CAACyD,cAAD,EAAiBF,WAAjB,EAA8BmC,QAA9B,KAA2CJ,QAAQ,CAACtF,aAAa,CAACyD,cAAD,EAAiBF,WAAjB,EAA8BmC,QAA9B,CAAd,CAH/D;AAIHzF,IAAAA,YAAY,EAAGmB,MAAD,IAAYkE,QAAQ,CAACrF,YAAY,CAACmB,MAAD,CAAb,CAJ/B;AAKHlB,IAAAA,YAAY,EAAGqF,SAAD,IAAeD,QAAQ,CAACpF,YAAY,CAACqF,SAAD,CAAb,CALlC;AAMHpF,IAAAA,mBAAmB,EAAGwF,YAAD,IAAkBL,QAAQ,CAACnF,mBAAmB,CAACwF,YAAD,CAApB,CAN5C;AAOHvF,IAAAA,8BAA8B,EAAG0B,eAAD,IAAqBwD,QAAQ,CAAClF,8BAA8B,CAAC0B,eAAD,CAA/B;AAP1D,GAAP;AAUH,CAXD;;AAcA,eAAejC,OAAO,CAACuF,eAAD,EAAkBC,kBAAlB,CAAP,CAA6ChF,aAA7C,CAAf","sourcesContent":["import React from 'react';\n\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { Card, Table, ButtonGroup, Button, InputGroup, FormControl, Form, Col } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faWallet, faSave, faUndo, faArrowLeft } from '@fortawesome/free-solid-svg-icons';\nimport SuccessToast from '../SuccessToast';\nimport StudentLessonsList from './StudentLessonsList';\nimport { connect } from 'react-redux';\nimport { deleteLesson, fetchAllLessonsForStudent, searchLessons, updateLesson, \n    fetchStudent, fetchAllPriceTables, fetchPriceTableWithNrOfLessons } from './../../services/index';\n\nimport './../../style/Style.css';\n\n\nclass StudentSettle extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            idStudent: +this.props.match.params.id,\n            student: '',\n            lessons: [],\n            priceTable: '',\n            priceOneH: [],\n            customPrice: '',\n            payForHowMany: '',\n            discount: '',\n            totalPrice: '',\n            howMany1p: '',\n            howMany2p: '',\n            howMany3p: '',\n            currentPage: 1,\n            lessonsPerPage: 5,\n            searchedLesson: '',\n            sortToggle: false,\n            disableCustomPrice: true,\n            disableDiscount: true\n        };\n    }\n\n    componentDidMount() {\n        this.findStudentById(this.state.idStudent);\n        this.props.fetchAllLessonsForStudent(+this.props.match.params.id, 1, this.state.lessonsPerPage);\n        setTimeout(() => {this.findAllPriceTables();\n            this.countLessons();\n            this.countTotalPrice();\n        }, 1000);\n\n    }\n\n    countTotalPrice = () => {\n        let tempTotalPrice = priceOneH[0] * howMany1p;\n        tempTotalPrice += priceOneH[1] * howMany2p;\n        tempTotalPrice += priceOneH[2] * howMany3p;\n        this.setState({\n            totalPrice: tempTotalPrice\n        });\n\n    }\n\n    countLessons = () => {\n        let lessons = this.props.lessons;\n\n        lessons = lessons.filter(lesson => lesson.status === \"Finished_Unpaid\");\n        let count1p = 0;\n        let count2p = 0;\n        let count3p = 0;\n        for(let i = 0; i < lessons.length; ++i) {\n            switch(lessons[i].nrStudents) {\n                case 1:\n                    count1p+=lessons[i].howLong;\n                    break;\n                case 2:\n                    count2p+=lessons[i].howLong;\n                    break;\n                default:\n                    count3p+=lessons[i].howLong;\n                    break;\n            }\n        this.setState({\n            howMany1p: count1p,\n            howMany2p: count2p,\n            howMany3p: count3p\n        });\n        }\n    }\n\n\n    findAllPriceTables = () => {\n        let fullNrOfLessons = this.props.student.student.lessonHours;\n        this.props.fetchPriceTableWithNrOfLessons(fullNrOfLessons);\n        setTimeout(() => {this.props.fetchAllPriceTables(this.props.priceTable.priceTable);\n            let priceOneHTab = [this.props.priceTable.priceTable.onePPrice, this.props.priceTable.priceTable.twoPPrice, this.props.priceTable.priceTable.threePPrice]\n            this.setState({priceOneH: priceOneHTab})\n        \n        }, 100);\n          \n    }\n\n    findStudentById = (idStudent) => {\n\n        this.props.fetchStudent(idStudent);\n        setTimeout(() => {\n\n            let student = this.props.student.student;\n            if (student != null) {\n                this.setState({\n                    student: student\n                    // id: student.id,\n                    // lastName: student.lastName,\n                    // firstName: student.firstName,\n                    // idCardNr: student.idCardNr,\n                    // telNr: student.telNr,\n                    // paymentStatus: student.paymentStatus,\n                    // lessonHours: student.lessonHours,\n                    // unpaidLessons: student.unpaidLessons,\n                    // moneyOwing: student.moneyOwing,\n                    // moneyInAdvance: student.moneyInAdvance\n                });\n            }\n        }, 1000);\n    };\n\n\n    // lessonStatusChange = (lesson, newStatus) => {\n    //     lesson.status = newStatus;\n    //     this.props.updateLesson(lesson);\n    //     this.props.fetchAllLessonsForStudent(+this.props.match.params.id, this.props.lesson.currentPage, this.state.lessonsPerPage);\n    // }\n\n    settleChange = event => {\n        this.setState({\n            [event.target.name]: event.target.value,\n            priceOneH: this.state.priceOneH * ( (100-this.state.discount)/100 )\n        });\n\n    };\n\n    handleCheckboxChange = (whichOne) => {\n        // if(!this.state.disableCustomPrice)\n        this.setState({\n            [whichOne]: !this.state[whichOne],\n            priceOneH: ''\n        });\n        // else\n        // this.setState({ disableCustomPrice: !this.state.disableCustomPrice});\n    }\n\n    render() {\n        const searchedLesson = this.props.lesson.searchedLesson;\n        const totalPages = this.props.lesson.totalPages;\n        const totalElements = this.props.lesson.totalElements;\n        const lesson = this.props.lesson;\n        const lessons = this.props.lessons;\n        const currentPage = this.props.lesson.currentPage;\n        const student = this.props.student.student;\n        const { moneyInAdvance, unpaidLessons, paymentStatus, lessonHours } = this.props.student.student;\n        const priceTables = this.props.priceTable.priceTables;\n        const {priceTable, priceOneH, discount, totalPrice, payForHowMany, howMany1p, howMany2p, howMany3p, customPrice} = this.state;\n\n\n        const pageNumCss = {\n            width: \"45px\",\n            border: \"1px solid #F8F8FF\",\n            color: \"#F8F8FF\",\n            textAlign: \"center\",\n            fontWeight: \"bold\"\n        };\n\n        const searchBoxCss = {\n            width: \"100px\",\n            border: \"1px solid #17A2B8\",\n            color: \"#17A2B8\",\n            textAlign: \"center\",\n            fontWeight: \"bold\"\n        };\n\n        return (\n            <div>\n                <div style={{ \"display\": this.state.show ? \"block\" : \"none\" }}>\n                    <SuccessToast show={this.state.show} message={\"Student Settled Successfully\"} type=\"success\" />\n                </div>\n\n                {/* <div style={{ \"display\": this.state.showInvalidMessage ? \"block\" : \"none\" }}>\n                <SuccessToast show={this.state.showInvalidMessage} message={\"Invalid Data - might be in the data base already\"} type=\"dangerNoSuccess\" />\n            </div> */}\n\n                <Card className={\"border border-dark bg-dark text-white\"}>\n                    <Card.Header>\n                        <FontAwesomeIcon icon={faWallet} /> Settle Student\n                </Card.Header>\n                    <Form >\n                        <Card.Body>\n                            <div id=\"container\" style={{ \"clear\": \"both\", \"display\": \"flex\", \"justifyContent\": \"space-between\" }}>\n\n                                <div>\n                                    <h5>Student</h5>\n                                    <h4>{student.firstName + \" \" + student.lastName}</h4>\n\n                                    <h6>Full Nr of Lessons [h]</h6>\n                                    <h5>{lessonHours}</h5>\n\n                                    <h6>Nr of Unpaid Lessons [h] (1p/2p/+3p)</h6>\n                                    <h5>{unpaidLessons} ({howMany1p}/{howMany2p}/{howMany3p})</h5>\n\n                                    <h6>Money in advance [zl]</h6>\n                                    <h5>{moneyInAdvance}</h5>\n\n                                    <h5>Total price</h5>\n                                    <h4>{totalPrice ? totalPrice : 0 } zl</h4>\n\n                                </div>\n                                <div>\n                                    <Form.Group as={Col} controlId=\"formGridPriceTables\">\n                                        <Form.Label>Offer</Form.Label>\n                                        <Form.Control\n                                            disabled={!this.state.disableCustomPrice}\n                                            required as=\"select\"\n                                            autoComplete=\"off\"\n                                            name=\"priceTable\"\n                                            value={priceTable}\n                                            onChange={this.settleChange}\n                                            className={\"bg-dark text-white\"} >\n                                            {this.state.disableCustomPrice ? priceTables.map(priceTable =>\n                                                <option key={priceTable.id} value={JSON.stringify(priceTable)}>\n                                                    {priceTable.name + \" \" + priceTable.minNrHours + \"h\"\n                                                    }\n                                                </option>\n                                            ) : \"\"}\n                                        </Form.Control>\n                                    </Form.Group>\n\n                                    <InputGroup className=\"mb-3\">\n                                        <InputGroup.Prepend >\n                                            <InputGroup.Checkbox onChange={() => this.handleCheckboxChange(\"disableCustomPrice\")} />\n                                        </InputGroup.Prepend>\n                                        <Form.Group as={Col} controlId=\"formGridCustomPrice\" name=\"customPrice\">\n                                            <Form.Label>Custom Price</Form.Label>\n                                            <Form.Control\n                                                disabled={this.state.disableCustomPrice}\n                                                autoComplete=\"off\"\n                                                type=\"test\"\n                                                name=\"customPrice\"\n                                                value={customPrice}\n                                                onChange={this.settleChange}\n                                                placeholder={this.state.disableCustomPrice ? \"\" : \"Enter Price [zl]\"}\n                                                className={\"bg-dark text-white\"} />\n                                        </Form.Group>\n                                    </InputGroup>\n\n                                    <InputGroup className=\"mb-3\">\n                                        <InputGroup.Prepend >\n                                            <InputGroup.Checkbox onChange={() => this.handleCheckboxChange(\"disableDiscount\")} />\n                                        </InputGroup.Prepend>\n                                        <Form.Group as={Col} controlId=\"formGridDiscount\" name=\"discount\">\n                                            <Form.Label>Discount [%]</Form.Label>\n                                            <Form.Control\n                                                disabled={this.state.disableDiscount}\n                                                autoComplete=\"off\"\n                                                type=\"test\"\n                                                name=\"discount\"\n                                                value={discount}\n                                                onChange={this.settleChange}\n                                                placeholder={this.state.disableDiscount ? \"\" : \"Enter Discount [%]\"}\n                                                className={\"bg-dark text-white\"} />\n                                        </Form.Group>\n                                    </InputGroup>\n\n                                    <Form.Group as={Col} controlId=\"formGridPayForHowMany\">\n                                        <Form.Label>How many lessons to pay for</Form.Label>\n                                        <Form.Control required\n                                            autoComplete=\"off\"\n                                            name=\"payForHowMany\"\n                                            type=\"test\"\n                                            value={payForHowMany}\n                                            onChange={this.studentChange}\n                                            placeholder=\"How Many\"\n                                            className={\"bg-dark text-white\"} />\n                                    </Form.Group>\n                                </div>\n\n                            </div>\n\n                        </Card.Body>\n\n                        <Card.Footer>\n                            <div>\n                                <Button size=\"sm\" variant=\"primary\" type=\"submit\">\n                                    <FontAwesomeIcon icon={faSave} /> {this.state.id ? \"Update\" : \"Submit\"}\n                                </Button>\n                                {'      '}\n\n                                <Button size=\"sm\" variant=\"secondary\" type=\"reset\">\n                                    <FontAwesomeIcon icon={faUndo} />  Reset\n                </Button>\n                            </div>\n                            {'      '}\n                            <div>\n                                <Button size=\"sm\" variant=\"light\" type=\"button\" onClick={() => { }}>\n                                    <FontAwesomeIcon icon={faArrowLeft} />  Return\n                </Button>\n                            </div>\n                        </Card.Footer>\n                    </Form >\n\n\n                </Card >\n            </div>\n        );\n    }\n\n}\n\nconst mapStateToProps = state => {\n    return {\n        lessons: state.lesson.lessons,\n        lesson: state.lesson.lesson,\n        student: state.student,\n        priceTable: state.priceTable\n    }\n};\n\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        fetchAllLessonsForStudent: (studentId, currentPage, size) => dispatch(fetchAllLessonsForStudent(studentId, currentPage, size)),\n        deleteLesson: (lessonId) => dispatch(deleteLesson(lessonId)),\n        searchLessons: (searchedLesson, currentPage, sizePage) => dispatch(searchLessons(searchedLesson, currentPage, sizePage)),\n        updateLesson: (lesson) => dispatch(updateLesson(lesson)),\n        fetchStudent: (studentId) => dispatch(fetchStudent(studentId)),\n        fetchAllPriceTables: (firstElement) => dispatch(fetchAllPriceTables(firstElement)),\n        fetchPriceTableWithNrOfLessons: (fullNrOfLessons) => dispatch(fetchPriceTableWithNrOfLessons(fullNrOfLessons))\n    }\n\n};\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StudentSettle);"]},"metadata":{},"sourceType":"module"}