{"ast":null,"code":"var _jsxFileName = \"/home/michal/Desktop/projekty/java/SurfSchoolSchedule/SurfSchoolSchedule/surf-school-schedule/src/components/Lesson/Schedule.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { Card, Table, ButtonGroup, Button, InputGroup, FormControl } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUsers, faWallet, faEdit, faTrash, faUserPlus, faStepBackward, faFastBackward, faStepForward, faFastForward, faSearch, faTimes, faCheckSquare } from '@fortawesome/free-solid-svg-icons';\nimport SuccessToast from '../SuccessToast';\nimport './../../style/Style.css';\n\nclass Schedule extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.findAllInstructors = () => {\n      axios.get(\"http://localhost:8080/instructor-api/list?page=0&size=999999999&sortBy=paymentStatus&sortDir=desc\").then(response => response.data).then(data => {\n        if (!this.state.instructors.length) // this.state.instructors.push(\"Select Instructor\");\n          this.setState({\n            instructors: this.state.instructors.concat(data.content)\n          });\n        if (this.state.id) this.setState({\n          instructors: this.state.instructors.filter(instructor => instructor.id !== this.state.instructors[0].id)\n        });\n      });\n    };\n\n    this.deleteLesson = idLesson => {\n      axios.delete(\"http://localhost:8080/lesson-api/list/\" + idLesson).then(response => {\n        if (response.data != null) {\n          this.setState({\n            \"show\": true\n          });\n          setTimeout(() => this.setState({\n            \"show\": false\n          }), 3000);\n          this.setState({\n            lessons: this.state.lessons.filter(lesson => lesson.id !== idLesson)\n          });\n        } else {\n          this.setState({\n            \"show\": false\n          });\n        }\n      });\n    };\n\n    this.changePage = event => {\n      let target = parseInt(event.target.value);\n\n      if (this.state.searchedLesson) {\n        this.searchLesson(target);\n      } else {\n        this.findAllLessons(target);\n      }\n\n      this.setState({\n        [event.target.name]: target\n      });\n    };\n\n    this.firstPage = () => {\n      let firstPage = 1;\n\n      if (this.state.currentPage > firstPage) {\n        if (this.state.searchedLesson) {\n          this.searchLesson(firstPage);\n        } else {\n          this.findAllLessons(firstPage);\n        }\n      }\n    };\n\n    this.prevPage = () => {\n      let prevPage = this.state.currentPage - 1;\n\n      if (this.state.currentPage > 1) {\n        if (this.state.searchedLesson) {\n          this.searchLesson(prevPage);\n        } else {\n          this.findAllLessons(prevPage);\n        }\n      }\n    };\n\n    this.lastPage = () => {\n      // let lessonsLength = this.props.lessonData.lessons.length;\n      let lessonsLength = this.state.lessons.length;\n      let lastPage = Math.ceil(this.state.totalElements / this.state.lessonsPerPage);\n\n      if (this.state.currentPage < lastPage) {\n        if (this.state.searchedLesson) {\n          this.searchLesson(lastPage);\n        } else {\n          this.findAllLessons(lastPage);\n        }\n      }\n    };\n\n    this.nextPage = () => {\n      let nextPage = this.state.currentPage + 1;\n\n      if (this.state.currentPage < Math.ceil(this.state.totalElements / this.state.lessonsPerPage)) {\n        if (this.state.searchedLesson) {\n          this.searchLesson(nextPage);\n        } else {\n          this.findAllLessons(nextPage);\n        }\n      }\n    };\n\n    this.searchChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.cancelSearch = () => {\n      this.setState({\n        \"searchedLesson\": ''\n      });\n    };\n\n    this.sortData = () => {\n      this.setState(state => ({\n        sortToggle: !state.sortToggle\n      }));\n      this.findAllLessons(this.state.currentPage);\n    };\n\n    this.searchLesson = currentPage => {\n      currentPage -= 1;\n      axios.get(\"http://localhost:8080/lesson-api/search/\" + this.state.searchedLesson + \"?page=\" + currentPage + \"&size=\" + this.state.lessonsPerPage).then(response => response.data).then(data => {\n        this.setState({\n          lessons: data.content,\n          totalPages: data.totalPages,\n          totalElements: data.totalElements,\n          currentPage: data.number + 1\n        });\n      });\n    };\n\n    this.lessonStatusChange = (lesson, newStatus) => {\n      lesson.status = newStatus;\n      axios.put(\"http://localhost:8080/lesson-api/\" + lesson.id, lesson).then(response => {\n        if (response.data != null) {\n          // this.setState({ \"show\": true, \"method\": \"put\" });\n          // setTimeout(() => this.setState({ \"show\": false }), 3000);\n          // setTimeout(() => this.returnToList(), 1000);\n          console.log(\"success\");\n        } else {\n          console.log(\":(\"); // this.setState({ \"show\": false });\n        }\n      });\n      console.log(this);\n      this.findAllLessons(this.state.currentPage);\n      this.findAllLessons(this.state.currentPage);\n    };\n\n    this.returnRow = instructor => {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 17\n        }\n      }, instructor.firstName + \" \" + instructor.lastName), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 17\n        }\n      }, this.returnLesson(\"9:00\")), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 17\n        }\n      }, this.returnLesson(\"10:00\")), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 17\n        }\n      }, this.returnLesson(\"11:00\")), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 17\n        }\n      }, this.returnLesson(\"12:00\")), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 17\n        }\n      }, this.returnLesson(\"13:00\")), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 17\n        }\n      }, this.returnLesson(\"14:00\")), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 17\n        }\n      }, this.returnLesson(\"15:00\")), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 17\n        }\n      }, this.returnLesson(\"16:00\")), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 17\n        }\n      }, this.returnLesson(\"17:00\")), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 17\n        }\n      }, this.returnLesson(\"18:00\")), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 17\n        }\n      }, this.returnLesson(\"19:00\")), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 17\n        }\n      }, this.returnLesson(\"20:00\")));\n    };\n\n    this.state = {\n      instructors: [],\n      lessons: [],\n      currentPage: 1,\n      lessonsPerPage: 5,\n      searchedLesson: '',\n      sortToggle: false\n    };\n  }\n\n  componentDidMount() {\n    this.findAllLessons(this.state.currentPage);\n    this.findAllInstructors();\n  }\n\n  findAllLessons(currentPage) {\n    currentPage -= 1;\n    let sortDirection = this.state.sortToggle ? \"asc\" : \"desc\";\n    axios.get(\"http://localhost:8080/lesson-api/list?page=\" + currentPage + \"&size=\" + this.state.lessonsPerPage + \"&sortBy=status&sortDir=\" + sortDirection).then(response => response.data).then(data => {\n      this.setState({\n        lessons: data.content,\n        totalPages: data.totalPages,\n        totalElements: data.totalElements,\n        currentPage: data.number + 1\n      }, () => this.checkIfLessonInThePast());\n    });\n  } //change status of lessons that have their date in the past and were not given into not given\n\n\n  checkIfLessonInThePast() {\n    let today = new Date();\n\n    for (let i = 0; i < this.state.lessons.length; ++i) {\n      let temp = new Date(this.state.lessons[i].date);\n\n      if (this.state.lessons[i].status === \"To_Give\" && temp < today) {\n        console.log(\"asd\");\n        this.lessonStatusChange(this.state.lessons[i], 3);\n      }\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"border border-dark bg-dark text-white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      variant: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 37\n      }\n    }, \"Instructor\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 37\n      }\n    }, \"9:00\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 37\n      }\n    }, \"10:00\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 37\n      }\n    }, \"11:00\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 37\n      }\n    }, \"12:00\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 37\n      }\n    }, \"13:00\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 37\n      }\n    }, \"14:00\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 37\n      }\n    }, \"15:00\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 37\n      }\n    }, \"16:00\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 37\n      }\n    }, \"17:00\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 37\n      }\n    }, \"18:00\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 37\n      }\n    }, \"19:00\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 37\n      }\n    }, \"20:00\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 29\n      }\n    }, this.state.instructors.map(instructor => this.returnRow(instructor))))), /*#__PURE__*/React.createElement(Card.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nexport default Schedule;","map":{"version":3,"sources":["/home/michal/Desktop/projekty/java/SurfSchoolSchedule/SurfSchoolSchedule/surf-school-schedule/src/components/Lesson/Schedule.js"],"names":["React","axios","Link","Card","Table","ButtonGroup","Button","InputGroup","FormControl","FontAwesomeIcon","faUsers","faWallet","faEdit","faTrash","faUserPlus","faStepBackward","faFastBackward","faStepForward","faFastForward","faSearch","faTimes","faCheckSquare","SuccessToast","Schedule","Component","constructor","props","findAllInstructors","get","then","response","data","state","instructors","length","setState","concat","content","id","filter","instructor","deleteLesson","idLesson","delete","setTimeout","lessons","lesson","changePage","event","target","parseInt","value","searchedLesson","searchLesson","findAllLessons","name","firstPage","currentPage","prevPage","lastPage","lessonsLength","Math","ceil","totalElements","lessonsPerPage","nextPage","searchChange","cancelSearch","sortData","sortToggle","totalPages","number","lessonStatusChange","newStatus","status","put","console","log","returnRow","firstName","lastName","returnLesson","componentDidMount","sortDirection","checkIfLessonInThePast","today","Date","i","temp","date","render","map"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { Card, Table, ButtonGroup, Button, InputGroup, FormControl } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUsers, faWallet, faEdit, faTrash, faUserPlus, faStepBackward, faFastBackward, faStepForward, faFastForward, faSearch, faTimes, faCheckSquare } from '@fortawesome/free-solid-svg-icons';\nimport SuccessToast from '../SuccessToast';\n\nimport './../../style/Style.css';\n\n\nclass Schedule extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            instructors: [],\n            lessons: [],\n            currentPage: 1,\n            lessonsPerPage: 5,\n            searchedLesson: '',\n            sortToggle: false\n        };\n    }\n\n    componentDidMount() {\n        this.findAllLessons(this.state.currentPage);\n        this.findAllInstructors();\n    }\n\n\n\n    findAllInstructors = () => {\n        axios.get(\"http://localhost:8080/instructor-api/list?page=0&size=999999999&sortBy=paymentStatus&sortDir=desc\")\n            .then(response => response.data)\n            .then((data) => {\n                if (!this.state.instructors.length)\n                    // this.state.instructors.push(\"Select Instructor\");\n\n                    this.setState({\n                        instructors: this.state.instructors.concat(data.content)\n                    });\n\n                if (this.state.id)\n                    this.setState({\n                        instructors: this.state.instructors.filter(instructor => instructor.id !== this.state.instructors[0].id)\n                    });\n\n            });\n\n    };\n\n    findAllLessons(currentPage) {\n        currentPage -= 1;\n        let sortDirection = this.state.sortToggle ? \"asc\" : \"desc\";\n        axios.get(\"http://localhost:8080/lesson-api/list?page=\" + currentPage + \"&size=\" + this.state.lessonsPerPage + \"&sortBy=status&sortDir=\" + sortDirection)\n            .then(response => response.data)\n            .then((data) => {\n                this.setState({\n                    lessons: data.content,\n                    totalPages: data.totalPages,\n                    totalElements: data.totalElements,\n                    currentPage: data.number + 1\n                }, () => this.checkIfLessonInThePast()\n\n                );\n            }\n            );\n\n    }\n\n    //change status of lessons that have their date in the past and were not given into not given\n    checkIfLessonInThePast() {\n        let today = new Date();\n\n        for (let i = 0; i < this.state.lessons.length; ++i) {\n            let temp = new Date(this.state.lessons[i].date);\n            if (this.state.lessons[i].status === \"To_Give\" && temp < today) {\n                console.log(\"asd\");\n                this.lessonStatusChange(this.state.lessons[i], 3)\n            }\n        }\n    };\n\n\n    deleteLesson = (idLesson) => {\n        axios.delete(\"http://localhost:8080/lesson-api/list/\" + idLesson)\n            .then(response => {\n                if (response.data != null) {\n                    this.setState({ \"show\": true });\n                    setTimeout(() => this.setState({ \"show\": false }), 3000);\n                    this.setState({\n                        lessons: this.state.lessons.filter(lesson => lesson.id !== idLesson)\n                    });\n                } else {\n                    this.setState({ \"show\": false });\n                }\n            });\n    }\n\n    changePage = event => {\n        let target = parseInt(event.target.value);\n        if (this.state.searchedLesson) {\n            this.searchLesson(target)\n        } else {\n            this.findAllLessons(target);\n        }\n        this.setState({\n            [event.target.name]: target\n        });\n\n    };\n\n    firstPage = () => {\n        let firstPage = 1;\n        if (this.state.currentPage > firstPage) {\n            if (this.state.searchedLesson) {\n                this.searchLesson(firstPage)\n            } else {\n                this.findAllLessons(firstPage);\n            }\n        }\n    };\n\n    prevPage = () => {\n        let prevPage = this.state.currentPage - 1;\n        if (this.state.currentPage > 1) {\n            if (this.state.searchedLesson) {\n                this.searchLesson(prevPage)\n            } else {\n                this.findAllLessons(prevPage);\n            }\n        }\n    };\n\n    lastPage = () => {\n        // let lessonsLength = this.props.lessonData.lessons.length;\n        let lessonsLength = this.state.lessons.length;\n        let lastPage = Math.ceil(this.state.totalElements / this.state.lessonsPerPage);\n        if (this.state.currentPage < lastPage) {\n            if (this.state.searchedLesson) {\n                this.searchLesson(lastPage)\n            } else {\n                this.findAllLessons(lastPage);\n            }\n        }\n    };\n\n    nextPage = () => {\n        let nextPage = this.state.currentPage + 1;\n        if (this.state.currentPage < Math.ceil(this.state.totalElements / this.state.lessonsPerPage)) {\n            if (this.state.searchedLesson) {\n                this.searchLesson(nextPage)\n            } else {\n                this.findAllLessons(nextPage);\n            }\n        }\n    };\n\n    searchChange = event => {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    };\n\n    cancelSearch = () => {\n        this.setState({ \"searchedLesson\": '' })\n    };\n\n    sortData = () => {\n        this.setState(state => ({\n            sortToggle: !state.sortToggle\n        }));\n\n        this.findAllLessons(this.state.currentPage);\n    }\n\n    searchLesson = (currentPage) => {\n        currentPage -= 1;\n        axios.get(\"http://localhost:8080/lesson-api/search/\" + this.state.searchedLesson + \"?page=\" + currentPage + \"&size=\" + this.state.lessonsPerPage)\n            .then(response => response.data)\n            .then((data) => {\n                this.setState({\n                    lessons: data.content,\n                    totalPages: data.totalPages,\n                    totalElements: data.totalElements,\n                    currentPage: data.number + 1\n                });\n            });\n    }\n\n    lessonStatusChange = (lesson, newStatus) => {\n        lesson.status = newStatus;\n        axios.put(\"http://localhost:8080/lesson-api/\" + lesson.id, lesson)\n            .then(response => {\n                if (response.data != null) {\n                    // this.setState({ \"show\": true, \"method\": \"put\" });\n                    // setTimeout(() => this.setState({ \"show\": false }), 3000);\n                    // setTimeout(() => this.returnToList(), 1000);\n                    console.log(\"success\");\n                } else {\n                    console.log(\":(\");\n                    // this.setState({ \"show\": false });\n                }\n            });\n        console.log(this);\n        this.findAllLessons(this.state.currentPage);\n        this.findAllLessons(this.state.currentPage);\n\n    }\n\n\n    returnRow = (instructor) => {\n        return (\n            <tr>\n\n                <td>{instructor.firstName + \" \" + instructor.lastName}</td>\n                <td>{this.returnLesson(\"9:00\")}</td>\n                <td>{this.returnLesson(\"10:00\")}</td>\n                <td>{this.returnLesson(\"11:00\")}</td>\n                <td>{this.returnLesson(\"12:00\")}</td>\n                <td>{this.returnLesson(\"13:00\")}</td>\n                <td>{this.returnLesson(\"14:00\")}</td>\n                <td>{this.returnLesson(\"15:00\")}</td>\n                <td>{this.returnLesson(\"16:00\")}</td>\n                <td>{this.returnLesson(\"17:00\")}</td>\n                <td>{this.returnLesson(\"18:00\")}</td>\n                <td>{this.returnLesson(\"19:00\")}</td>\n                <td>{this.returnLesson(\"20:00\")}</td>\n            </tr>\n\n        );\n    }\n\n    render() {\n\n\n        return (\n            <div>\n\n                <Card className={\"border border-dark bg-dark text-white\"}>\n                    <Card.Header>\n\n\n                    </Card.Header>\n                    <Card.Body>\n                        <Table striped bordered hover variant=\"dark\">\n                            <thead>\n                                <tr>\n                                    <th>Instructor</th>\n                                    <th>9:00</th>\n                                    <th>10:00</th>\n                                    <th>11:00</th>\n                                    <th>12:00</th>\n                                    <th>13:00</th>\n                                    <th>14:00</th>\n                                    <th>15:00</th>\n                                    <th>16:00</th>\n                                    <th>17:00</th>\n                                    <th>18:00</th>\n                                    <th>19:00</th>\n                                    <th>20:00</th>\n\n                                </tr>\n                            </thead>\n\n\n                            <tbody>\n                                {this.state.instructors.map(instructor => (\n                                this.returnRow(instructor) ) ) }\n\n\n\n\n\n                            </tbody>\n\n                            {/* this.state.lessons.map(lesson => (\n                                        <tr key={lesson.id}>\n                                            <td>{lesson.instructor.firstName + \" \" + lesson.instructor.lastName}</td>\n                                            <td>{lesson.student.firstName + \" \" + lesson.student.lastName}</td>\n                                            <td>{lesson.date}</td>\n                                            <td>{lesson.time}</td>\n                                            <td>{lesson.howLong}</td>\n                                            <td>{lesson.nrStudents}</td>\n                                            <td>{lesson.status}</td>\n                                            <td>\n                                                <ButtonGroup>\n                                                    <Button size=\"sm\" variant=\"outline-success\" onClick={this.lessonStatusChange.bind(this, lesson, 2)}> <FontAwesomeIcon icon={faCheckSquare} /> </Button>\n                                                    <Link to={\"editLesson/\" + lesson.id}> <Button size=\"sm\" variant=\"outline-primary\"> <FontAwesomeIcon icon={faEdit} /> </Button> </Link>\n                                                    <Button size=\"sm\" variant=\"outline-danger\" onClick={this.deleteLesson.bind(this, lesson.id)}> <FontAwesomeIcon icon={faTrash} /> </Button>\n                                                </ButtonGroup>\n                                            </td>\n\n                                        </tr>\n                                    ) */}\n                        </Table>\n                    </Card.Body>\n                    <Card.Footer>\n\n\n\n                    </Card.Footer>\n                </Card>\n            </div>\n\n        );\n    }\n\n\n}\n\nexport default Schedule;"]},"metadata":{},"sourceType":"module"}