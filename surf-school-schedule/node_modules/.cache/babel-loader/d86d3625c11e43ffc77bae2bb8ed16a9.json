{"ast":null,"code":"var _jsxFileName = \"/home/michal/Desktop/projekty/java/SurfSchoolSchedule/SurfSchoolSchedule/surf-school-schedule/src/components/Instructor/Instructor.js\";\nimport React from 'react';\nimport { Form, Card, Col, Button } from 'react-bootstrap';\nimport { faSave, faUndo, faArrowLeft, faEdit, faPlusSquare } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport SuccessToast from '../SuccessToast';\nimport { connect } from 'react-redux';\nimport { saveInstructor, fetchInstructor, updateInstructor } from '../../services/index';\n\nclass Instructor extends React.Component {\n  constructor(props) {\n    super(props);\n    this.initialState = {\n      id: '',\n      lastName: '',\n      firstName: '',\n      NrHoursWeek: 0,\n      NrHoursFull: 0,\n      WeekWage: 0\n    };\n\n    this.findInstructorById = idInstructor => {\n      axios.get(\"http://localhost:8080/instructor-api/\" + idInstructor).then(response => {\n        if (response.data != null) {\n          this.setState({\n            id: response.data.id,\n            lastName: response.data.lastName,\n            firstName: response.data.firstName,\n            NrHoursWeek: response.data.NrHoursWeek,\n            NrHoursFull: response.data.NrHoursFull,\n            WeekWage: response.data.WeekWage\n          });\n          console.log(response.data.lastName);\n        }\n      }).catch(error => {\n        console.error(\"Error: \" + error);\n      });\n    };\n\n    this.returnToList = () => {\n      return this.props.history.push(\"/instructors\");\n    };\n\n    this.submitInstructor = event => {\n      event.preventDefault();\n      const instructor = {\n        lastName: this.state.lastName,\n        firstName: this.state.firstName,\n        NrHoursWeek: this.state.NrHoursWeek,\n        NrHoursFull: this.state.NrHoursFull,\n        WeekWage: this.state.WeekWage\n      };\n      this.props.saveInstructor(instructor);\n      setTimeout(() => {\n        if (this.props.savedInstructorObject.instructor != null) {\n          this.setState({\n            \"show\": true,\n            \"method\": \"post\"\n          });\n          setTimeout(() => this.setState({\n            \"show\": false\n          }), 3000);\n          setTimeout(() => this.returnToList(), 1000);\n        } else {\n          this.setState({\n            \"show\": false\n          });\n        }\n      }, 2000); // axios.post(\"http://localhost:8080/instructor-api/list\", instructor)\n      //     .then(response => {\n      //         if (response.data != null) {\n      //             this.setState({ \"show\": true, \"method\": \"post\" });\n      //             setTimeout(() => this.setState({ \"show\": false }), 3000);\n      //             setTimeout(() => this.returnToList(), 1000);\n      //         } else {\n      //             this.setState({ \"show\": false });\n      //         }\n      //     });\n    };\n\n    this.updateInstructor = event => {\n      event.preventDefault();\n      const instructor = {\n        id: this.state.id,\n        lastName: this.state.lastName,\n        firstName: this.state.firstName,\n        NrHoursWeek: this.state.NrHoursWeek,\n        NrHoursFull: this.state.NrHoursFull,\n        WeekWage: this.state.WeekWage\n      };\n      axios.put(\"http://localhost:8080/instructor-api/\" + this.state.id, instructor).then(response => {\n        if (response.data != null) {\n          this.setState({\n            \"show\": true,\n            \"method\": \"put\"\n          });\n          setTimeout(() => this.setState({\n            \"show\": false\n          }), 3000);\n          setTimeout(() => this.returnToList(), 1000);\n        } else {\n          this.setState({\n            \"show\": false\n          });\n        }\n      });\n      this.setState(this.initialState);\n    };\n\n    this.resetInstructor = () => {\n      this.setState(() => this.initialState);\n    };\n\n    this.instructorChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.state = this.initialState;\n    this.state.show = false;\n    this.state.method = 'post';\n    this.instructorChange = this.instructorChange.bind(this);\n    this.submitInstructor = this.submitInstructor.bind(this);\n  }\n\n  componentDidMount() {\n    const idInstructor = +this.props.match.params.id;\n\n    if (idInstructor) {\n      this.findInstructorById(idInstructor);\n    }\n  }\n\n  render() {\n    const {\n      firstName,\n      lastName\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        \"display\": this.state.show ? \"block\" : \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(SuccessToast, {\n      show: this.state.show,\n      message: this.state.method === \"put\" ? \"Instructor Updated Successfully\" : \"Instructor Saved Successfully.\",\n      type: \"success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Card, {\n      className: \"border border-dark bg-dark text-white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: this.state.id ? faEdit : faPlusSquare,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 25\n      }\n    }), \" \", this.state.id ? \"Update Instructor\" : \"Add New Instructor\"), /*#__PURE__*/React.createElement(Form, {\n      onReset: this.resetInstructor,\n      onSubmit: this.state.id ? this.updateInstructor : this.submitInstructor,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridLastName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 37\n      }\n    }, \"Last Name\"), /*#__PURE__*/React.createElement(Form.Control, {\n      required: true,\n      autoComplete: \"off\",\n      type: \"test\",\n      name: \"lastName\",\n      value: lastName,\n      onChange: this.instructorChange,\n      placeholder: \"Enter Last Name\",\n      className: \"bg-dark text-white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridFirstName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 37\n      }\n    }, \"First Name\"), /*#__PURE__*/React.createElement(Form.Control, {\n      required: true,\n      autoComplete: \"off\",\n      type: \"test\",\n      name: \"firstName\",\n      value: firstName,\n      onChange: this.instructorChange,\n      placeholder: \" Enter First Name\",\n      className: \"bg-dark text-white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 37\n      }\n    })))), /*#__PURE__*/React.createElement(Card.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      size: \"sm\",\n      variant: \"primary\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faSave,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 37\n      }\n    }), \" \", this.state.id ? \"Update\" : \"Submit\"), '      ', /*#__PURE__*/React.createElement(Button, {\n      size: \"sm\",\n      variant: \"secondary\",\n      type: \"reset\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faUndo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 37\n      }\n    }), \"  Reset\")), '      ', /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      size: \"sm\",\n      variant: \"light\",\n      type: \"button\",\n      onClick: this.returnToList.bind(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faArrowLeft,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 37\n      }\n    }), \"  Return\"))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    savedInstructorObject: state.instructor,\n    instructorObject: state.instructor,\n    updatedInstructorObject: state.instructor\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    saveInstructor: instructor => dispatch(saveInstructor(instructor)),\n    fetchInstructor: instructorId => dispatch(fetchInstructor(instructorId)),\n    updateInstructor: instructor => dispatch(updateInstructor(instructor))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Instructor);","map":{"version":3,"sources":["/home/michal/Desktop/projekty/java/SurfSchoolSchedule/SurfSchoolSchedule/surf-school-schedule/src/components/Instructor/Instructor.js"],"names":["React","Form","Card","Col","Button","faSave","faUndo","faArrowLeft","faEdit","faPlusSquare","FontAwesomeIcon","Link","axios","SuccessToast","connect","saveInstructor","fetchInstructor","updateInstructor","Instructor","Component","constructor","props","initialState","id","lastName","firstName","NrHoursWeek","NrHoursFull","WeekWage","findInstructorById","idInstructor","get","then","response","data","setState","console","log","catch","error","returnToList","history","push","submitInstructor","event","preventDefault","instructor","state","setTimeout","savedInstructorObject","put","resetInstructor","instructorChange","target","name","value","show","method","bind","componentDidMount","match","params","render","mapStateToProps","instructorObject","updatedInstructorObject","mapDispatchToProps","dispatch","instructorId"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Form, Card, Col, Button } from 'react-bootstrap';\nimport { faSave, faUndo, faArrowLeft, faEdit, faPlusSquare } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport SuccessToast from '../SuccessToast';\n\n\nimport { connect } from 'react-redux';\nimport { saveInstructor, fetchInstructor, updateInstructor } from '../../services/index';\n\nclass Instructor extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = this.initialState;\n        this.state.show = false;\n        this.state.method = 'post';\n        this.instructorChange = this.instructorChange.bind(this);\n        this.submitInstructor = this.submitInstructor.bind(this);\n    }\n\n    initialState = {\n        id: '', lastName: '', firstName: '', NrHoursWeek: 0, NrHoursFull: 0, WeekWage: 0\n    }\n\n    componentDidMount() {\n        const idInstructor = +this.props.match.params.id;\n        if (idInstructor) {\n            this.findInstructorById(idInstructor);\n        }\n    };\n\n\n    findInstructorById = (idInstructor) => {\n        axios.get(\"http://localhost:8080/instructor-api/\" + idInstructor)\n            .then(response => {\n                if (response.data != null) {\n                    this.setState({\n                        id: response.data.id,\n                        lastName: response.data.lastName,\n                        firstName: response.data.firstName,\n                        NrHoursWeek: response.data.NrHoursWeek,\n                        NrHoursFull: response.data.NrHoursFull,\n                        WeekWage: response.data.WeekWage,\n                    });\n                    console.log(response.data.lastName);\n\n                }\n            }).catch((error) => {\n                console.error(\"Error: \" + error);\n            });\n    };\n\n    returnToList = () => {\n        return this.props.history.push(\"/instructors\");\n    };\n\n    submitInstructor = event => {\n        event.preventDefault();\n\n        const instructor = {\n            lastName: this.state.lastName,\n            firstName: this.state.firstName,\n            NrHoursWeek: this.state.NrHoursWeek,\n            NrHoursFull: this.state.NrHoursFull,\n            WeekWage: this.state.WeekWage,\n        };\n\n        this.props.saveInstructor(instructor);\n        setTimeout(() => {\n        if (this.props.savedInstructorObject.instructor != null) {\n            this.setState({ \"show\": true, \"method\": \"post\" });\n            setTimeout(() => this.setState({ \"show\": false }), 3000);\n            setTimeout(() => this.returnToList(), 1000);\n        } else {\n            this.setState({ \"show\": false });\n        }\n    }, 2000);\n        // axios.post(\"http://localhost:8080/instructor-api/list\", instructor)\n        //     .then(response => {\n        //         if (response.data != null) {\n        //             this.setState({ \"show\": true, \"method\": \"post\" });\n        //             setTimeout(() => this.setState({ \"show\": false }), 3000);\n        //             setTimeout(() => this.returnToList(), 1000);\n        //         } else {\n        //             this.setState({ \"show\": false });\n        //         }\n        //     });\n\n    };\n\n    updateInstructor = event => {\n        event.preventDefault();\n\n        const instructor = {\n            id: this.state.id,\n            lastName: this.state.lastName,\n            firstName: this.state.firstName,\n            NrHoursWeek: this.state.NrHoursWeek,\n            NrHoursFull: this.state.NrHoursFull,\n            WeekWage: this.state.WeekWage,\n        };\n        axios.put(\"http://localhost:8080/instructor-api/\" + this.state.id, instructor)\n            .then(response => {\n                if (response.data != null) {\n                    this.setState({ \"show\": true, \"method\": \"put\" });\n                    setTimeout(() => this.setState({ \"show\": false }), 3000);\n                    setTimeout(() => this.returnToList(), 1000);\n                } else {\n                    this.setState({ \"show\": false });\n                }\n            });\n        this.setState(this.initialState);\n    }\n\n    resetInstructor = () => {\n        this.setState(() => this.initialState);\n    };\n\n    instructorChange = event => {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    };\n\n    render() {\n        const { firstName, lastName } = this.state;\n        return (\n            <div>\n                <div style={{ \"display\": this.state.show ? \"block\" : \"none\" }}>\n                    <SuccessToast show={this.state.show} message={this.state.method === \"put\" ? \"Instructor Updated Successfully\" : \"Instructor Saved Successfully.\"} type=\"success\" />\n                </div>\n\n                <Card className={\"border border-dark bg-dark text-white\"}>\n                    <Card.Header>\n                        <FontAwesomeIcon icon={this.state.id ? faEdit : faPlusSquare} /> {this.state.id ? \"Update Instructor\" : \"Add New Instructor\"}\n                    </Card.Header>\n                    <Form onReset={this.resetInstructor} onSubmit={this.state.id ? this.updateInstructor : this.submitInstructor}>\n                        <Card.Body>\n                            <Form.Row>\n                                <Form.Group as={Col} controlId=\"formGridLastName\">\n                                    <Form.Label>Last Name</Form.Label>\n                                    <Form.Control required\n                                        autoComplete=\"off\"\n                                        type=\"test\"\n                                        name=\"lastName\"\n                                        value={lastName}\n                                        onChange={this.instructorChange}\n                                        placeholder=\"Enter Last Name\"\n                                        className={\"bg-dark text-white\"} />\n                                </Form.Group>\n\n                                <Form.Group as={Col} controlId=\"formGridFirstName\">\n                                    <Form.Label>First Name</Form.Label>\n                                    <Form.Control required\n                                        autoComplete=\"off\"\n                                        type=\"test\"\n                                        name=\"firstName\"\n                                        value={firstName}\n                                        onChange={this.instructorChange}\n                                        placeholder=\" Enter First Name\"\n                                        className={\"bg-dark text-white\"} />\n                                </Form.Group>\n                            </Form.Row>\n\n                        </Card.Body>\n\n                        <Card.Footer>\n                            <div>\n                                <Button size=\"sm\" variant=\"primary\" type=\"submit\">\n                                    <FontAwesomeIcon icon={faSave} /> {this.state.id ? \"Update\" : \"Submit\"}\n                                </Button>\n                                {'      '}\n\n                                <Button size=\"sm\" variant=\"secondary\" type=\"reset\">\n                                    <FontAwesomeIcon icon={faUndo} />  Reset\n                    </Button>\n                            </div>\n                            {'      '}\n                            <div>\n                                <Button size=\"sm\" variant=\"light\" type=\"button\" onClick={this.returnToList.bind()}>\n                                    <FontAwesomeIcon icon={faArrowLeft} />  Return\n                    </Button>\n                            </div>\n                        </Card.Footer>\n                    </Form >\n\n\n                </Card >\n            </div>\n        );\n    }\n\n}\n\nconst mapStateToProps = state => {\n    return {\n        savedInstructorObject: state.instructor,\n        instructorObject: state.instructor,\n        updatedInstructorObject: state.instructor\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        saveInstructor: (instructor) => dispatch(saveInstructor(instructor)),\n        fetchInstructor: (instructorId) => dispatch(fetchInstructor(instructorId)),\n        updateInstructor: (instructor) => dispatch(updateInstructor(instructor))\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Instructor);\n"]},"metadata":{},"sourceType":"module"}