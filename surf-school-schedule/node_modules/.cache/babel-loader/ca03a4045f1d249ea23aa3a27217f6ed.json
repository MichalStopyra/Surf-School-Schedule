{"ast":null,"code":"import { SAVE_PRICE_TABLE_REQUEST, FETCH_PRICE_TABLE_REQUEST, UPDATE_PRICE_TABLE_REQUEST, DELETE_PRICE_TABLE_REQUEST, PRICE_TABLE_SUCCESS, PRICE_TABLE_FAILURE, FETCH_ALL_PRICE_TABLES_REQUEST, FETCH_ALL_PRICE_TABLES_SUCCESS } from \"./priceTableTypes\";\nimport axios from 'axios';\nexport const fetchAllPriceTables = firstElement => {\n  console.log(firstElement);\n  return dispatch => {\n    axios.get(\"http://localhost:8080/priceTable-api/list?page=0&size=9999999&sortBy=minNrHours&sortDir=asc\").then(response => {\n      if (firstElement) {\n        response.data.content.unshift(firstElement);\n        response.data.content = response.data.content.filter((item, index, self) => index === self.findIndex(e => e.id === item.id));\n      }\n\n      dispatch(fetchAllPriceTablesSuccess(response.data.content));\n    }).catch(error => {\n      dispatch(priceTableFailure(error.message));\n    });\n  };\n};\n\nconst fetchAllPriceTablesRequest = () => {\n  return {\n    type: FETCH_ALL_PRICE_TABLES_REQUEST\n  };\n};\n\nexport const savePriceTable = priceTable => {\n  return dispatch => {\n    axios.post(\"http://localhost:8080/priceTable-api/list\", priceTable).then(response => {\n      //  dispatch(priceTableSuccess(response.data));\n      dispatch(savePriceTableRequest(priceTable));\n    }).catch(error => {\n      console.log(error);\n      dispatch(priceTableFailure(error));\n    });\n  };\n};\n\nconst savePriceTableRequest = priceTable => {\n  return {\n    type: SAVE_PRICE_TABLE_REQUEST,\n    newItem: priceTable\n  };\n};\n\nconst fetchPriceTableRequest = updatedPriceTable => {\n  return {\n    type: FETCH_PRICE_TABLE_REQUEST,\n    updatedPriceTable: updatedPriceTable\n  };\n};\n\nexport const fetchPriceTable = priceTableId => {\n  return dispatch => {\n    axios.get(\"http://localhost:8080/priceTable-api/\" + priceTableId).then(response => {\n      dispatch(fetchPriceTableRequest(response.data)); //dispatch(priceTableSuccess(response.data.content));\n    }).catch(error => {\n      dispatch(priceTableFailure(error));\n    });\n  };\n};\nexport const fetchPriceTableWithNrOfLessons = fullNrOfLessons => {\n  return dispatch => {\n    axios.get(\"http://localhost:8080/priceTable-api/fullNrOfLessons/\" + fullNrOfLessons).then(response => {\n      console.log(response.data);\n      dispatch(fetchPriceTableRequest(response.data)); //dispatch(priceTableSuccess(response.data.content));\n    }).catch(error => {\n      dispatch(priceTableFailure(error));\n    });\n  };\n};\n\nconst updatePriceTableRequest = priceTable => {\n  return {\n    type: UPDATE_PRICE_TABLE_REQUEST,\n    updatedPriceTable: priceTable\n  };\n};\n\nexport const updatePriceTable = priceTable => {\n  //console.log(priceTable);\n  priceTable.NrHoursWeek = 0;\n  priceTable.NrHoursFull = 0;\n  priceTable.WeekWage = 0; //console.log(priceTable);\n\n  return dispatch => {\n    axios.put(\"http://localhost:8080/priceTable-api/\" + priceTable.id, priceTable).then(response => {\n      dispatch(updatePriceTableRequest(priceTable)); // dispatch(priceTableSuccess(response.data));\n    }).catch(error => {\n      console.log(error);\n      dispatch(priceTableFailure(error));\n    });\n  };\n};\n\nconst deletePriceTableRequest = priceTableId => {\n  return {\n    type: DELETE_PRICE_TABLE_REQUEST,\n    priceTableId: priceTableId\n  };\n};\n\nexport const deletePriceTable = priceTableId => {\n  return dispatch => {\n    axios.delete(\"http://localhost:8080/priceTable-api/list/\" + priceTableId).then(response => {\n      dispatch(deletePriceTableRequest(priceTableId)); //console.log(response);\n\n      dispatch(priceTableSuccess(response.data));\n    }).catch(error => {\n      dispatch(priceTableFailure(error));\n    });\n  };\n};\n\nconst priceTableSuccess = priceTable => {\n  return {\n    type: PRICE_TABLE_SUCCESS,\n    payload: priceTable\n  };\n};\n\nconst priceTableFailure = error => {\n  return {\n    type: PRICE_TABLE_FAILURE,\n    payload: error\n  };\n};\n\nconst fetchAllPriceTablesSuccess = (priceTables, totalPages, totalElements, sortDirection) => {\n  return {\n    type: FETCH_ALL_PRICE_TABLES_SUCCESS,\n    payload: priceTables\n  };\n};","map":{"version":3,"sources":["/home/michal/Desktop/projekty/java/SurfSchoolSchedule/SurfSchoolSchedule/surf-school-schedule/src/services/priceTable/priceTableActions.js"],"names":["SAVE_PRICE_TABLE_REQUEST","FETCH_PRICE_TABLE_REQUEST","UPDATE_PRICE_TABLE_REQUEST","DELETE_PRICE_TABLE_REQUEST","PRICE_TABLE_SUCCESS","PRICE_TABLE_FAILURE","FETCH_ALL_PRICE_TABLES_REQUEST","FETCH_ALL_PRICE_TABLES_SUCCESS","axios","fetchAllPriceTables","firstElement","console","log","dispatch","get","then","response","data","content","unshift","filter","item","index","self","findIndex","e","id","fetchAllPriceTablesSuccess","catch","error","priceTableFailure","message","fetchAllPriceTablesRequest","type","savePriceTable","priceTable","post","savePriceTableRequest","newItem","fetchPriceTableRequest","updatedPriceTable","fetchPriceTable","priceTableId","fetchPriceTableWithNrOfLessons","fullNrOfLessons","updatePriceTableRequest","updatePriceTable","NrHoursWeek","NrHoursFull","WeekWage","put","deletePriceTableRequest","deletePriceTable","delete","priceTableSuccess","payload","priceTables","totalPages","totalElements","sortDirection"],"mappings":"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","sourcesContent":["import {\n    SAVE_PRICE_TABLE_REQUEST, FETCH_PRICE_TABLE_REQUEST, UPDATE_PRICE_TABLE_REQUEST,\n    DELETE_PRICE_TABLE_REQUEST, PRICE_TABLE_SUCCESS, PRICE_TABLE_FAILURE,\n    FETCH_ALL_PRICE_TABLES_REQUEST, FETCH_ALL_PRICE_TABLES_SUCCESS\n} from \"./priceTableTypes\";\nimport axios from 'axios';\n\nexport const fetchAllPriceTables = (firstElement) => {\n    console.log(firstElement);\n    return dispatch => {\n        axios.get(\"http://localhost:8080/priceTable-api/list?page=0&size=9999999&sortBy=minNrHours&sortDir=asc\")\n            .then(response => {\n                if (firstElement) {\n                    response.data.content.unshift(firstElement);\n                    response.data.content = response.data.content.filter((item, index, self) =>\n                        index === self.findIndex((e) => (\n                            e.id === item.id)\n                        ));\n                }\n                dispatch(fetchAllPriceTablesSuccess(response.data.content));\n            })\n            .catch(error => {\n                dispatch(priceTableFailure(error.message));\n            });\n    };\n};\n\nconst fetchAllPriceTablesRequest = () => {\n    return {\n        type: FETCH_ALL_PRICE_TABLES_REQUEST\n    };\n};\n\nexport const savePriceTable = priceTable => {\n    return dispatch => {\n        axios.post(\"http://localhost:8080/priceTable-api/list\", priceTable)\n            .then(response => {\n                //  dispatch(priceTableSuccess(response.data));\n                dispatch(savePriceTableRequest(priceTable));\n            })\n            .catch(error => {\n                console.log(error);\n                dispatch(priceTableFailure(error));\n            });\n    };\n};\n\nconst savePriceTableRequest = priceTable => {\n    return {\n        type: SAVE_PRICE_TABLE_REQUEST,\n        newItem: priceTable\n    };\n};\n\nconst fetchPriceTableRequest = updatedPriceTable => {\n    return {\n        type: FETCH_PRICE_TABLE_REQUEST,\n        updatedPriceTable: updatedPriceTable\n    };\n};\n\nexport const fetchPriceTable = priceTableId => {\n    return dispatch => {\n        axios.get(\"http://localhost:8080/priceTable-api/\" + priceTableId)\n            .then(response => {\n                dispatch(fetchPriceTableRequest(response.data));\n                //dispatch(priceTableSuccess(response.data.content));\n            })\n            .catch(error => {\n                dispatch(priceTableFailure(error));\n            });\n    };\n};\n\n\nexport const fetchPriceTableWithNrOfLessons = fullNrOfLessons => {\n    return dispatch => {\n        axios.get(\"http://localhost:8080/priceTable-api/fullNrOfLessons/\" + fullNrOfLessons)\n            .then(response => {\n                console.log(response.data);\n\n                dispatch(fetchPriceTableRequest(response.data));\n                //dispatch(priceTableSuccess(response.data.content));\n            })\n            .catch(error => {\n                dispatch(priceTableFailure(error));\n            });\n    };\n};\n\nconst updatePriceTableRequest = priceTable => {\n    return {\n        type: UPDATE_PRICE_TABLE_REQUEST,\n        updatedPriceTable: priceTable\n    };\n};\n\nexport const updatePriceTable = priceTable => {\n    //console.log(priceTable);\n    priceTable.NrHoursWeek = 0;\n    priceTable.NrHoursFull = 0;\n    priceTable.WeekWage = 0;\n    //console.log(priceTable);\n\n    return dispatch => {\n        axios.put(\"http://localhost:8080/priceTable-api/\" + priceTable.id, priceTable)\n            .then(response => {\n                dispatch(updatePriceTableRequest(priceTable));\n\n                // dispatch(priceTableSuccess(response.data));\n            })\n            .catch(error => {\n                console.log(error);\n                dispatch(priceTableFailure(error));\n            });\n    };\n};\n\nconst deletePriceTableRequest = priceTableId => {\n    return {\n        type: DELETE_PRICE_TABLE_REQUEST,\n        priceTableId: priceTableId\n    };\n};\n\nexport const deletePriceTable = priceTableId => {\n    return dispatch => {\n        axios.delete(\"http://localhost:8080/priceTable-api/list/\" + priceTableId)\n            .then(response => {\n                dispatch(deletePriceTableRequest(priceTableId));\n                //console.log(response);\n                dispatch(priceTableSuccess(response.data));\n            })\n            .catch(error => {\n                dispatch(priceTableFailure(error));\n            });\n    };\n};\n\n\nconst priceTableSuccess = priceTable => {\n    return {\n        type: PRICE_TABLE_SUCCESS,\n        payload: priceTable\n    };\n};\n\nconst priceTableFailure = error => {\n    return {\n        type: PRICE_TABLE_FAILURE,\n        payload: error\n    };\n};\n\nconst fetchAllPriceTablesSuccess = (priceTables, totalPages, totalElements, sortDirection) => {\n    return {\n        type: FETCH_ALL_PRICE_TABLES_SUCCESS,\n        payload: priceTables,\n    };\n};\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}