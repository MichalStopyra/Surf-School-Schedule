{"ast":null,"code":"import{SAVE_LESSON_REQUEST,FETCH_LESSON_REQUEST,UPDATE_LESSON_REQUEST,DELETE_LESSON_REQUEST,LESSON_SUCCESS,LESSON_FAILURE,FETCH_ALL_LESSONS_REQUEST,FETCH_SEARCH_LESSONS_REQUEST,FETCH_ALL_STUDENT_LESSONS_REQUEST}from\"./lessonTypes\";import axios from'axios';export var fetchAllLessons=function fetchAllLessons(currentPage,size,sortDir){--currentPage;return function(dispatch){// dispatch(fetchAllLessonsRequest());???????????????????????????\naxios.get(\"http://localhost:8080/lesson-api/list?page=\"+currentPage+\"&size=\"+size+\"&sortBy=status&sortDir=\"+sortDir).then(function(response){dispatch(fetchAllLessonsRequest(response.data.content,response.data.totalPages,response.data.totalElements,sortDir));}).catch(function(error){dispatch(lessonFailure(error.message));});};};var fetchAllLessonsRequest=function fetchAllLessonsRequest(lessons,totalPages,totalElements,sortDirection){return{type:FETCH_ALL_LESSONS_REQUEST,payload:lessons,totalPages:totalPages,totalElements:totalElements,sortDirection:sortDirection};};export var saveLesson=function saveLesson(lesson){return function(dispatch){axios.post(\"http://localhost:8080/lesson-api/list\",lesson).then(function(response){dispatch(saveLessonRequest(lesson));}).catch(function(error){console.log(error);dispatch(lessonFailure(error));});};};var saveLessonRequest=function saveLessonRequest(lesson){return{type:SAVE_LESSON_REQUEST,newItem:lesson};};var fetchLessonRequest=function fetchLessonRequest(updatedLesson){return{type:FETCH_LESSON_REQUEST,updatedLesson:updatedLesson};};export var fetchLesson=function fetchLesson(lessonId){return function(dispatch){axios.get(\"http://localhost:8080/lesson-api/\"+lessonId).then(function(response){dispatch(fetchLessonRequest(response.data));//dispatch(lessonSuccess(response.data.content));\n}).catch(function(error){dispatch(lessonFailure(error));});};};var updateLessonRequest=function updateLessonRequest(lesson){return{type:UPDATE_LESSON_REQUEST,updatedLesson:lesson};};export var updateLesson=function updateLesson(lesson){//console.log(lesson);\n// lesson.NrHoursWeek = 0;\n// lesson.NrHoursFull = 0;\n// lesson.WeekWage = 0;\n//console.log(lesson);\nreturn function(dispatch){axios.put(\"http://localhost:8080/lesson-api/\"+lesson.id,lesson).then(function(response){dispatch(updateLessonRequest(lesson));// dispatch(lessonSuccess(response.data));\n}).catch(function(error){console.log(error);dispatch(lessonFailure(error));});};};var deleteLessonRequest=function deleteLessonRequest(lessonId){return{type:DELETE_LESSON_REQUEST,lessonId:lessonId};};export var deleteLesson=function deleteLesson(lessonId){return function(dispatch){axios.delete(\"http://localhost:8080/lesson-api/list/\"+lessonId).then(function(response){dispatch(deleteLessonRequest(lessonId));//console.log(response);\ndispatch(lessonSuccess(response.data));}).catch(function(error){dispatch(lessonFailure(error));});};};var lessonSuccess=function lessonSuccess(lesson){return{type:LESSON_SUCCESS,payload:lesson};};var lessonFailure=function lessonFailure(error){return{type:LESSON_FAILURE,payload:error};};export var searchLessons=function searchLessons(searchedValue,currentPage,lessonsPerPage){--currentPage;return function(dispatch){axios.get(\"http://localhost:8080/lesson-api/search/\"+searchedValue+\"?page=\"+currentPage+\"&size=\"+lessonsPerPage).then(function(response){dispatch(searchLessonsRequest(response.data.content));}).catch(function(error){dispatch(lessonFailure(error.message));});};};var searchLessonsRequest=function searchLessonsRequest(lessons){return{type:FETCH_SEARCH_LESSONS_REQUEST,lessons:lessons};};export var fetchAllLessonsForStudent=function fetchAllLessonsForStudent(studentId,currentPage,size){--currentPage;return function(dispatch){// dispatch(fetchAllLessonsRequest());???????????????????????????\naxios.get(\"http://localhost:8080/lesson-api/studentLessons/\"+studentId+\"?page=\"+currentPage+\"&size=\"+size+\"&sortBy=status\").then(function(response){dispatch(fetchAllStudentLessonsRequest(response.data.content,response.data.totalPages,response.data.totalElements));}).catch(function(error){dispatch(lessonFailure(error.message));});};};var fetchAllStudentLessonsRequest=function fetchAllStudentLessonsRequest(lessons,totalPages,totalElements){return{type:FETCH_ALL_STUDENT_LESSONS_REQUEST,payload:lessons,totalPages:totalPages,totalElements:totalElements};};","map":{"version":3,"sources":["/home/michal/Desktop/projekty/java/SurfSchoolSchedule/SurfSchoolSchedule/surf-school-schedule/src/services/lesson/lessonActions.js"],"names":["SAVE_LESSON_REQUEST","FETCH_LESSON_REQUEST","UPDATE_LESSON_REQUEST","DELETE_LESSON_REQUEST","LESSON_SUCCESS","LESSON_FAILURE","FETCH_ALL_LESSONS_REQUEST","FETCH_SEARCH_LESSONS_REQUEST","FETCH_ALL_STUDENT_LESSONS_REQUEST","axios","fetchAllLessons","currentPage","size","sortDir","dispatch","get","then","response","fetchAllLessonsRequest","data","content","totalPages","totalElements","catch","error","lessonFailure","message","lessons","sortDirection","type","payload","saveLesson","lesson","post","saveLessonRequest","console","log","newItem","fetchLessonRequest","updatedLesson","fetchLesson","lessonId","updateLessonRequest","updateLesson","put","id","deleteLessonRequest","deleteLesson","delete","lessonSuccess","searchLessons","searchedValue","lessonsPerPage","searchLessonsRequest","fetchAllLessonsForStudent","studentId","fetchAllStudentLessonsRequest"],"mappings":"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","sourcesContent":["import {\n    SAVE_LESSON_REQUEST, FETCH_LESSON_REQUEST, UPDATE_LESSON_REQUEST,\n    DELETE_LESSON_REQUEST, LESSON_SUCCESS, LESSON_FAILURE,\n    FETCH_ALL_LESSONS_REQUEST,\n    FETCH_SEARCH_LESSONS_REQUEST, FETCH_ALL_STUDENT_LESSONS_REQUEST\n} from \"./lessonTypes\";\nimport axios from 'axios';\n\nexport const fetchAllLessons = (currentPage, size, sortDir) => {\n    --currentPage;\n    return dispatch => {\n        // dispatch(fetchAllLessonsRequest());???????????????????????????\n        axios.get(\"http://localhost:8080/lesson-api/list?page=\" + currentPage + \"&size=\" + size + \"&sortBy=status&sortDir=\" + sortDir)\n            .then(response => {\n                dispatch(fetchAllLessonsRequest(response.data.content, response.data.totalPages, response.data.totalElements, sortDir));\n            })\n            .catch(error => {\n                dispatch(lessonFailure(error.message));\n            });\n    };\n};\n\nconst fetchAllLessonsRequest = (lessons, totalPages, totalElements, sortDirection) => {\n    return {\n        type: FETCH_ALL_LESSONS_REQUEST,\n        payload: lessons,\n        totalPages: totalPages,\n        totalElements: totalElements,\n        sortDirection: sortDirection\n    };\n};\n\nexport const saveLesson = lesson => {\n    return dispatch => {\n        axios.post(\"http://localhost:8080/lesson-api/list\", lesson)\n            .then(response => {\n                dispatch(saveLessonRequest(lesson));\n            })\n            .catch(error => {\n                console.log(error);\n                dispatch(lessonFailure(error));\n            });\n    };\n};\n\nconst saveLessonRequest = lesson => {\n    return {\n        type: SAVE_LESSON_REQUEST,\n        newItem: lesson\n    };\n};\n\nconst fetchLessonRequest = updatedLesson => {\n    return {\n        type: FETCH_LESSON_REQUEST,\n        updatedLesson: updatedLesson\n    };\n};\n\nexport const fetchLesson = lessonId => {\n    return dispatch => {\n        axios.get(\"http://localhost:8080/lesson-api/\" + lessonId)\n            .then(response => {\n                dispatch(fetchLessonRequest(response.data));\n                //dispatch(lessonSuccess(response.data.content));\n            })\n            .catch(error => {\n                dispatch(lessonFailure(error));\n            });\n    };\n};\n\nconst updateLessonRequest = lesson => {\n    return {\n        type: UPDATE_LESSON_REQUEST,\n        updatedLesson: lesson\n    };\n};\n\nexport const updateLesson = lesson => {\n    //console.log(lesson);\n    // lesson.NrHoursWeek = 0;\n    // lesson.NrHoursFull = 0;\n    // lesson.WeekWage = 0;\n    //console.log(lesson);\n\n    return dispatch => {\n        axios.put(\"http://localhost:8080/lesson-api/\" + lesson.id, lesson)\n            .then(response => {\n                dispatch(updateLessonRequest(lesson));\n\n                // dispatch(lessonSuccess(response.data));\n            })\n            .catch(error => {\n                console.log(error);\n                dispatch(lessonFailure(error));\n            });\n    };\n};\n\nconst deleteLessonRequest = lessonId => {\n    return {\n        type: DELETE_LESSON_REQUEST,\n        lessonId: lessonId\n    };\n};\n\nexport const deleteLesson = lessonId => {\n    return dispatch => {\n        axios.delete(\"http://localhost:8080/lesson-api/list/\" + lessonId)\n            .then(response => {\n                dispatch(deleteLessonRequest(lessonId));\n                //console.log(response);\n                dispatch(lessonSuccess(response.data));\n            })\n            .catch(error => {\n                dispatch(lessonFailure(error));\n            });\n    };\n};\n\n\nconst lessonSuccess = lesson => {\n    return {\n        type: LESSON_SUCCESS,\n        payload: lesson\n    };\n};\n\nconst lessonFailure = error => {\n    return {\n        type: LESSON_FAILURE,\n        payload: error\n    };\n};\n\n\nexport const searchLessons = (searchedValue, currentPage, lessonsPerPage) => {\n    --currentPage;\n    return dispatch => {\n        axios.get(\"http://localhost:8080/lesson-api/search/\" + searchedValue + \"?page=\" + currentPage + \"&size=\" + lessonsPerPage)\n            .then(response => {\n                dispatch(searchLessonsRequest(response.data.content));\n            })\n            .catch(error => {\n                dispatch(lessonFailure(error.message));\n            });\n    };\n};\n\n\nconst searchLessonsRequest = lessons => {\n    return {\n        type: FETCH_SEARCH_LESSONS_REQUEST,\n        lessons: lessons\n    };\n};\n\nexport const fetchAllLessonsForStudent = (studentId, currentPage, size) => {\n    --currentPage;\n    return dispatch => {\n        // dispatch(fetchAllLessonsRequest());???????????????????????????\n        axios.get(\"http://localhost:8080/lesson-api/studentLessons/\" + studentId + \"?page=\" + currentPage + \"&size=\" + size + \"&sortBy=status\")\n            .then(response => {\n                dispatch(fetchAllStudentLessonsRequest(response.data.content, response.data.totalPages, response.data.totalElements));\n            })\n            .catch(error => {\n                dispatch(lessonFailure(error.message));\n            });\n    };\n};\n\nconst fetchAllStudentLessonsRequest = (lessons, totalPages, totalElements) => {\n    return {\n        type: FETCH_ALL_STUDENT_LESSONS_REQUEST,\n        payload: lessons,\n        totalPages: totalPages,\n        totalElements: totalElements,\n    };\n};\n\n\n"]},"metadata":{},"sourceType":"module"}