{"ast":null,"code":"import { SAVE_LESSON_REQUEST, FETCH_LESSON_REQUEST, UPDATE_LESSON_REQUEST, DELETE_LESSON_REQUEST, LESSON_SUCCESS, LESSON_FAILURE, FETCH_ALL_LESSONS_REQUEST, FETCH_SEARCH_LESSONS_REQUEST } from \"./lessonTypes\";\nimport axios from 'axios';\nexport const fetchAllLessons = (currentPage, size, sortDir) => {\n  --currentPage;\n  return dispatch => {\n    // dispatch(fetchAllLessonsRequest());???????????????????????????\n    axios.get(\"http://localhost:8080/lesson-api/list?page=\" + currentPage + \"&size=\" + size + \"&sortBy=paymentStatus&sortDir=\" + sortDir).then(response => {\n      dispatch(fetchAllLessonsRequest(response.data.content, response.data.totalPages, response.data.totalElements, sortDir));\n    }).catch(error => {\n      dispatch(lessonFailure(error.message));\n    });\n  };\n};\n\nconst fetchAllLessonsRequest = (lessons, totalPages, totalElements, sortDirection) => {\n  return {\n    type: FETCH_ALL_LESSONS_REQUEST,\n    payload: lessons,\n    totalPages: totalPages,\n    totalElements: totalElements,\n    sortDirection: sortDirection\n  };\n};\n\nexport const saveLesson = lesson => {\n  return dispatch => {\n    axios.post(\"http://localhost:8080/lesson-api/list\", lesson).then(response => {\n      dispatch(saveLessonRequest(lesson));\n    }).catch(error => {\n      console.log(error);\n      dispatch(lessonFailure(error));\n    });\n  };\n};\n\nconst saveLessonRequest = lesson => {\n  return {\n    type: SAVE_LESSON_REQUEST,\n    newItem: lesson\n  };\n};\n\nconst fetchLessonRequest = updatedLesson => {\n  return {\n    type: FETCH_LESSON_REQUEST,\n    updatedLesson: updatedLesson\n  };\n};\n\nexport const fetchLesson = lessonId => {\n  return dispatch => {\n    axios.get(\"http://localhost:8080/lesson-api/\" + lessonId).then(response => {\n      dispatch(fetchLessonRequest(response.data)); //dispatch(lessonSuccess(response.data.content));\n    }).catch(error => {\n      dispatch(lessonFailure(error));\n    });\n  };\n};\n\nconst updateLessonRequest = lesson => {\n  return {\n    type: UPDATE_LESSON_REQUEST,\n    updatedLesson: lesson\n  };\n};\n\nexport const updateLesson = lesson => {\n  //console.log(lesson);\n  // lesson.NrHoursWeek = 0;\n  // lesson.NrHoursFull = 0;\n  // lesson.WeekWage = 0;\n  //console.log(lesson);\n  return dispatch => {\n    axios.put(\"http://localhost:8080/lesson-api/\" + lesson.id, lesson).then(response => {\n      dispatch(updateLessonRequest(lesson)); // dispatch(lessonSuccess(response.data));\n    }).catch(error => {\n      console.log(error);\n      dispatch(lessonFailure(error));\n    });\n  };\n};\n\nconst deleteLessonRequest = lessonId => {\n  return {\n    type: DELETE_LESSON_REQUEST,\n    lessonId: lessonId\n  };\n};\n\nexport const deleteLesson = lessonId => {\n  return dispatch => {\n    axios.delete(\"http://localhost:8080/lesson-api/list/\" + lessonId).then(response => {\n      dispatch(deleteLessonRequest(lessonId)); //console.log(response);\n\n      dispatch(lessonSuccess(response.data));\n    }).catch(error => {\n      dispatch(lessonFailure(error));\n    });\n  };\n};\n\nconst lessonSuccess = lesson => {\n  return {\n    type: LESSON_SUCCESS,\n    payload: lesson\n  };\n};\n\nconst lessonFailure = error => {\n  return {\n    type: LESSON_FAILURE,\n    payload: error\n  };\n};\n\nexport const searchLessons = (searchedValue, currentPage, lessonsPerPage) => {\n  --currentPage;\n  return dispatch => {\n    axios.get(\"http://localhost:8080/lesson-api/search/\" + searchedValue + \"?page=\" + currentPage + \"&size=\" + lessonsPerPage).then(response => {\n      dispatch(searchLessonsRequest(response.data.content));\n    }).catch(error => {\n      dispatch(lessonFailure(error.message));\n    });\n  };\n};\n\nconst searchLessonsRequest = lessons => {\n  return {\n    type: FETCH_SEARCH_LESSONS_REQUEST,\n    lessons: lessons\n  };\n};","map":{"version":3,"sources":["/home/michal/Desktop/projekty/java/SurfSchoolSchedule/SurfSchoolSchedule/surf-school-schedule/src/services/lesson/lessonActions.js"],"names":["SAVE_LESSON_REQUEST","FETCH_LESSON_REQUEST","UPDATE_LESSON_REQUEST","DELETE_LESSON_REQUEST","LESSON_SUCCESS","LESSON_FAILURE","FETCH_ALL_LESSONS_REQUEST","FETCH_SEARCH_LESSONS_REQUEST","axios","fetchAllLessons","currentPage","size","sortDir","dispatch","get","then","response","fetchAllLessonsRequest","data","content","totalPages","totalElements","catch","error","lessonFailure","message","lessons","sortDirection","type","payload","saveLesson","lesson","post","saveLessonRequest","console","log","newItem","fetchLessonRequest","updatedLesson","fetchLesson","lessonId","updateLessonRequest","updateLesson","put","id","deleteLessonRequest","deleteLesson","delete","lessonSuccess","searchLessons","searchedValue","lessonsPerPage","searchLessonsRequest"],"mappings":"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","sourcesContent":["import {\n    SAVE_LESSON_REQUEST, FETCH_LESSON_REQUEST, UPDATE_LESSON_REQUEST,\n    DELETE_LESSON_REQUEST, LESSON_SUCCESS, LESSON_FAILURE,\n    FETCH_ALL_LESSONS_REQUEST,\n    FETCH_SEARCH_LESSONS_REQUEST\n} from \"./lessonTypes\";\nimport axios from 'axios';\n\nexport const fetchAllLessons = (currentPage, size, sortDir) => {\n    --currentPage;\n    return dispatch => {\n        // dispatch(fetchAllLessonsRequest());???????????????????????????\n        axios.get(\"http://localhost:8080/lesson-api/list?page=\" + currentPage + \"&size=\" + size + \"&sortBy=paymentStatus&sortDir=\" + sortDir)\n            .then(response => {\n                dispatch(fetchAllLessonsRequest(response.data.content, response.data.totalPages, response.data.totalElements, sortDir));\n            })\n            .catch(error => {\n                dispatch(lessonFailure(error.message));\n            });\n    };\n};\n\nconst fetchAllLessonsRequest = (lessons, totalPages, totalElements, sortDirection) => {\n    return {\n        type: FETCH_ALL_LESSONS_REQUEST,\n        payload: lessons,\n        totalPages: totalPages,\n        totalElements: totalElements,\n        sortDirection: sortDirection\n    };\n};\n\nexport const saveLesson = lesson => {\n    return dispatch => {\n        axios.post(\"http://localhost:8080/lesson-api/list\", lesson)\n            .then(response => {\n                dispatch(saveLessonRequest(lesson));\n            })\n            .catch(error => {\n                console.log(error);\n                dispatch(lessonFailure(error));\n            });\n    };\n};\n\nconst saveLessonRequest = lesson => {\n    return {\n        type: SAVE_LESSON_REQUEST,\n        newItem: lesson\n    };\n};\n\nconst fetchLessonRequest = updatedLesson => {\n    return {\n        type: FETCH_LESSON_REQUEST,\n        updatedLesson: updatedLesson\n    };\n};\n\nexport const fetchLesson = lessonId => {\n    return dispatch => {\n        axios.get(\"http://localhost:8080/lesson-api/\" + lessonId)\n            .then(response => {\n                dispatch(fetchLessonRequest(response.data));\n                //dispatch(lessonSuccess(response.data.content));\n            })\n            .catch(error => {\n                dispatch(lessonFailure(error));\n            });\n    };\n};\n\nconst updateLessonRequest = lesson => {\n    return {\n        type: UPDATE_LESSON_REQUEST,\n        updatedLesson: lesson\n    };\n};\n\nexport const updateLesson = lesson => {\n    //console.log(lesson);\n    // lesson.NrHoursWeek = 0;\n    // lesson.NrHoursFull = 0;\n    // lesson.WeekWage = 0;\n    //console.log(lesson);\n\n    return dispatch => {\n        axios.put(\"http://localhost:8080/lesson-api/\" + lesson.id, lesson)\n            .then(response => {\n                dispatch(updateLessonRequest(lesson));\n\n                // dispatch(lessonSuccess(response.data));\n            })\n            .catch(error => {\n                console.log(error);\n                dispatch(lessonFailure(error));\n            });\n    };\n};\n\nconst deleteLessonRequest = lessonId => {\n    return {\n        type: DELETE_LESSON_REQUEST,\n        lessonId: lessonId\n    };\n};\n\nexport const deleteLesson = lessonId => {\n    return dispatch => {\n        axios.delete(\"http://localhost:8080/lesson-api/list/\" + lessonId)\n            .then(response => {\n                dispatch(deleteLessonRequest(lessonId));\n                //console.log(response);\n                dispatch(lessonSuccess(response.data));\n            })\n            .catch(error => {\n                dispatch(lessonFailure(error));\n            });\n    };\n};\n\n\nconst lessonSuccess = lesson => {\n    return {\n        type: LESSON_SUCCESS,\n        payload: lesson\n    };\n};\n\nconst lessonFailure = error => {\n    return {\n        type: LESSON_FAILURE,\n        payload: error\n    };\n};\n\n\nexport const searchLessons = (searchedValue, currentPage, lessonsPerPage) => {\n    --currentPage;\n    return dispatch => {\n        axios.get(\"http://localhost:8080/lesson-api/search/\" + searchedValue + \"?page=\" + currentPage + \"&size=\" + lessonsPerPage)\n            .then(response => {\n                dispatch(searchLessonsRequest(response.data.content));\n            })\n            .catch(error => {\n                dispatch(lessonFailure(error.message));\n            });\n    };\n};\n\n\nconst searchLessonsRequest = lessons => {\n    return {\n        type: FETCH_SEARCH_LESSONS_REQUEST,\n        lessons: lessons\n    };\n};\n\n\n"]},"metadata":{},"sourceType":"module"}