{"ast":null,"code":"import { SAVE_INSTRUCTOR_REQUEST, FETCH_INSTRUCTOR_REQUEST, UPDATE_INSTRUCTOR_REQUEST, DELETE_INSTRUCTOR_REQUEST, INSTRUCTOR_SUCCESS, INSTRUCTOR_FAILURE, FETCH_ALL_INSTRUCTORS_REQUEST } from \"./instructorTypes\";\nimport axios from 'axios';\nexport const fetchAllInstructors = (currentPage, size, sortDir) => {\n  return dispatch => {\n    dispatch(fetchAllInstructorsRequest());\n    axios.get(\"http://localhost:8080/instructor-api/list?page=\" + currentPage - 1 + \"&size=\" + size + \"&sortBy=paymentStatus&sortDir=\" + sortDir).then(response => {\n      dispatch(instructorSuccess(response.data));\n    }).catch(error => {\n      dispatch(instructorFailure(error.message));\n    });\n  };\n};\n\nconst fetchAllInstructorsRequest = () => {\n  return {\n    type: FETCH_ALL_INSTRUCTORS_REQUEST\n  };\n};\n\nexport const saveInstructor = instructor => {\n  return dispatch => {\n    dispatch(saveInstructorRequest());\n    axios.post(\"http://localhost:8080/instructor-api/list\", instructor).then(response => {\n      dispatch(instructorSuccess(response.data));\n    }).catch(error => {\n      dispatch(instructorFailure(error));\n    });\n  };\n};\n\nconst saveInstructorRequest = () => {\n  return {\n    type: SAVE_INSTRUCTOR_REQUEST\n  };\n};\n\nconst fetchInstructorRequest = () => {\n  return {\n    type: FETCH_INSTRUCTOR_REQUEST\n  };\n};\n\nexport const fetchInstructor = instructorId => {\n  return dispatch => {\n    dispatch(fetchInstructorRequest());\n    axios.get(\"http://localhost:8080/instructor-api/\" + instructorId).then(response => {\n      dispatch(instructorSuccess(response.data));\n    }).catch(error => {\n      dispatch(instructorFailure(error));\n    });\n  };\n};\n\nconst updateInstructorRequest = () => {\n  return {\n    type: UPDATE_INSTRUCTOR_REQUEST\n  };\n};\n\nexport const updateInstructor = instructor => {\n  return dispatch => {\n    dispatch(updateInstructorRequest());\n    axios.put(\"http://localhost:8080/instructor-api/\", instructor).then(response => {\n      dispatch(instructorSuccess(response.data));\n    }).catch(error => {\n      dispatch(instructorFailure(error));\n    });\n  };\n};\n\nconst deleteInstructorRequest = () => {\n  return {\n    type: DELETE_INSTRUCTOR_REQUEST\n  };\n};\n\nexport const deleteInstructor = instructorId => {\n  return dispatch => {\n    dispatch(deleteInstructorRequest());\n    axios.delete(\"http://localhost:8080/instructor-api/list/\" + instructorId).then(response => {\n      dispatch(instructorSuccess(response.data));\n    }).catch(error => {\n      dispatch(instructorFailure(error));\n    });\n  };\n};\n\nconst instructorSuccess = instructor => {\n  return {\n    type: INSTRUCTOR_SUCCESS,\n    payload: instructor\n  };\n};\n\nconst instructorFailure = error => {\n  return {\n    type: INSTRUCTOR_FAILURE,\n    payload: error\n  };\n};","map":{"version":3,"sources":["/home/michal/Desktop/projekty/java/SurfSchoolSchedule/SurfSchoolSchedule/surf-school-schedule/src/services/instructor/instructorActions.js"],"names":["SAVE_INSTRUCTOR_REQUEST","FETCH_INSTRUCTOR_REQUEST","UPDATE_INSTRUCTOR_REQUEST","DELETE_INSTRUCTOR_REQUEST","INSTRUCTOR_SUCCESS","INSTRUCTOR_FAILURE","FETCH_ALL_INSTRUCTORS_REQUEST","axios","fetchAllInstructors","currentPage","size","sortDir","dispatch","fetchAllInstructorsRequest","get","then","response","instructorSuccess","data","catch","error","instructorFailure","message","type","saveInstructor","instructor","saveInstructorRequest","post","fetchInstructorRequest","fetchInstructor","instructorId","updateInstructorRequest","updateInstructor","put","deleteInstructorRequest","deleteInstructor","delete","payload"],"mappings":"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","sourcesContent":["\nimport {SAVE_INSTRUCTOR_REQUEST, FETCH_INSTRUCTOR_REQUEST, UPDATE_INSTRUCTOR_REQUEST,\n     DELETE_INSTRUCTOR_REQUEST, INSTRUCTOR_SUCCESS, INSTRUCTOR_FAILURE,\n    FETCH_ALL_INSTRUCTORS_REQUEST} from \"./instructorTypes\";\nimport axios from 'axios';\n\nexport const fetchAllInstructors = (currentPage, size, sortDir) => {\n    return dispatch => {\n        dispatch(fetchAllInstructorsRequest());\n        axios.get(\"http://localhost:8080/instructor-api/list?page=\" + currentPage-1 + \"&size=\" + size + \"&sortBy=paymentStatus&sortDir=\" + sortDir)\n            .then(response => {\n                dispatch(instructorSuccess(response.data));\n            })\n            .catch(error => {\n                dispatch(instructorFailure(error.message));\n            });\n    };\n};\n\nconst fetchAllInstructorsRequest = () => {\n    return {\n        type: FETCH_ALL_INSTRUCTORS_REQUEST\n    };\n};\n\nexport const saveInstructor = instructor => {\n    return dispatch => {\n        dispatch(saveInstructorRequest());\n        axios.post(\"http://localhost:8080/instructor-api/list\", instructor)\n            .then(response => {\n                dispatch(instructorSuccess(response.data));\n            })\n            .catch(error => {\n                dispatch(instructorFailure(error));\n            });\n    };\n};\n\nconst saveInstructorRequest = () => { \n    return {\n        type: SAVE_INSTRUCTOR_REQUEST\n    };\n};\n\nconst fetchInstructorRequest = () => {\n    return {\n        type: FETCH_INSTRUCTOR_REQUEST\n    };\n};\n\nexport const fetchInstructor = instructorId => {\n    return dispatch => {\n        dispatch(fetchInstructorRequest());\n        axios.get(\"http://localhost:8080/instructor-api/\"+instructorId)\n            .then(response => {\n                dispatch(instructorSuccess(response.data));\n            })\n            .catch(error => {\n                dispatch(instructorFailure(error));\n            });\n    };\n};\n\nconst updateInstructorRequest = () => {\n    return {\n        type: UPDATE_INSTRUCTOR_REQUEST\n    };\n};\n\nexport const updateInstructor = instructor => {\n    return dispatch => {\n        dispatch(updateInstructorRequest());\n        axios.put(\"http://localhost:8080/instructor-api/\", instructor)\n            .then(response => {\n                dispatch(instructorSuccess(response.data));\n            })\n            .catch(error => {\n                dispatch(instructorFailure(error));\n            });\n    };\n};\n\nconst deleteInstructorRequest = () => {\n    return {\n        type: DELETE_INSTRUCTOR_REQUEST\n    };\n};\n\nexport const deleteInstructor = instructorId => {\n    return dispatch => {\n        dispatch(deleteInstructorRequest());\n        axios.delete(\"http://localhost:8080/instructor-api/list/\"+instructorId)\n            .then(response => {\n                dispatch(instructorSuccess(response.data));\n            })\n            .catch(error => {\n                dispatch(instructorFailure(error));\n            });\n    };\n};\n\nconst instructorSuccess = instructor => {\n    return {\n        type: INSTRUCTOR_SUCCESS,\n        payload: instructor\n    };\n};\n\nconst instructorFailure = error => {\n    return {\n        type: INSTRUCTOR_FAILURE,\n        payload: error\n    };\n};\n\n"]},"metadata":{},"sourceType":"module"}