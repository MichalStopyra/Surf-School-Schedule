{"ast":null,"code":"var _jsxFileName = \"/home/michal/Desktop/projekty/java/SurfSchoolSchedule/SurfSchoolSchedule/surf-school-schedule/src/components/Instructor/InstructorSettle.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { Card, Table, ButtonGroup, Button, InputGroup, FormControl, Form, Col } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faWallet, faMoneyCheckAlt, faUndo, faArrowLeft, faList } from '@fortawesome/free-solid-svg-icons';\nimport SuccessToast from '../SuccessToast';\nimport { connect } from 'react-redux';\nimport { fetchInstructor, updateInstructor } from './../../services/index';\nimport './../../style/Style.css';\n\nclass InstructorSettle extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.findWeekInstructorTab = idInstructor => {\n      axios.get(\"http://localhost:8080/weekInstructor-api/studentWeekInstructors/\" + idInstructor).then(response => {\n        if (response.data != null) {\n          this.setState({\n            weekInstructorTab: response.data.content\n          });\n        }\n      }).catch(error => {\n        console.error(\"Error: \" + error);\n      });\n    };\n\n    this.findWeekInstructor = (idInstructor, date) => {\n      axios.get(\"http://localhost:8080/weekInstructor-api/\" + idInstructor + \"/\" + date).then(response => {\n        if (response.data != null) {\n          this.setState({\n            weekInstructor: response.data\n          });\n        }\n      }).catch(error => {\n        console.error(\"Error: \" + error);\n      });\n    };\n\n    this.findInstructorById = idInstructor => {\n      this.props.fetchInstructor(idInstructor);\n      setTimeout(() => {\n        let instructor = this.props.instructor.instructor;\n\n        if (instructor != null) {\n          this.setState({\n            instructor: instructor\n          });\n        }\n      }, 1000);\n    };\n\n    this.settleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.returnToInstructorList = () => {\n      return this.props.history.push(\"/instructors\");\n    };\n\n    let today = new Date();\n    this.state = {\n      idInstructor: +this.props.match.params.id,\n      instructor: '',\n      weekInstructorTab: [],\n      weekInstructor: '',\n      showSuccessMessage: false,\n      date: today.getMonth() + 1 + '-' + today.getDate() + '-' + today.getFullYear()\n    };\n  }\n\n  componentDidMount() {\n    this.findInstructorById(this.state.idInstructor);\n    this.findWeekInstructorTab(this.state.idInstructor);\n    this.findWeekInstructor(this.state.idInstructor, this.state.date);\n  }\n\n  // settleInstructor = () => {\n  //     const instructorLessons = this.props.lessons\n  //     for (let i = 0; i < instructorLessons.length; ++i) {\n  //         if (instructorLessons[i].status === 'Finished_Unpaid') {\n  //             const lesson = {\n  //                 id: instructorLessons[i].id,\n  //                 instructor: instructorLessons[i].instructor,\n  //                 instructor: instructorLessons[i].instructor,\n  //                 date: instructorLessons[i].date,\n  //                 time: instructorLessons[i].time,\n  //                 howLong: instructorLessons[i].howLong,\n  //                 nrInstructors: instructorLessons[i].nrInstructors,\n  //                 status: \"Finished_Paid\"\n  //             };\n  //             //  console.log(lesson);\n  //             this.props.updateLesson(lesson);\n  //         }\n  //     }\n  //     if (this.state.totalPrice < 0) {\n  //         var newMoneyInAdvance = -this.state.totalPrice;\n  //         var newPaymentStatus = \"We_Owe\";\n  //     }\n  //     //let newInstructorStatus = \"We_Owe\"\n  //     // Owes_Us\n  //     else {\n  //         var newMoneyInAdvance = 0;\n  //         var newPaymentStatus = \"Settled\"\n  //     }\n  //     const instructor = {\n  //         id: this.props.instructor.instructor.id,\n  //         lastName: this.props.instructor.instructor.lastName,\n  //         firstName: this.props.instructor.instructor.firstName,\n  //         idCardNr: this.props.instructor.instructor.idCardNr,\n  //         telNr: this.props.instructor.instructor.telNr,\n  //         paymentStatus: newPaymentStatus,\n  //         lessonHours: this.props.instructor.instructor.lessonHours,\n  //         unpaidLessons: this.props.instructor.instructor.unpaidLessons,\n  //         moneyOwing: this.props.instructor.instructor.moneyOwing,\n  //         moneyInAdvance: newMoneyInAdvance\n  //     };\n  //     // console.log(instructor);\n  //     this.props.updateInstructor(instructor);\n  //     setTimeout(() => {\n  //         if (!this.props.instructor.error && !this.props.lesson.error) {\n  //             this.setState({ \"showSuccesMessage\": true });\n  //             setTimeout(() => this.setState({ \"showSuccessMessage\": false }), 3000);\n  //             setTimeout(() => this.returnToInstructorList(), 1000);\n  //         } else {\n  //             this.setState({ \"showInvalidMessage\": true, \"method\": \"post\" });\n  //             setTimeout(() => this.setState({ \"showInvalidMessage\": false }), 3000);\n  //         }\n  //     }, 2000);\n  // }\n  // listButtonHandle = () => {\n  //     this.setState({\n  //         showLessonList: !this.state.showLessonList\n  //     });\n  // }\n  render() {\n    const instructor = this.state.instructor;\n    const {\n      weekInstructorTab,\n      weekInstructor\n    } = this.state;\n    console.log(this.state);\n    const pageNumCss = {\n      width: \"45px\",\n      border: \"1px solid #F8F8FF\",\n      color: \"#F8F8FF\",\n      textAlign: \"center\",\n      fontWeight: \"bold\"\n    };\n    const searchBoxCss = {\n      width: \"100px\",\n      border: \"1px solid #17A2B8\",\n      color: \"#17A2B8\",\n      textAlign: \"center\",\n      fontWeight: \"bold\"\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        \"display\": this.state.show ? \"block\" : \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(SuccessToast, {\n      show: this.state.show,\n      message: \"Instructor Settled Successfully\",\n      type: \"success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Card, {\n      className: \"border border-dark bg-dark text-white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faWallet,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 25\n      }\n    }), \" Settle Instructor\"), /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"container\",\n      style: {\n        \"clear\": \"both\",\n        \"display\": \"flex\",\n        \"justifyContent\": \"space-between\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 37\n      }\n    }, \"Instructor\"), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 37\n      }\n    }, instructor.firstName + \" \" + instructor.lastName), /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 37\n      }\n    }, \"Date (Monday - Sunday)\"), /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 37\n      }\n    }, weekInstructor.beginningDate, \" - \", weekInstructor.endDate), /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 37\n      }\n    }, \"Nr of Lessons This Week[h]\"), /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 37\n      }\n    }, weekInstructor.fullNrOfLessonsWeek), /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 37\n      }\n    }, \"(1p/2p/+3p)\"), /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 37\n      }\n    }, weekInstructor.nrOfLessons1p ? weekInstructor.nrOfLessons1p : 0, \" /\", weekInstructor.nrOfLessons2p ? weekInstructor.nrOfLessons2p : 0, \" /\", weekInstructor.nrOfLessons3p ? weekInstructor.nrOfLessons3p : 0, \" \"), /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 37\n      }\n    }, \" Week's Wage [zl]\"), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 37\n      }\n    }, weekInstructor.weekWage ? weekInstructor.weekWage : 0)), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridWhichWeek\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 37\n      }\n    }, \"Choose Week\"), /*#__PURE__*/React.createElement(Form.Control, {\n      required: true,\n      as: \"select\",\n      autoComplete: \"off\",\n      name: \"weekInstructor\",\n      value: weekInstructor,\n      onChange: this.settleChange,\n      className: \"bg-dark text-white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 37\n      }\n    }, weekInstructorTab.filter(weekInstructor => weekInstructor.status === \"Not_Settled\").map(weekInstructor => /*#__PURE__*/React.createElement(\"option\", {\n      key: weekInstructor.id,\n      value: weekInstructor,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 49\n      }\n    }, weekInstructor.beginningDate, \" - \", weekInstructor.endDate)))))), /*#__PURE__*/React.createElement(Card.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      size: \"sm\",\n      variant: \"info\",\n      onClick: () => {},\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faMoneyCheckAlt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 41\n      }\n    }), \"  Settle\"), /*#__PURE__*/React.createElement(Button, {\n      size: \"sm\",\n      variant: \"light\",\n      type: \"button\",\n      onClick: () => this.returnToInstructorList(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faArrowLeft,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 41\n      }\n    }), \"  Return\"))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    instructor: state.instructor\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchInstructor: instructorId => dispatch(fetchInstructor(instructorId)),\n    updateInstructor: instructor => dispatch(updateInstructor(instructor))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InstructorSettle);","map":{"version":3,"sources":["/home/michal/Desktop/projekty/java/SurfSchoolSchedule/SurfSchoolSchedule/surf-school-schedule/src/components/Instructor/InstructorSettle.js"],"names":["React","axios","Link","Card","Table","ButtonGroup","Button","InputGroup","FormControl","Form","Col","FontAwesomeIcon","faWallet","faMoneyCheckAlt","faUndo","faArrowLeft","faList","SuccessToast","connect","fetchInstructor","updateInstructor","InstructorSettle","Component","constructor","props","findWeekInstructorTab","idInstructor","get","then","response","data","setState","weekInstructorTab","content","catch","error","console","findWeekInstructor","date","weekInstructor","findInstructorById","setTimeout","instructor","settleChange","event","target","name","value","returnToInstructorList","history","push","today","Date","state","match","params","id","showSuccessMessage","getMonth","getDate","getFullYear","componentDidMount","render","log","pageNumCss","width","border","color","textAlign","fontWeight","searchBoxCss","show","firstName","lastName","beginningDate","endDate","fullNrOfLessonsWeek","nrOfLessons1p","nrOfLessons2p","nrOfLessons3p","weekWage","filter","status","map","mapStateToProps","mapDispatchToProps","dispatch","instructorId"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { Card, Table, ButtonGroup, Button, InputGroup, FormControl, Form, Col } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faWallet, faMoneyCheckAlt, faUndo, faArrowLeft, faList } from '@fortawesome/free-solid-svg-icons';\nimport SuccessToast from '../SuccessToast';\nimport { connect } from 'react-redux';\nimport { fetchInstructor, updateInstructor } from './../../services/index';\n\nimport './../../style/Style.css';\n\n\nclass InstructorSettle extends React.Component {\n\n    constructor(props) {\n        super(props);\n        let today = new Date();\n        this.state = {\n            idInstructor: +this.props.match.params.id,\n            instructor: '',\n            weekInstructorTab: [],\n            weekInstructor: '',\n            showSuccessMessage: false,\n            date: today.getMonth() + 1 + '-' + today.getDate() + '-' + today.getFullYear()\n\n        };\n    }\n\n    componentDidMount() {\n        this.findInstructorById(this.state.idInstructor);\n        this.findWeekInstructorTab(this.state.idInstructor)\n        this.findWeekInstructor(this.state.idInstructor, this.state.date)\n    }\n\n    findWeekInstructorTab = (idInstructor) => {\n        axios.get(\"http://localhost:8080/weekInstructor-api/studentWeekInstructors/\" + idInstructor)\n            .then(response => {\n                if (response.data != null) {\n                    this.setState({\n                        weekInstructorTab: response.data.content\n                    });\n                }\n            }).catch((error) => {\n                console.error(\"Error: \" + error);\n            });\n    };\n\n    findWeekInstructor = (idInstructor, date) => {\n        axios.get(\"http://localhost:8080/weekInstructor-api/\" + idInstructor + \"/\" + date)\n            .then(response => {\n                if (response.data != null) {\n                    this.setState({\n                        weekInstructor: response.data\n                    });\n                }\n            }).catch((error) => {\n                console.error(\"Error: \" + error);\n            });\n    };\n\n\n\n    findInstructorById = (idInstructor) => {\n\n        this.props.fetchInstructor(idInstructor);\n        setTimeout(() => {\n\n            let instructor = this.props.instructor.instructor;\n            if (instructor != null) {\n                this.setState({\n                    instructor: instructor\n                });\n            }\n        }, 1000);\n    };\n\n\n    settleChange = event => {\n        this.setState({\n            [event.target.name]: event.target.value,\n        });\n    };\n\n    returnToInstructorList = () => {\n        return this.props.history.push(\"/instructors\");\n    };\n\n    // settleInstructor = () => {\n    //     const instructorLessons = this.props.lessons\n    //     for (let i = 0; i < instructorLessons.length; ++i) {\n    //         if (instructorLessons[i].status === 'Finished_Unpaid') {\n    //             const lesson = {\n    //                 id: instructorLessons[i].id,\n    //                 instructor: instructorLessons[i].instructor,\n    //                 instructor: instructorLessons[i].instructor,\n    //                 date: instructorLessons[i].date,\n    //                 time: instructorLessons[i].time,\n    //                 howLong: instructorLessons[i].howLong,\n    //                 nrInstructors: instructorLessons[i].nrInstructors,\n    //                 status: \"Finished_Paid\"\n    //             };\n    //             //  console.log(lesson);\n    //             this.props.updateLesson(lesson);\n    //         }\n    //     }\n\n    //     if (this.state.totalPrice < 0) {\n    //         var newMoneyInAdvance = -this.state.totalPrice;\n    //         var newPaymentStatus = \"We_Owe\";\n    //     }\n    //     //let newInstructorStatus = \"We_Owe\"\n    //     // Owes_Us\n    //     else {\n    //         var newMoneyInAdvance = 0;\n    //         var newPaymentStatus = \"Settled\"\n    //     }\n\n\n    //     const instructor = {\n    //         id: this.props.instructor.instructor.id,\n    //         lastName: this.props.instructor.instructor.lastName,\n    //         firstName: this.props.instructor.instructor.firstName,\n    //         idCardNr: this.props.instructor.instructor.idCardNr,\n    //         telNr: this.props.instructor.instructor.telNr,\n    //         paymentStatus: newPaymentStatus,\n    //         lessonHours: this.props.instructor.instructor.lessonHours,\n    //         unpaidLessons: this.props.instructor.instructor.unpaidLessons,\n    //         moneyOwing: this.props.instructor.instructor.moneyOwing,\n    //         moneyInAdvance: newMoneyInAdvance\n    //     };\n    //     // console.log(instructor);\n\n\n    //     this.props.updateInstructor(instructor);\n\n    //     setTimeout(() => {\n\n    //         if (!this.props.instructor.error && !this.props.lesson.error) {\n    //             this.setState({ \"showSuccesMessage\": true });\n    //             setTimeout(() => this.setState({ \"showSuccessMessage\": false }), 3000);\n    //             setTimeout(() => this.returnToInstructorList(), 1000);\n    //         } else {\n    //             this.setState({ \"showInvalidMessage\": true, \"method\": \"post\" });\n    //             setTimeout(() => this.setState({ \"showInvalidMessage\": false }), 3000);\n    //         }\n    //     }, 2000);\n    // }\n\n    // listButtonHandle = () => {\n    //     this.setState({\n    //         showLessonList: !this.state.showLessonList\n    //     });\n    // }\n\n    render() {\n        const instructor = this.state.instructor;\n        const { weekInstructorTab, weekInstructor } = this.state\n\n        console.log(this.state)\n        const pageNumCss = {\n            width: \"45px\",\n            border: \"1px solid #F8F8FF\",\n            color: \"#F8F8FF\",\n            textAlign: \"center\",\n            fontWeight: \"bold\"\n        };\n\n        const searchBoxCss = {\n            width: \"100px\",\n            border: \"1px solid #17A2B8\",\n            color: \"#17A2B8\",\n            textAlign: \"center\",\n            fontWeight: \"bold\"\n        };\n\n        return (\n            <div>\n                <div style={{ \"display\": this.state.show ? \"block\" : \"none\" }}>\n                    <SuccessToast show={this.state.show} message={\"Instructor Settled Successfully\"} type=\"success\" />\n                </div>\n\n                <Card className={\"border border-dark bg-dark text-white\"}>\n                    <Card.Header>\n                        <FontAwesomeIcon icon={faWallet} /> Settle Instructor\n                </Card.Header>\n                    <Form >\n                        <Card.Body>\n                            <div id=\"container\" style={{ \"clear\": \"both\", \"display\": \"flex\", \"justifyContent\": \"space-between\" }}>\n\n                                <div>\n                                    <h5>Instructor</h5>\n                                    <h4>{instructor.firstName + \" \" + instructor.lastName}</h4>\n\n                                    <h6>Date (Monday - Sunday)</h6>\n                                    <h5>{weekInstructor.beginningDate} - {weekInstructor.endDate}</h5>\n\n                                    <h6>Nr of Lessons This Week[h]</h6>\n                                    <h5>{weekInstructor.fullNrOfLessonsWeek}</h5>\n\n                                    <h6>(1p/2p/+3p)</h6>\n                                    <h5>{weekInstructor.nrOfLessons1p ? weekInstructor.nrOfLessons1p : 0} /\n                                    {weekInstructor.nrOfLessons2p ? weekInstructor.nrOfLessons2p : 0} /\n                                    {weekInstructor.nrOfLessons3p ? weekInstructor.nrOfLessons3p : 0} </h5>\n\n                                    <h5> Week's Wage [zl]</h5>\n                                    <h4>{weekInstructor.weekWage ? weekInstructor.weekWage : 0}</h4>\n\n                                </div>\n                                <Form.Group as={Col} controlId=\"formGridWhichWeek\">\n                                    <Form.Label>Choose Week</Form.Label>\n                                    <Form.Control required as=\"select\"\n                                        autoComplete=\"off\"\n                                        name=\"weekInstructor\"\n                                        value={weekInstructor}\n                                        onChange={this.settleChange}\n                                        className={\"bg-dark text-white\"}>\n                                        {weekInstructorTab.filter(weekInstructor =>\n                                            weekInstructor.status === \"Not_Settled\")\n                                            .map(weekInstructor =>\n                                                <option key={weekInstructor.id} value={weekInstructor}>\n                                                    {weekInstructor.beginningDate} - {weekInstructor.endDate}\n                                                </option>\n                                            )}\n                                    </Form.Control>\n                                </Form.Group>\n\n\n                            </div>\n\n                        </Card.Body>\n\n                        <Card.Footer>\n                                <div>\n                                    <Button size=\"sm\" variant=\"info\" onClick={() => { }}>\n                                        <FontAwesomeIcon icon={faMoneyCheckAlt} />  Settle\n                                    </Button>\n\n\n\n\n\n\n\n                                    <Button size=\"sm\" variant=\"light\" type=\"button\" onClick={() => this.returnToInstructorList()}>\n                                        <FontAwesomeIcon icon={faArrowLeft} />  Return\n                                     </Button>\n                                </div>\n                        </Card.Footer>\n                    </Form >\n\n\n                </Card >\n            </div>\n        );\n    }\n\n}\n\nconst mapStateToProps = state => {\n    return {\n                    instructor: state.instructor,\n    }\n};\n\n\nconst mapDispatchToProps = dispatch => {\n    return {\n                    fetchInstructor: (instructorId) => dispatch(fetchInstructor(instructorId)),\n        updateInstructor: (instructor) => dispatch(updateInstructor(instructor))\n    }\n\n};\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InstructorSettle);"]},"metadata":{},"sourceType":"module"}