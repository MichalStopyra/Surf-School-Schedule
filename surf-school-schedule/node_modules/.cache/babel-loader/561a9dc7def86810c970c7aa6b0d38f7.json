{"ast":null,"code":"var _jsxFileName = \"/home/michal/Desktop/projekty/java/SurfSchoolSchedule/SurfSchoolSchedule/surf-school-schedule/src/components/Student/Student.js\";\nimport { faArrowLeft, faEdit, faPlusSquare, faSave, faUndo } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React from 'react';\nimport { Button, Card, Col, Form } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { fetchStudent, saveStudent, updateStudent } from '../../services/index';\nimport SuccessToast from '../SuccessToast';\n\nclass Student extends React.Component {\n  constructor(props) {\n    super(props);\n    this.initialState = {\n      id: '',\n      lastName: '',\n      firstName: '',\n      idCardNr: '',\n      telNr: '',\n      paymentStatus: 0,\n      lessonHours: 0,\n      unpaidLessons: 0,\n      moneyOwing: 0,\n      moneyInAdvance: ''\n    };\n\n    this.findStudentById = idStudent => {\n      this.props.fetchStudent(idStudent);\n      setTimeout(() => {\n        let student = this.props.student.student;\n\n        if (student != null) {\n          this.setState({\n            id: student.id,\n            lastName: student.lastName,\n            firstName: student.firstName,\n            idCardNr: student.idCardNr,\n            telNr: student.telNr,\n            paymentStatus: student.paymentStatus,\n            lessonHours: student.lessonHours,\n            unpaidLessons: student.unpaidLessons,\n            moneyOwing: student.moneyOwing,\n            moneyInAdvance: student.moneyInAdvance\n          });\n        }\n      }, 1000);\n    };\n\n    this.returnToList = () => {\n      return this.props.history.push(\"/students\");\n    };\n\n    this.submitStudent = event => {\n      event.preventDefault();\n      const student = {\n        lastName: this.state.lastName,\n        firstName: this.state.firstName,\n        idCardNr: this.state.idCardNr,\n        telNr: this.state.telNr,\n        paymentStatus: this.state.paymentStatus,\n        lessonHours: this.state.lessonHours,\n        unpaidLessons: this.state.unpaidLessons,\n        moneyOwing: this.state.moneyOwing,\n        moneyInAdvance: this.state.moneyInAdvance\n      };\n      this.props.saveStudent(student);\n      setTimeout(() => {\n        if (!this.props.student.error) {\n          this.setState({\n            \"show\": true,\n            \"method\": \"post\"\n          });\n          setTimeout(() => this.setState({\n            \"show\": false\n          }), 3000);\n          setTimeout(() => this.returnToList(), 1000);\n        } else {\n          this.setState({\n            \"showInvalidMessage\": true,\n            \"method\": \"post\"\n          });\n          setTimeout(() => this.setState({\n            \"showInvalidMessage\": false\n          }), 3000);\n        }\n      }, 1000);\n    };\n\n    this.updateStudent = event => {\n      event.preventDefault();\n      const student = {\n        id: this.state.id,\n        lastName: this.state.lastName,\n        firstName: this.state.firstName,\n        idCardNr: this.state.idCardNr,\n        telNr: this.state.telNr,\n        paymentStatus: this.state.paymentStatus,\n        lessonHours: this.state.lessonHours,\n        unpaidLessons: this.state.unpaidLessons,\n        moneyOwing: this.state.moneyOwing,\n        moneyInAdvance: this.state.moneyInAdvance\n      };\n      this.props.updateStudent(student);\n      setTimeout(() => {\n        if (!this.props.student.error) {\n          this.setState({\n            \"show\": true,\n            \"method\": \"put\"\n          });\n          setTimeout(() => this.setState({\n            \"show\": false\n          }), 3000);\n          setTimeout(() => this.returnToList(), 1000);\n        } else {\n          this.setState({\n            \"showInvalidMessage\": true,\n            \"method\": \"post\"\n          });\n          setTimeout(() => this.setState({\n            \"showInvalidMessage\": false\n          }), 3000);\n        }\n      }, 2000);\n    };\n\n    this.resetStudent = () => {\n      this.setState(() => this.initialState);\n    };\n\n    this.studentChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.state = this.initialState;\n    this.state.show = false;\n    this.state.method = 'post';\n    this.studentChange = this.studentChange.bind(this);\n    this.submitStudent = this.submitStudent.bind(this);\n  }\n\n  componentDidMount() {\n    const idStudent = +this.props.match.params.id;\n\n    if (idStudent) {\n      this.findStudentById(idStudent);\n    }\n  }\n\n  render() {\n    const {\n      firstName,\n      lastName,\n      idCardNr,\n      telNr,\n      paymentStatus,\n      lessonHours,\n      unpaidLessons,\n      moneyOwing,\n      moneyInAdvance\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        \"display\": this.state.show ? \"block\" : \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(SuccessToast, {\n      show: this.state.show,\n      message: this.state.method === \"put\" ? \"Student Updated Successfully\" : \"Student Saved Successfully.\",\n      type: \"success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        \"display\": this.state.showInvalidMessage ? \"block\" : \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(SuccessToast, {\n      show: this.state.showInvalidMessage,\n      message: \"Invalid Data - might be in the data base already\",\n      type: \"dangerNoSuccess\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Card, {\n      className: \"border border-dark bg-dark text-white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: this.state.id ? faEdit : faPlusSquare,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 25\n      }\n    }), \" \", this.state.id ? \"Update Student\" : \"Add New Student\"), /*#__PURE__*/React.createElement(Form, {\n      onReset: this.resetStudent,\n      onSubmit: this.state.id ? this.updateStudent : this.submitStudent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridLastName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 37\n      }\n    }, \"Last Name\"), /*#__PURE__*/React.createElement(Form.Control, {\n      required: true,\n      autoComplete: \"off\",\n      type: \"test\",\n      name: \"lastName\",\n      value: lastName,\n      onChange: this.studentChange,\n      placeholder: \"Enter Last Name\",\n      className: \"bg-dark text-white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridFirstName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 37\n      }\n    }, \"First Name\"), /*#__PURE__*/React.createElement(Form.Control, {\n      required: true,\n      autoComplete: \"off\",\n      type: \"test\",\n      name: \"firstName\",\n      value: firstName,\n      onChange: this.studentChange,\n      placeholder: \" Enter First Name\",\n      className: \"bg-dark text-white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 37\n      }\n    }))), /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridIdCardNr\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 37\n      }\n    }, \"ID Card Nr\"), /*#__PURE__*/React.createElement(Form.Control, {\n      required: true,\n      autoComplete: \"off\",\n      name: \"idCardNr\",\n      type: \"test\",\n      value: idCardNr,\n      onChange: this.studentChange,\n      placeholder: \"Enter ID Card Nr\",\n      className: \"bg-dark text-white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridPhoneNr\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 37\n      }\n    }, \"Phone Nr\"), /*#__PURE__*/React.createElement(Form.Control, {\n      required: true,\n      autoComplete: \"off\",\n      name: \"telNr\",\n      type: \"test\",\n      value: telNr,\n      onChange: this.studentChange,\n      placeholder: \"Enter Phone Nr\",\n      className: \"bg-dark text-white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 37\n      }\n    }))), /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridMoneyInAdvance\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 37\n      }\n    }, \"Payment In Advance\"), /*#__PURE__*/React.createElement(Form.Control, {\n      required: true,\n      autoComplete: \"off\",\n      name: \"moneyInAdvance\",\n      type: \"test\",\n      value: moneyInAdvance,\n      onChange: this.studentChange,\n      placeholder: \"$\",\n      className: \"bg-dark text-white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 37\n      }\n    })))), /*#__PURE__*/React.createElement(Card.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      size: \"sm\",\n      variant: \"primary\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faSave,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 37\n      }\n    }), \" \", this.state.id ? \"Update\" : \"Submit\"), '      ', /*#__PURE__*/React.createElement(Button, {\n      size: \"sm\",\n      variant: \"secondary\",\n      type: \"reset\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faUndo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 37\n      }\n    }), \"  Reset\")), '      ', /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      size: \"sm\",\n      variant: \"light\",\n      type: \"button\",\n      onClick: this.returnToList.bind(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faArrowLeft,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 37\n      }\n    }), \"  Return\"))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    student: state.student\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    saveStudent: student => dispatch(saveStudent(student)),\n    fetchStudent: studentId => dispatch(fetchStudent(studentId)),\n    updateStudent: student => dispatch(updateStudent(student))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Student);","map":{"version":3,"sources":["/home/michal/Desktop/projekty/java/SurfSchoolSchedule/SurfSchoolSchedule/surf-school-schedule/src/components/Student/Student.js"],"names":["faArrowLeft","faEdit","faPlusSquare","faSave","faUndo","FontAwesomeIcon","React","Button","Card","Col","Form","connect","fetchStudent","saveStudent","updateStudent","SuccessToast","Student","Component","constructor","props","initialState","id","lastName","firstName","idCardNr","telNr","paymentStatus","lessonHours","unpaidLessons","moneyOwing","moneyInAdvance","findStudentById","idStudent","setTimeout","student","setState","returnToList","history","push","submitStudent","event","preventDefault","state","error","resetStudent","studentChange","target","name","value","show","method","bind","componentDidMount","match","params","render","showInvalidMessage","mapStateToProps","mapDispatchToProps","dispatch","studentId"],"mappings":"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","sourcesContent":["import { faArrowLeft, faEdit, faPlusSquare, faSave, faUndo } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React from 'react';\nimport { Button, Card, Col, Form } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { fetchStudent, saveStudent, updateStudent } from '../../services/index';\nimport SuccessToast from '../SuccessToast';\n\n\nclass Student extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = this.initialState;\n        this.state.show = false;\n        this.state.method = 'post';\n        this.studentChange = this.studentChange.bind(this);\n        this.submitStudent = this.submitStudent.bind(this);\n    }\n\n    initialState = {\n        id: '', lastName: '', firstName: '', idCardNr: '', telNr: '', paymentStatus: 0, lessonHours: 0, unpaidLessons: 0, moneyOwing: 0, moneyInAdvance: ''\n    }\n\n    componentDidMount() {\n        const idStudent = +this.props.match.params.id;\n        if (idStudent) {\n            this.findStudentById(idStudent);\n        }\n    };\n\n\n\n    findStudentById = (idStudent) => {\n\n        this.props.fetchStudent(idStudent);\n        setTimeout(() => {\n\n            let student = this.props.student.student;\n            if (student != null) {\n                this.setState({\n                    id: student.id,\n                    lastName: student.lastName,\n                    firstName: student.firstName,\n                    idCardNr: student.idCardNr,\n                    telNr: student.telNr,\n                    paymentStatus: student.paymentStatus,\n                    lessonHours: student.lessonHours,\n                    unpaidLessons: student.unpaidLessons,\n                    moneyOwing: student.moneyOwing,\n                    moneyInAdvance: student.moneyInAdvance\n                });\n            }\n        }, 1000);\n    };\n\n    returnToList = () => {\n        return this.props.history.push(\"/students\");\n    };\n\n\n    submitStudent = event => {\n        event.preventDefault();\n\n        const student = {\n            lastName: this.state.lastName,\n            firstName: this.state.firstName,\n            idCardNr: this.state.idCardNr,\n            telNr: this.state.telNr,\n            paymentStatus: this.state.paymentStatus,\n            lessonHours: this.state.lessonHours,\n            unpaidLessons: this.state.unpaidLessons,\n            moneyOwing: this.state.moneyOwing,\n            moneyInAdvance: this.state.moneyInAdvance\n        };\n\n        this.props.saveStudent(student);\n        setTimeout(() => {\n            if (!this.props.student.error) {\n                this.setState({ \"show\": true, \"method\": \"post\" });\n                setTimeout(() => this.setState({ \"show\": false }), 3000);\n                setTimeout(() => this.returnToList(), 1000);\n            } else {\n                this.setState({ \"showInvalidMessage\": true, \"method\": \"post\" });\n                setTimeout(() => this.setState({ \"showInvalidMessage\": false }), 3000);\n            }\n        }, 1000);\n    };\n\n    updateStudent = event => {\n        event.preventDefault();\n\n        const student = {\n            id: this.state.id,\n            lastName: this.state.lastName,\n            firstName: this.state.firstName,\n            idCardNr: this.state.idCardNr,\n            telNr: this.state.telNr,\n            paymentStatus: this.state.paymentStatus,\n            lessonHours: this.state.lessonHours,\n            unpaidLessons: this.state.unpaidLessons,\n            moneyOwing: this.state.moneyOwing,\n            moneyInAdvance: this.state.moneyInAdvance\n        };\n\n        this.props.updateStudent(student);\n        setTimeout(() => {\n\n            if (!this.props.student.error) {\n                this.setState({ \"show\": true, \"method\": \"put\" });\n                setTimeout(() => this.setState({ \"show\": false }), 3000);\n                setTimeout(() => this.returnToList(), 1000);\n            } else {\n                this.setState({ \"showInvalidMessage\": true, \"method\": \"post\" });\n                setTimeout(() => this.setState({ \"showInvalidMessage\": false }), 3000);\n            }\n        }, 2000);\n    }\n\n    resetStudent = () => {\n        this.setState(() => this.initialState);\n    };\n\n    studentChange = event => {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    };\n\n    render() {\n        const { firstName, lastName, idCardNr, telNr, paymentStatus, lessonHours, unpaidLessons, moneyOwing, moneyInAdvance } = this.state;\n        return (\n            <div>\n                <div style={{ \"display\": this.state.show ? \"block\" : \"none\" }}>\n                    <SuccessToast show={this.state.show} message={this.state.method === \"put\" ? \"Student Updated Successfully\" : \"Student Saved Successfully.\"} type=\"success\" />\n                </div>\n\n                <div style={{ \"display\": this.state.showInvalidMessage ? \"block\" : \"none\" }}>\n                    <SuccessToast show={this.state.showInvalidMessage} message={\"Invalid Data - might be in the data base already\"} type=\"dangerNoSuccess\" />\n                </div>\n\n                <Card className={\"border border-dark bg-dark text-white\"}>\n                    <Card.Header>\n                        <FontAwesomeIcon icon={this.state.id ? faEdit : faPlusSquare} /> {this.state.id ? \"Update Student\" : \"Add New Student\"}\n                    </Card.Header>\n                    <Form onReset={this.resetStudent} onSubmit={this.state.id ? this.updateStudent : this.submitStudent}>\n                        <Card.Body>\n                            <Form.Row>\n                                <Form.Group as={Col} controlId=\"formGridLastName\">\n                                    <Form.Label>Last Name</Form.Label>\n                                    <Form.Control required\n                                        autoComplete=\"off\"\n                                        type=\"test\"\n                                        name=\"lastName\"\n                                        value={lastName}\n                                        onChange={this.studentChange}\n                                        placeholder=\"Enter Last Name\"\n                                        className={\"bg-dark text-white\"} />\n                                </Form.Group>\n\n                                <Form.Group as={Col} controlId=\"formGridFirstName\">\n                                    <Form.Label>First Name</Form.Label>\n                                    <Form.Control required\n                                        autoComplete=\"off\"\n                                        type=\"test\"\n                                        name=\"firstName\"\n                                        value={firstName}\n                                        onChange={this.studentChange}\n                                        placeholder=\" Enter First Name\"\n                                        className={\"bg-dark text-white\"} />\n                                </Form.Group>\n                            </Form.Row>\n\n                            <Form.Row>\n\n                                <Form.Group as={Col} controlId=\"formGridIdCardNr\">\n                                    <Form.Label>ID Card Nr</Form.Label>\n                                    <Form.Control required\n                                        autoComplete=\"off\"\n                                        name=\"idCardNr\"\n                                        type=\"test\"\n                                        value={idCardNr}\n                                        onChange={this.studentChange}\n                                        placeholder=\"Enter ID Card Nr\"\n                                        className={\"bg-dark text-white\"} />\n                                </Form.Group>\n\n                                <Form.Group as={Col} controlId=\"formGridPhoneNr\">\n                                    <Form.Label>Phone Nr</Form.Label>\n                                    <Form.Control required\n                                        autoComplete=\"off\"\n                                        name=\"telNr\"\n                                        type=\"test\"\n                                        value={telNr}\n                                        onChange={this.studentChange}\n                                        placeholder=\"Enter Phone Nr\"\n                                        className={\"bg-dark text-white\"} />\n                                </Form.Group>\n                            </Form.Row >\n\n                            <Form.Row>\n                                <Form.Group as={Col} controlId=\"formGridMoneyInAdvance\">\n                                    <Form.Label>Payment In Advance</Form.Label>\n                                    <Form.Control required\n                                        autoComplete=\"off\"\n                                        name=\"moneyInAdvance\"\n                                        type=\"test\"\n                                        value={moneyInAdvance}\n                                        onChange={this.studentChange}\n                                        placeholder=\"$\"\n                                        className={\"bg-dark text-white\"} />\n                                </Form.Group>\n                            </Form.Row>\n                        </Card.Body>\n\n                        <Card.Footer>\n                            <div>\n                                <Button size=\"sm\" variant=\"primary\" type=\"submit\">\n                                    <FontAwesomeIcon icon={faSave} /> {this.state.id ? \"Update\" : \"Submit\"}\n                                </Button>\n                                {'      '}\n\n                                <Button size=\"sm\" variant=\"secondary\" type=\"reset\">\n                                    <FontAwesomeIcon icon={faUndo} />  Reset\n                    </Button>\n                            </div>\n                            {'      '}\n                            <div>\n                                <Button size=\"sm\" variant=\"light\" type=\"button\" onClick={this.returnToList.bind()}>\n                                    <FontAwesomeIcon icon={faArrowLeft} />  Return\n                    </Button>\n                            </div>\n                        </Card.Footer>\n                    </Form >\n\n\n                </Card >\n            </div>\n        );\n    }\n\n}\n\nconst mapStateToProps = state => {\n    return {\n        student: state.student\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        saveStudent: (student) => dispatch(saveStudent(student)),\n        fetchStudent: (studentId) => dispatch(fetchStudent(studentId)),\n        updateStudent: (student) => dispatch(updateStudent(student))\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Student);"]},"metadata":{},"sourceType":"module"}