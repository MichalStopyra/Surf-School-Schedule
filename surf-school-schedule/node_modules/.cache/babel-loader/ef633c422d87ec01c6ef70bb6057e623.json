{"ast":null,"code":"import { SAVE_INSTRUCTOR_REQUEST, FETCH_INSTRUCTOR_REQUEST, UPDATE_INSTRUCTOR_REQUEST, DELETE_INSTRUCTOR_REQUEST, FETCH_ALL_INSTRUCTORS_REQUEST, FETCH_ALL_INSTRUCTORS_SUCCESS, INSTRUCTOR_SUCCESS, INSTRUCTOR_FAILURE } from \"./instructorTypes\";\nconst initialState = {\n  instructor: '',\n  error: '',\n  instructors: [],\n  currentPage: 1\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_ALL_INSTRUCTORS_REQUEST:\n      return { ...state\n      };\n\n    case UPDATE_INSTRUCTOR_REQUEST:\n      console.log(action);\n      return { ...state,\n        instructor: action.updatedInstructor,\n        //update specific instructor\n        instructors: state.instructors.map((item, index) => {\n          // Replace the item at index = updatedInstructor\n          if (index === action.updatedInstructor.id) {\n            return action.updatedInstructor;\n          } // Leave every other item unchanged\n\n\n          return item;\n        })\n      };\n\n    case FETCH_INSTRUCTOR_REQUEST:\n      return { ...state,\n        instructor: action.updatedInstructor\n      };\n\n    case SAVE_INSTRUCTOR_REQUEST:\n      return { ...state,\n        instructors: state.instructors.concat(action.newItem),\n        instructor: action.newItem\n      };\n\n    case DELETE_INSTRUCTOR_REQUEST:\n      return { ...state,\n        instructors: state.instructors.filter(item => item.id !== action.instructorId)\n      };\n\n    case INSTRUCTOR_SUCCESS:\n      return { ...state,\n        instructor: action.payload,\n        error: ''\n      };\n\n    case INSTRUCTOR_FAILURE:\n      return { ...state,\n        //instructor: '',\n        error: action.payload\n      };\n\n    case FETCH_ALL_INSTRUCTORS_SUCCESS:\n      return { ...state,\n        instructors: action.payload,\n        totalElements: action.totalElements,\n        totalPages: action.totalPages,\n        sortDirection: action.sortDirection,\n        error: ''\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/michal/Desktop/projekty/java/SurfSchoolSchedule/SurfSchoolSchedule/surf-school-schedule/src/services/instructor/instructorReducer.js"],"names":["SAVE_INSTRUCTOR_REQUEST","FETCH_INSTRUCTOR_REQUEST","UPDATE_INSTRUCTOR_REQUEST","DELETE_INSTRUCTOR_REQUEST","FETCH_ALL_INSTRUCTORS_REQUEST","FETCH_ALL_INSTRUCTORS_SUCCESS","INSTRUCTOR_SUCCESS","INSTRUCTOR_FAILURE","initialState","instructor","error","instructors","currentPage","reducer","state","action","type","console","log","updatedInstructor","map","item","index","id","concat","newItem","filter","instructorId","payload","totalElements","totalPages","sortDirection"],"mappings":"AAAA,SACIA,uBADJ,EAC6BC,wBAD7B,EACuDC,yBADvD,EACkFC,yBADlF,EAC6GC,6BAD7G,EAC4IC,6BAD5I,EAEIC,kBAFJ,EAEwBC,kBAFxB,QAGO,mBAHP;AAKA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,UAAU,EAAE,EADK;AAEhBC,EAAAA,KAAK,EAAE,EAFS;AAGjBC,EAAAA,WAAW,EAAE,EAHI;AAIjBC,EAAAA,WAAW,EAAE;AAJI,CAArB;;AAOA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGN,YAAT,EAAuBO,MAAvB,KAAkC;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKZ,6BAAL;AACI,aAAO,EACH,GAAGU;AADA,OAAP;;AAGJ,SAAKZ,yBAAL;AACIe,MAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACA,aAAO,EACH,GAAGD,KADA;AAEHL,QAAAA,UAAU,EAAEM,MAAM,CAACI,iBAFhB;AAGH;AACAR,QAAAA,WAAW,EAAEG,KAAK,CAACH,WAAN,CAAkBS,GAAlB,CAAsB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAChD;AACA,cAAIA,KAAK,KAAKP,MAAM,CAACI,iBAAP,CAAyBI,EAAvC,EAA2C;AACvC,mBAAOR,MAAM,CAACI,iBAAd;AACH,WAJ+C,CAKhD;;;AACA,iBAAOE,IAAP;AACH,SAPY;AAJV,OAAP;;AAaJ,SAAKpB,wBAAL;AACI,aAAO,EACH,GAAGa,KADA;AAEHL,QAAAA,UAAU,EAAEM,MAAM,CAACI;AAFhB,OAAP;;AAIJ,SAAKnB,uBAAL;AACI,aAAO,EACH,GAAGc,KADA;AAEHH,QAAAA,WAAW,EAAEG,KAAK,CAACH,WAAN,CAAkBa,MAAlB,CAAyBT,MAAM,CAACU,OAAhC,CAFV;AAGHhB,QAAAA,UAAU,EAAEM,MAAM,CAACU;AAHhB,OAAP;;AAKJ,SAAKtB,yBAAL;AACI,aAAO,EACH,GAAGW,KADA;AAEHH,QAAAA,WAAW,EAAEG,KAAK,CAACH,WAAN,CAAkBe,MAAlB,CAAyBL,IAAI,IAAIA,IAAI,CAACE,EAAL,KAAYR,MAAM,CAACY,YAApD;AAFV,OAAP;;AAIJ,SAAKrB,kBAAL;AACI,aAAO,EACH,GAAGQ,KADA;AAEHL,QAAAA,UAAU,EAAEM,MAAM,CAACa,OAFhB;AAGHlB,QAAAA,KAAK,EAAE;AAHJ,OAAP;;AAKJ,SAAKH,kBAAL;AACI,aAAO,EACH,GAAGO,KADA;AAEH;AACAJ,QAAAA,KAAK,EAAEK,MAAM,CAACa;AAHX,OAAP;;AAKJ,SAAKvB,6BAAL;AACI,aAAO,EACH,GAAGS,KADA;AAEHH,QAAAA,WAAW,EAAEI,MAAM,CAACa,OAFjB;AAGHC,QAAAA,aAAa,EAAEd,MAAM,CAACc,aAHnB;AAIHC,QAAAA,UAAU,EAAEf,MAAM,CAACe,UAJhB;AAKHC,QAAAA,aAAa,EAAEhB,MAAM,CAACgB,aALnB;AAMHrB,QAAAA,KAAK,EAAE;AANJ,OAAP;;AAQJ;AAAS,aAAOI,KAAP;AAzDb;AA2DH,CA5DD;;AA8DA,eAAeD,OAAf","sourcesContent":["import {\n    SAVE_INSTRUCTOR_REQUEST, FETCH_INSTRUCTOR_REQUEST, UPDATE_INSTRUCTOR_REQUEST, DELETE_INSTRUCTOR_REQUEST, FETCH_ALL_INSTRUCTORS_REQUEST, FETCH_ALL_INSTRUCTORS_SUCCESS,\n    INSTRUCTOR_SUCCESS, INSTRUCTOR_FAILURE\n} from \"./instructorTypes\";\n\nconst initialState = {\n    instructor: '',\n     error: '',\n    instructors: [],\n    currentPage: 1\n};\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case FETCH_ALL_INSTRUCTORS_REQUEST:\n            return {\n                ...state\n            };\n        case UPDATE_INSTRUCTOR_REQUEST:\n            console.log(action);\n            return {\n                ...state,\n                instructor: action.updatedInstructor,\n                //update specific instructor\n                instructors: state.instructors.map((item, index) => {\n                    // Replace the item at index = updatedInstructor\n                    if (index === action.updatedInstructor.id) {\n                        return action.updatedInstructor;\n                    }\n                    // Leave every other item unchanged\n                    return item;\n                })\n            };\n        case FETCH_INSTRUCTOR_REQUEST:\n            return {\n                ...state,\n                instructor: action.updatedInstructor\n            };\n        case SAVE_INSTRUCTOR_REQUEST:\n            return {\n                ...state,\n                instructors: state.instructors.concat(action.newItem),\n                instructor: action.newItem\n            };\n        case DELETE_INSTRUCTOR_REQUEST:\n            return {\n                ...state,\n                instructors: state.instructors.filter(item => item.id !== action.instructorId),\n            };\n        case INSTRUCTOR_SUCCESS:\n            return {\n                ...state,\n                instructor: action.payload,\n                error: ''\n            };\n        case INSTRUCTOR_FAILURE:\n            return {\n                ...state,\n                //instructor: '',\n                error: action.payload\n            };\n        case FETCH_ALL_INSTRUCTORS_SUCCESS:\n            return {\n                ...state,\n                instructors: action.payload,\n                totalElements: action.totalElements,\n                totalPages: action.totalPages,\n                sortDirection: action.sortDirection,\n                error: ''\n            };\n        default: return state;\n    }\n};\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}