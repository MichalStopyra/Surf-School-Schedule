{"ast":null,"code":"var _jsxFileName = \"/home/michal/Desktop/projekty/java/SurfSchoolSchedule/SurfSchoolSchedule/surf-school-schedule/src/components/Lesson/Schedule.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { Card, Table, ButtonGroup, Button, InputGroup, FormControl } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCalendarAlt, faWallet, faEdit, faTrash, faUserPlus, faStepBackward, faFastBackward, faStepForward, faFastForward, faSearch, faTimes, faCheckSquare } from '@fortawesome/free-solid-svg-icons';\nimport SuccessToast from '../SuccessToast';\nimport './../../style/Style.css';\n\nclass Schedule extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.deleteLesson = idLesson => {\n      axios.delete(\"http://localhost:8080/lesson-api/list/\" + idLesson).then(response => {\n        if (response.data != null) {\n          this.setState({\n            \"show\": true\n          });\n          setTimeout(() => this.setState({\n            \"show\": false\n          }), 3000);\n          this.setState({\n            lessons: this.state.lessons.filter(lesson => lesson.id !== idLesson)\n          });\n        } else {\n          this.setState({\n            \"show\": false\n          });\n        }\n      });\n    };\n\n    this.changePage = event => {\n      let target = parseInt(event.target.value);\n\n      if (this.state.searchedLesson) {\n        this.searchLesson(target);\n      } else {\n        this.findAllLessons(target);\n      }\n\n      this.setState({\n        [event.target.name]: target\n      });\n    };\n\n    this.firstPage = () => {\n      let firstPage = 1;\n\n      if (this.state.currentPage > firstPage) {\n        if (this.state.searchedLesson) {\n          this.searchLesson(firstPage);\n        } else {\n          this.findAllLessons(firstPage);\n        }\n      }\n    };\n\n    this.prevPage = () => {\n      let prevPage = this.state.currentPage - 1;\n\n      if (this.state.currentPage > 1) {\n        if (this.state.searchedLesson) {\n          this.searchLesson(prevPage);\n        } else {\n          this.findAllLessons(prevPage);\n        }\n      }\n    };\n\n    this.lastPage = () => {\n      // let lessonsLength = this.props.lessonData.lessons.length;\n      let lessonsLength = this.state.lessons.length;\n      let lastPage = Math.ceil(this.state.totalElements / this.state.lessonsPerPage);\n\n      if (this.state.currentPage < lastPage) {\n        if (this.state.searchedLesson) {\n          this.searchLesson(lastPage);\n        } else {\n          this.findAllLessons(lastPage);\n        }\n      }\n    };\n\n    this.nextPage = () => {\n      let nextPage = this.state.currentPage + 1;\n\n      if (this.state.currentPage < Math.ceil(this.state.totalElements / this.state.lessonsPerPage)) {\n        if (this.state.searchedLesson) {\n          this.searchLesson(nextPage);\n        } else {\n          this.findAllLessons(nextPage);\n        }\n      }\n    };\n\n    this.searchChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.cancelSearch = () => {\n      this.setState({\n        \"searchedLesson\": ''\n      });\n    };\n\n    this.sortData = () => {\n      this.setState(state => ({\n        sortToggle: !state.sortToggle\n      }));\n      this.findAllLessons(this.state.currentPage);\n    };\n\n    this.searchLesson = currentPage => {\n      currentPage -= 1;\n      axios.get(\"http://localhost:8080/lesson-api/search/\" + this.state.searchedLesson + \"?page=\" + currentPage + \"&size=\" + this.state.lessonsPerPage).then(response => response.data).then(data => {\n        this.setState({\n          lessons: data.content,\n          totalPages: data.totalPages,\n          totalElements: data.totalElements,\n          currentPage: data.number + 1\n        });\n      });\n    };\n\n    this.lessonStatusChange = (lesson, newStatus) => {\n      lesson.status = newStatus;\n      axios.put(\"http://localhost:8080/lesson-api/\" + lesson.id, lesson).then(response => {\n        if (response.data != null) {\n          // this.setState({ \"show\": true, \"method\": \"put\" });\n          // setTimeout(() => this.setState({ \"show\": false }), 3000);\n          // setTimeout(() => this.returnToList(), 1000);\n          console.log(\"success\");\n        } else {\n          console.log(\":(\"); // this.setState({ \"show\": false });\n        }\n      });\n      console.log(this);\n      this.findAllLessons(this.state.currentPage);\n      this.findAllLessons(this.state.currentPage);\n    };\n\n    this.returnRow = instructor => {\n      axios.get(\"http://localhost:8080/lesson-api/\" + instructor.id + \"/\" + this.state.date).then(response => {\n        if (response.data != null) {\n          //save when the lessons start \n          let timesTab = response.data.content;\n          timesTab = timesTab.map(t => t.time); //save how long they take\n\n          let howLongTab = response.data.content;\n          howLongTab = howLongTab.map(h => h.howLong); //if lesson is gonna e.g.  start at 12 and take 2h - delete not only 12 but also 1 pm \n\n          for (let i = 0; i < howLongTab.length; ++i) {\n            if (howLongTab[i] > 1) {\n              var pieces = timesTab[i].split(':');\n\n              for (var j = 1; j < howLongTab[i]; ++j) {\n                ++pieces[0];\n                var tempHour = pieces[0] + \":00\";\n                timesTab = timesTab.concat(tempHour);\n              }\n            }\n          }\n\n          return /*#__PURE__*/React.createElement(\"tr\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 25\n            }\n          }, /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 29\n            }\n          }, instructor.firstName + \" \" + instructor.lastName), /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 29\n            }\n          }, this.returnLesson(\"9:00\")), /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 29\n            }\n          }, this.returnLesson(\"10:00\")), /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 29\n            }\n          }, this.returnLesson(\"11:00\")), /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 29\n            }\n          }, this.returnLesson(\"12:00\")), /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 29\n            }\n          }, this.returnLesson(\"13:00\")), /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 29\n            }\n          }, this.returnLesson(\"14:00\")), /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 29\n            }\n          }, this.returnLesson(\"15:00\")), /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 29\n            }\n          }, this.returnLesson(\"16:00\")), /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 29\n            }\n          }, this.returnLesson(\"17:00\")), /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 29\n            }\n          }, this.returnLesson(\"18:00\")), /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 29\n            }\n          }, this.returnLesson(\"19:00\")), /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 29\n            }\n          }, this.returnLesson(\"20:00\")));\n        }\n      });\n    };\n\n    let today = new Date();\n    this.state = {\n      date: today.getMonth() + 1 + '-' + today.getDate() + '-' + today.getFullYear(),\n      instructors: [],\n      lessons: [],\n      instructorDay: [],\n      currentPage: 1,\n      lessonsPerPage: 5,\n      searchedLesson: '',\n      sortToggle: false\n    };\n  }\n\n  componentDidMount() {\n    //this.findAllLessons(this.state.currentPage);\n    this.findAllInstructors(this.state.date); //  this.findAllInstructorDay(this.state.instructors, this.state.date);\n    //this.findAllInstructorDay(\"10-20-2020\");\n  }\n\n  findAllLessons(currentPage) {\n    currentPage -= 1;\n    let sortDirection = this.state.sortToggle ? \"asc\" : \"desc\";\n    axios.get(\"http://localhost:8080/lesson-api/list?page=\" + currentPage + \"&size=\" + this.state.lessonsPerPage + \"&sortBy=status&sortDir=\" + sortDirection).then(response => response.data).then(data => {\n      this.setState({\n        lessons: data.content,\n        totalPages: data.totalPages,\n        totalElements: data.totalElements,\n        currentPage: data.number + 1\n      });\n    });\n  }\n\n  findAllInstructors(date) {\n    var instructors = [];\n    axios.get(\"http://localhost:8080/instructor-api/list?page=0&size=999999999&sortBy=paymentStatus&sortDir=desc\").then(response => response.data).then(data => {\n      instructors = data.content;\n      this.findAllInstructorDay(instructors, date);\n    });\n  }\n\n  findAllInstructorDay(instructors, date) {\n    let allInstrDayTable = [];\n    instructors.forEach(function (instructor) {\n      axios.get(\"http://localhost:8080/lesson-api/\" + instructor.id + \"/\" + date).then(response => {\n        if (response.data != null) {\n          let tempInstrDay = {\n            instructor: '',\n            lessonsThisDay: new Array(12)\n          };\n          tempInstrDay.instructor = instructor.firstName + \" \" + instructor.lastName; //save when the lessons start \n\n          let tab = response.data.content;\n          tempInstrDay.lessonsThisDay = tab;\n          console.log(tempInstrDay);\n          tempInstrDay.lessonsThisDay[9] = 2;\n          allInstrDayTable.push(tempInstrDay);\n          console.log(allInstrDayTable); // tab = timesTab.map(t => {t.time, t.student, t.howLong});\n          //save how long they take\n\n          let howLongTab = response.data.content;\n          howLongTab = howLongTab.map(h => h.howLong);\n          console.log(tempInstrDay); //if lesson is gonna e.g.  start at 12 and take 2h - delete not only 12 but also 1 pm \n          // for (let i = 0; i < howLongTab.length; ++i) {\n          //     if (howLongTab[i] > 1) {\n          //         var pieces = timesTab[i].split(':');\n          //         for (var j = 1; j < howLongTab[i]; ++j) {\n          //             ++pieces[0];\n          //             var tempHour = pieces[0] + \":00\";\n          //             timesTab = timesTab.concat(tempHour)\n          //         }\n          // }\n          //}\n        }\n      });\n    });\n    this.setState({\n      instructorDay: allInstrDayTable\n    });\n  } //change status of lessons that have their date in the past and were not given into not given\n\n\n  checkIfLessonInThePast() {\n    let today = new Date();\n\n    for (let i = 0; i < this.state.lessons.length; ++i) {\n      let temp = new Date(this.state.lessons[i].date);\n\n      if (this.state.lessons[i].status === \"To_Give\" && temp < today) {\n        console.log(\"asd\");\n        this.lessonStatusChange(this.state.lessons[i], 3);\n      }\n    }\n  }\n\n  returnLesson(hour) {}\n\n  render() {\n    const {\n      instructorDay,\n      instructors\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"border border-dark bg-dark text-white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        \"float\": \"left\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faCalendarAlt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 29\n      }\n    }), \"  \", this.state.date)), /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      variant: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 37\n      }\n    }, \"Instructor\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 37\n      }\n    }, \"9:00\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 37\n      }\n    }, \"10:00\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 37\n      }\n    }, \"11:00\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 37\n      }\n    }, \"12:00\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 37\n      }\n    }, \"13:00\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 37\n      }\n    }, \"14:00\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 37\n      }\n    }, \"15:00\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 37\n      }\n    }, \"16:00\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 37\n      }\n    }, \"17:00\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 37\n      }\n    }, \"18:00\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 37\n      }\n    }, \"19:00\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 37\n      }\n    }, \"20:00\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 29\n      }\n    }, this.state.instructorDay.length === 0 ? /*#__PURE__*/React.createElement(\"tr\", {\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      colSpan: \"10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 41\n      }\n    }, \" No Lessons in the Data Base\")) : this.state.instructorDay.map(instrDay => /*#__PURE__*/React.createElement(\"tr\", {\n      key: instrDay.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 41\n      }\n    }, console.log(\"asd\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 45\n      }\n    }, instrDay.instructor)))))), /*#__PURE__*/React.createElement(Card.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nexport default Schedule;","map":{"version":3,"sources":["/home/michal/Desktop/projekty/java/SurfSchoolSchedule/SurfSchoolSchedule/surf-school-schedule/src/components/Lesson/Schedule.js"],"names":["React","axios","Link","Card","Table","ButtonGroup","Button","InputGroup","FormControl","FontAwesomeIcon","faCalendarAlt","faWallet","faEdit","faTrash","faUserPlus","faStepBackward","faFastBackward","faStepForward","faFastForward","faSearch","faTimes","faCheckSquare","SuccessToast","Schedule","Component","constructor","props","deleteLesson","idLesson","delete","then","response","data","setState","setTimeout","lessons","state","filter","lesson","id","changePage","event","target","parseInt","value","searchedLesson","searchLesson","findAllLessons","name","firstPage","currentPage","prevPage","lastPage","lessonsLength","length","Math","ceil","totalElements","lessonsPerPage","nextPage","searchChange","cancelSearch","sortData","sortToggle","get","content","totalPages","number","lessonStatusChange","newStatus","status","put","console","log","returnRow","instructor","date","timesTab","map","t","time","howLongTab","h","howLong","i","pieces","split","j","tempHour","concat","firstName","lastName","returnLesson","today","Date","getMonth","getDate","getFullYear","instructors","instructorDay","componentDidMount","findAllInstructors","sortDirection","findAllInstructorDay","allInstrDayTable","forEach","tempInstrDay","lessonsThisDay","Array","tab","push","checkIfLessonInThePast","temp","hour","render","instrDay"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { Card, Table, ButtonGroup, Button, InputGroup, FormControl } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCalendarAlt, faWallet, faEdit, faTrash, faUserPlus, faStepBackward, faFastBackward, faStepForward, faFastForward, faSearch, faTimes, faCheckSquare } from '@fortawesome/free-solid-svg-icons';\nimport SuccessToast from '../SuccessToast';\n\nimport './../../style/Style.css';\n\n\nclass Schedule extends React.Component {\n\n    constructor(props) {\n        super(props);\n        let today = new Date();\n        this.state = {\n            date: today.getMonth() + 1 + '-' + today.getDate() + '-' + today.getFullYear(),\n            instructors: [],\n            lessons: [],\n            instructorDay: [],\n            currentPage: 1,\n            lessonsPerPage: 5,\n            searchedLesson: '',\n            sortToggle: false\n        };\n    }\n\n    componentDidMount() {\n        //this.findAllLessons(this.state.currentPage);\n        this.findAllInstructors(this.state.date);\n      //  this.findAllInstructorDay(this.state.instructors, this.state.date);\n        //this.findAllInstructorDay(\"10-20-2020\");\n\n    }\n\n\n\n\n\n    findAllLessons(currentPage) {\n        currentPage -= 1;\n        let sortDirection = this.state.sortToggle ? \"asc\" : \"desc\";\n        axios.get(\"http://localhost:8080/lesson-api/list?page=\" + currentPage + \"&size=\" + this.state.lessonsPerPage + \"&sortBy=status&sortDir=\" + sortDirection)\n            .then(response => response.data)\n            .then((data) => {\n                this.setState({\n                    lessons: data.content,\n                    totalPages: data.totalPages,\n                    totalElements: data.totalElements,\n                    currentPage: data.number + 1\n                }\n\n                );\n            }\n            );\n\n    }\n\n    findAllInstructors(date) {\n        var instructors = [];\n        \n        axios.get(\"http://localhost:8080/instructor-api/list?page=0&size=999999999&sortBy=paymentStatus&sortDir=desc\")\n            .then(response => response.data)\n            .then((data) => {  \n                instructors = data.content;\n                this.findAllInstructorDay(instructors, date);\n            });\n\n    }\n\n    findAllInstructorDay(instructors, date) {\n\n\n        let allInstrDayTable = [];\n        instructors.forEach(function (instructor) {\n            axios.get(\"http://localhost:8080/lesson-api/\" + instructor.id + \"/\" + date)\n                .then(response => {\n                    if (response.data != null) {\n\n                        let tempInstrDay = {\n                             instructor: '',\n                             lessonsThisDay: new Array(12)\n                        };\n\n                        tempInstrDay.instructor = instructor.firstName + \" \" + instructor.lastName;\n                        //save when the lessons start \n                        let tab = response.data.content;\n                        tempInstrDay.lessonsThisDay = tab;\n                        console.log(tempInstrDay);\n                        tempInstrDay.lessonsThisDay[9]=2;\n\n                        allInstrDayTable.push(tempInstrDay);\n                        console.log(allInstrDayTable);\n                        // tab = timesTab.map(t => {t.time, t.student, t.howLong});\n\n                        //save how long they take\n                        let howLongTab = response.data.content;\n                        howLongTab = howLongTab.map(h => h.howLong);\n\n                        console.log(tempInstrDay);\n                        //if lesson is gonna e.g.  start at 12 and take 2h - delete not only 12 but also 1 pm \n                        // for (let i = 0; i < howLongTab.length; ++i) {\n                        //     if (howLongTab[i] > 1) {\n                        //         var pieces = timesTab[i].split(':');\n\n                        //         for (var j = 1; j < howLongTab[i]; ++j) {\n                        //             ++pieces[0];\n                        //             var tempHour = pieces[0] + \":00\";\n                        //             timesTab = timesTab.concat(tempHour)\n                        //         }\n                        // }\n                        //}\n\n                    }\n                }\n\n                )\n        });\n        this.setState({\n            instructorDay: allInstrDayTable\n        });\n    }\n\n    //change status of lessons that have their date in the past and were not given into not given\n    checkIfLessonInThePast() {\n        let today = new Date();\n\n        for (let i = 0; i < this.state.lessons.length; ++i) {\n            let temp = new Date(this.state.lessons[i].date);\n            if (this.state.lessons[i].status === \"To_Give\" && temp < today) {\n                console.log(\"asd\");\n                this.lessonStatusChange(this.state.lessons[i], 3)\n            }\n        }\n    };\n\n\n    deleteLesson = (idLesson) => {\n        axios.delete(\"http://localhost:8080/lesson-api/list/\" + idLesson)\n            .then(response => {\n                if (response.data != null) {\n                    this.setState({ \"show\": true });\n                    setTimeout(() => this.setState({ \"show\": false }), 3000);\n                    this.setState({\n                        lessons: this.state.lessons.filter(lesson => lesson.id !== idLesson)\n                    });\n                } else {\n                    this.setState({ \"show\": false });\n                }\n            });\n    }\n\n    changePage = event => {\n        let target = parseInt(event.target.value);\n        if (this.state.searchedLesson) {\n            this.searchLesson(target)\n        } else {\n            this.findAllLessons(target);\n        }\n        this.setState({\n            [event.target.name]: target\n        });\n\n    };\n\n    firstPage = () => {\n        let firstPage = 1;\n        if (this.state.currentPage > firstPage) {\n            if (this.state.searchedLesson) {\n                this.searchLesson(firstPage)\n            } else {\n                this.findAllLessons(firstPage);\n            }\n        }\n    };\n\n    prevPage = () => {\n        let prevPage = this.state.currentPage - 1;\n        if (this.state.currentPage > 1) {\n            if (this.state.searchedLesson) {\n                this.searchLesson(prevPage)\n            } else {\n                this.findAllLessons(prevPage);\n            }\n        }\n    };\n\n    lastPage = () => {\n        // let lessonsLength = this.props.lessonData.lessons.length;\n        let lessonsLength = this.state.lessons.length;\n        let lastPage = Math.ceil(this.state.totalElements / this.state.lessonsPerPage);\n        if (this.state.currentPage < lastPage) {\n            if (this.state.searchedLesson) {\n                this.searchLesson(lastPage)\n            } else {\n                this.findAllLessons(lastPage);\n            }\n        }\n    };\n\n    nextPage = () => {\n        let nextPage = this.state.currentPage + 1;\n        if (this.state.currentPage < Math.ceil(this.state.totalElements / this.state.lessonsPerPage)) {\n            if (this.state.searchedLesson) {\n                this.searchLesson(nextPage)\n            } else {\n                this.findAllLessons(nextPage);\n            }\n        }\n    };\n\n    searchChange = event => {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    };\n\n    cancelSearch = () => {\n        this.setState({ \"searchedLesson\": '' })\n    };\n\n    sortData = () => {\n        this.setState(state => ({\n            sortToggle: !state.sortToggle\n        }));\n\n        this.findAllLessons(this.state.currentPage);\n    }\n\n    searchLesson = (currentPage) => {\n        currentPage -= 1;\n        axios.get(\"http://localhost:8080/lesson-api/search/\" + this.state.searchedLesson + \"?page=\" + currentPage + \"&size=\" + this.state.lessonsPerPage)\n            .then(response => response.data)\n            .then((data) => {\n                this.setState({\n                    lessons: data.content,\n                    totalPages: data.totalPages,\n                    totalElements: data.totalElements,\n                    currentPage: data.number + 1\n                });\n            });\n    }\n\n    lessonStatusChange = (lesson, newStatus) => {\n        lesson.status = newStatus;\n        axios.put(\"http://localhost:8080/lesson-api/\" + lesson.id, lesson)\n            .then(response => {\n                if (response.data != null) {\n                    // this.setState({ \"show\": true, \"method\": \"put\" });\n                    // setTimeout(() => this.setState({ \"show\": false }), 3000);\n                    // setTimeout(() => this.returnToList(), 1000);\n                    console.log(\"success\");\n                } else {\n                    console.log(\":(\");\n                    // this.setState({ \"show\": false });\n                }\n            });\n        console.log(this);\n        this.findAllLessons(this.state.currentPage);\n        this.findAllLessons(this.state.currentPage);\n\n    }\n\n    returnLesson(hour) {\n\n    }\n\n    returnRow = (instructor) => {\n        axios.get(\"http://localhost:8080/lesson-api/\" + instructor.id + \"/\" + this.state.date)\n            .then(response => {\n                if (response.data != null) {\n                    //save when the lessons start \n                    let timesTab = response.data.content;\n                    timesTab = timesTab.map(t => t.time);\n\n                    //save how long they take\n                    let howLongTab = response.data.content;\n                    howLongTab = howLongTab.map(h => h.howLong);\n\n                    //if lesson is gonna e.g.  start at 12 and take 2h - delete not only 12 but also 1 pm \n                    for (let i = 0; i < howLongTab.length; ++i) {\n                        if (howLongTab[i] > 1) {\n                            var pieces = timesTab[i].split(':');\n\n                            for (var j = 1; j < howLongTab[i]; ++j) {\n                                ++pieces[0];\n                                var tempHour = pieces[0] + \":00\";\n                                timesTab = timesTab.concat(tempHour)\n                            }\n                        }\n                    }\n\n                    return (\n                        <tr>\n\n                            <td>{instructor.firstName + \" \" + instructor.lastName}</td>\n                            <td>{this.returnLesson(\"9:00\")}</td>\n                            <td>{this.returnLesson(\"10:00\")}</td>\n                            <td>{this.returnLesson(\"11:00\")}</td>\n                            <td>{this.returnLesson(\"12:00\")}</td>\n                            <td>{this.returnLesson(\"13:00\")}</td>\n                            <td>{this.returnLesson(\"14:00\")}</td>\n                            <td>{this.returnLesson(\"15:00\")}</td>\n                            <td>{this.returnLesson(\"16:00\")}</td>\n                            <td>{this.returnLesson(\"17:00\")}</td>\n                            <td>{this.returnLesson(\"18:00\")}</td>\n                            <td>{this.returnLesson(\"19:00\")}</td>\n                            <td>{this.returnLesson(\"20:00\")}</td>\n                        </tr>\n\n                    );\n                }\n            })\n    };\n\n    render() {\n        const { instructorDay, instructors } = this.state;\n\n        return (\n            <div>\n\n                <Card className={\"border border-dark bg-dark text-white\"}>\n                    <Card.Header>\n                    <div style={{ \"float\": \"left\" }}>\n                            <FontAwesomeIcon icon={faCalendarAlt} />  {this.state.date}  \n                        </div>\n\n                    </Card.Header>\n                    <Card.Body>\n                        <Table striped bordered hover variant=\"dark\">\n                            <thead>\n                                <tr>\n                                    <th>Instructor</th>\n                                    <th>9:00</th>\n                                    <th>10:00</th>\n                                    <th>11:00</th>\n                                    <th>12:00</th>\n                                    <th>13:00</th>\n                                    <th>14:00</th>\n                                    <th>15:00</th>\n                                    <th>16:00</th>\n                                    <th>17:00</th>\n                                    <th>18:00</th>\n                                    <th>19:00</th>\n                                    <th>20:00</th>\n\n                                </tr>\n                            </thead>\n\n\n                            <tbody>\n                                {this.state.instructorDay.length === 0 ?\n                                    <tr align=\"center\">\n                                        <td colSpan=\"10\"> No Lessons in the Data Base</td>\n                                    </tr> :\n                                    this.state.instructorDay.map(instrDay => (\n                                        <tr key={instrDay.id}>\n                                            {console.log(\"asd\")}\n                                            <td>{instrDay.instructor}</td>\n\n\n                                        </tr>\n\n                                    ))\n\n\n                                }\n                            </tbody>\n\n\n                        </Table>\n                    </Card.Body>\n                    <Card.Footer>\n\n\n\n                    </Card.Footer>\n                </Card>\n            </div>\n\n        );\n    }\n\n\n}\n\nexport default Schedule;"]},"metadata":{},"sourceType":"module"}