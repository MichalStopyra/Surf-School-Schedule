{"ast":null,"code":"var _jsxFileName = \"/home/michal/Desktop/projekty/java/SurfSchoolSchedule/SurfSchoolSchedule/surf-school-schedule/src/components/Lesson/Lesson.js\";\nimport React from 'react';\nimport { Form, Card, Col, Button } from 'react-bootstrap';\nimport { faSave, faUndo, faArrowLeft, faEdit, faPlusSquare, faLanguage } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport SuccessToast from '../SuccessToast';\nimport Instructor from '../Instructor/Instructor';\n\nclass Lesson extends React.Component {\n  constructor(props) {\n    super(props);\n    this.initialState = {\n      id: '',\n      date: 'Select Date',\n      time: 'Select Hour',\n      nrStudents: 'Select Nr of Students',\n      status: 0,\n      howLong: 'Select How Long',\n      students: [],\n      instructors: [],\n      dates: [],\n      times: [],\n      nrStudTable: [],\n      howLongTable: [],\n      instructor: {\n        id: '',\n        lastName: 'Select Instructor',\n        firstName: '',\n        NrHoursWeek: 0,\n        NrHoursFull: 0,\n        WeekWage: 0\n      },\n      student: {\n        id: '',\n        lastName: 'Select Student',\n        firstName: '',\n        idCardNr: '',\n        telNr: '',\n        paymentStatus: 0,\n        lessonHours: 0,\n        unpaidLessons: 0,\n        moneyOwing: 0,\n        moneyInAdvance: ''\n      }\n    };\n\n    this.findAllStudents = () => {\n      axios.get(\"http://localhost:8080/student-api/list?page=0&size=999999999&sortBy=paymentStatus&sortDir=desc\").then(response => response.data).then(data => {\n        if (!this.state.students.length) this.state.students.push(this.initialState.student);\n        this.setState({\n          students: this.state.students.concat(data.content)\n        });\n        if (this.state.id) this.setState({\n          students: this.state.students.filter(student => student.id !== this.state.students[0].id)\n        });\n      });\n    };\n\n    this.findAllInstructors = () => {\n      axios.get(\"http://localhost:8080/instructor-api/list?page=0&size=999999999&sortBy=paymentStatus&sortDir=desc\").then(response => response.data).then(data => {\n        if (!this.state.instructors.length) this.state.instructors.push(this.state.instructor); // this.state.instructors.push(\"Select Instructor\");\n\n        this.setState({\n          instructors: this.state.instructors.concat(data.content)\n        });\n        if (this.state.id) this.setState({\n          instructors: this.state.instructors.filter(instructor => instructor.id !== this.state.instructors[0].id)\n        });\n      });\n    };\n\n    this.findLessonById = idLesson => {\n      axios.get(\"http://localhost:8080/lesson-api/\" + idLesson).then(response => {\n        if (response.data != null) {\n          this.setState({\n            id: response.data.id,\n            instructor: response.data.instructor,\n            student: response.data.student,\n            date: response.data.date,\n            time: response.data.time,\n            howLong: response.data.howLong,\n            nrStudents: response.data.nrStudents,\n            status: response.data.status\n          });\n        }\n      }).catch(error => {\n        console.error(\"Error: \" + error);\n      });\n    };\n\n    this.returnToList = () => {\n      return this.props.history.push(\"/lessons\");\n    };\n\n    this.isValid = () => {\n      if (this.state.student.lastName === 'Select Student' || this.state.instructor.lastName === 'Select Instructor' || this.state.date === 'Select Date' || this.state.time === 'Select Hour' || this.state.nrStudents === 'Select Nr of Students' || this.state.howLong === 'Select How Long') {\n        this.setState({\n          \"showInvalidMessage\": true,\n          \"method\": \"post\"\n        });\n        setTimeout(() => this.setState({\n          \"showInvalidMessage\": false\n        }), 3000);\n        return false;\n      } else return true;\n    };\n\n    this.submitLesson = event => {\n      event.preventDefault();\n\n      if (!this.isValid()) {\n        return;\n      }\n\n      const lesson = {\n        instructor: JSON.parse(this.state.instructor),\n        student: JSON.parse(this.state.student),\n        date: this.state.date,\n        time: this.state.time,\n        howLong: this.state.howLong,\n        nrStudents: this.state.nrStudents,\n        status: this.state.status\n      };\n      axios.post(\"http://localhost:8080/lesson-api/list\", lesson).then(response => {\n        if (response.data != null) {\n          this.setState({\n            \"show\": true,\n            \"method\": \"post\"\n          });\n          setTimeout(() => this.setState({\n            \"show\": false\n          }), 3000);\n          setTimeout(() => this.returnToList(), 1000);\n        } else {\n          this.setState({\n            \"show\": false\n          });\n        }\n      });\n      this.setState(this.initialState);\n    };\n\n    this.updateLesson = event => {\n      event.preventDefault();\n\n      if (!this.isValid()) {\n        return;\n      }\n\n      if (typeof this.state.instructor === \"object\") this.state.instructor = JSON.stringify(this.state.instructor);\n      if (typeof this.state.student === \"object\") this.state.student = JSON.stringify(this.state.student);\n      const lesson = {\n        id: this.state.id,\n        instructor: JSON.parse(this.state.instructor),\n        student: JSON.parse(this.state.student),\n        date: this.state.date,\n        time: this.state.time,\n        howLong: this.state.howLong,\n        nrStudents: this.state.nrStudents,\n        status: this.state.status\n      };\n      axios.put(\"http://localhost:8080/lesson-api/\" + this.state.id, lesson).then(response => {\n        if (response.data != null) {\n          this.setState({\n            \"show\": true,\n            \"method\": \"put\"\n          });\n          setTimeout(() => this.setState({\n            \"show\": false\n          }), 3000);\n          setTimeout(() => this.returnToList(), 1000);\n        } else {\n          this.setState({\n            \"show\": false\n          });\n        }\n      });\n      this.setState(this.initialState);\n    };\n\n    this.resetLesson = () => {\n      this.setState(() => this.initialState);\n      this.findAllInstructors();\n      this.findAllStudents();\n      this.setArrays();\n    };\n\n    this.lessonChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.lessonChangeInstructor = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n      if (typeof this.state.instructor === \"string\") this.state.instructor = JSON.parse(this.state.instructor);\n      alert(this.state.instructor);\n      axios.get(\"http://localhost:8080/lesson-api/\" + this.state.instructor.id, +\"/\" + this.state.date).then(response => {\n        if (response.data != null) {\n          var timesTab = response.data.time;\n          this.setState({\n            times: this.state.times.filter(function (e) {\n              return this.indexOf(e) < 0;\n            }, timesTab)\n          });\n        }\n      }).catch(error => {\n        console.error(\"Error: \" + error);\n      });\n    };\n\n    this.state = this.initialState;\n    this.state.show = false;\n    this.state.showInvalidMessage = false;\n    this.state.method = 'post';\n    this.lessonChange = this.lessonChange.bind(this);\n    this.submitLesson = this.submitLesson.bind(this);\n  }\n\n  componentDidMount() {\n    const idLesson = +this.props.match.params.id;\n\n    if (idLesson) {\n      this.findLessonById(idLesson);\n    }\n\n    this.findAllStudents();\n    this.findAllInstructors();\n    this.setArrays();\n\n    if (idLesson) {\n      console.log(this.state.instructors[0]);\n      console.log(this.state.dates[0]);\n    }\n  }\n\n  arrayWithHours() {\n    var arr = [],\n        i,\n        j;\n\n    for (i = 9; i < 21; i++) {\n      arr.push(i + \":00\");\n    }\n\n    return arr;\n  }\n\n  addDays(date, days) {\n    var result = new Date(date);\n    result.setDate(result.getDate() + days);\n    return result;\n  }\n\n  getDateArray(start, end) {\n    var arr = new Array();\n    var dt = new Date(start);\n\n    while (dt < end) {\n      var dd = dt.getDate();\n      var mm = dt.getMonth() + 1;\n      var yyyy = dt.getFullYear();\n\n      if (dd < 10) {\n        dd = '0' + dd;\n      }\n\n      if (mm < 10) {\n        mm = '0' + mm;\n      }\n\n      var fullDate = dd + '-' + mm + '-' + yyyy;\n      arr.push(fullDate);\n      dt.setDate(dt.getDate() + 1);\n    }\n\n    return arr;\n  }\n\n  getNrStudArray() {\n    var arr = new Array();\n\n    for (var i = 1; i < 6; ++i) {\n      arr.push(i);\n    }\n\n    return arr;\n  }\n\n  getHowLongArray() {\n    var arr = new Array();\n\n    for (var i = 1; i < 4; ++i) {\n      arr.push(i);\n    }\n\n    return arr;\n  }\n\n  setArrays() {\n    this.state.dates.push('Select Date');\n    this.state.times.push('Select Hour');\n    this.state.howLongTable.push('Select How Long');\n    this.state.nrStudTable.push('Select Nr of Students');\n    this.setState({\n      dates: this.state.dates.concat(this.getDateArray(new Date(), this.addDays(new Date(), 7))),\n      times: this.state.times.concat(this.arrayWithHours()),\n      howLongTable: this.state.howLongTable.concat(this.getHowLongArray()),\n      nrStudTable: this.state.nrStudTable.concat(this.getNrStudArray())\n    });\n  }\n\n  render() {\n    const {\n      student,\n      instructor,\n      date,\n      time,\n      howLong,\n      nrStudents\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        \"display\": this.state.show ? \"block\" : \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(SuccessToast, {\n      show: this.state.show,\n      message: this.state.method === \"put\" ? \"Lesson Updated Successfully\" : \"Lesson Saved Successfully.\",\n      type: \"success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        \"display\": this.state.showInvalidMessage ? \"block\" : \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(SuccessToast, {\n      show: this.state.showInvalidMessage,\n      message: \"Fill out the required fields.\",\n      type: \"dangerNoSuccess\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Card, {\n      className: \"border border-dark bg-dark text-white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: this.state.id ? faEdit : faPlusSquare,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 25\n      }\n    }), \" \", this.state.id ? \"Update Lesson\" : \"Add New Lesson\"), /*#__PURE__*/React.createElement(Form, {\n      onReset: this.resetLesson,\n      onSubmit: this.state.id ? this.updateLesson : this.submitLesson,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridStudent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 37\n      }\n    }, \"Student\"), /*#__PURE__*/React.createElement(Form.Control, {\n      required: true,\n      as: \"select\",\n      name: \"student\",\n      value: student,\n      onChange: this.lessonChange,\n      className: \"bg-dark text-white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 37\n      }\n    }, this.state.students.map(student => /*#__PURE__*/React.createElement(\"option\", {\n      key: student.id,\n      value: JSON.stringify(student),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 45\n      }\n    }, student.lastName + \" \" + student.firstName)))), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridInstructor\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 37\n      }\n    }, \"Instructor\"), /*#__PURE__*/React.createElement(Form.Control, {\n      required: true,\n      as: \"select\",\n      autoComplete: \"off\",\n      name: \"instructor\",\n      value: instructor,\n      onChange: this.lessonChangeInstructor,\n      className: \"bg-dark text-white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 37\n      }\n    }, this.state.instructors.filter((item, index) => this.state.instructors.indexOf(item) === index).map(instructor => /*#__PURE__*/React.createElement(\"option\", {\n      key: instructor.id,\n      value: JSON.stringify(instructor),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 49\n      }\n    }, instructor.lastName + \" \" + instructor.firstName))))), /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridDate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 37\n      }\n    }, \"Date [dd-mm-yyyy]\"), /*#__PURE__*/React.createElement(Form.Control, {\n      required: true,\n      as: \"select\",\n      autoComplete: \"off\",\n      name: \"date\",\n      value: date,\n      onChange: this.lessonChange,\n      className: \"bg-dark text-white\",\n      placeholder: \"Select Date\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 37\n      }\n    }, this.state.dates.map(date => /*#__PURE__*/React.createElement(\"option\", {\n      key: date,\n      value: date,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 45\n      }\n    }, date)))), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridTime\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 37\n      }\n    }, \"Time\"), /*#__PURE__*/React.createElement(Form.Control, {\n      required: true,\n      as: \"select\",\n      autoComplete: \"off\",\n      name: \"time\",\n      value: time,\n      onChange: this.lessonChange,\n      className: \"bg-dark text-white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 37\n      }\n    }, this.state.times.map(time => /*#__PURE__*/React.createElement(\"option\", {\n      key: time,\n      value: time,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 45\n      }\n    }, time))))), /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridHowLong\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 37\n      }\n    }, \"How Long [h]\"), /*#__PURE__*/React.createElement(Form.Control, {\n      required: true,\n      as: \"select\",\n      autoComplete: \"off\",\n      name: \"howLong\",\n      value: howLong,\n      onChange: this.lessonChange,\n      className: \"bg-dark text-white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 37\n      }\n    }, this.state.howLongTable.map(howLong => /*#__PURE__*/React.createElement(\"option\", {\n      key: howLong,\n      value: howLong,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 45\n      }\n    }, howLong)))), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridNrStudents\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 37\n      }\n    }, \"Nr Of Students\"), /*#__PURE__*/React.createElement(Form.Control, {\n      required: true,\n      as: \"select\",\n      autoComplete: \"off\",\n      name: \"nrStudents\",\n      value: nrStudents,\n      onChange: this.lessonChange,\n      className: \"bg-dark text-white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 37\n      }\n    }, this.state.nrStudTable.map(nrStudents => /*#__PURE__*/React.createElement(\"option\", {\n      key: nrStudents,\n      value: nrStudents,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 45\n      }\n    }, nrStudents)))))), /*#__PURE__*/React.createElement(Card.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      size: \"sm\",\n      variant: \"primary\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faSave,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 37\n      }\n    }), \" \", this.state.id ? \"Update\" : \"Submit\"), '      ', /*#__PURE__*/React.createElement(Button, {\n      size: \"sm\",\n      variant: \"secondary\",\n      type: \"reset\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faUndo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 37\n      }\n    }), \"  Reset\")), '      ', /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      size: \"sm\",\n      variant: \"light\",\n      type: \"button\",\n      onClick: this.returnToList.bind(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faArrowLeft,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 37\n      }\n    }), \"  Return\"))))));\n  }\n\n}\n\nexport default Lesson;","map":{"version":3,"sources":["/home/michal/Desktop/projekty/java/SurfSchoolSchedule/SurfSchoolSchedule/surf-school-schedule/src/components/Lesson/Lesson.js"],"names":["React","Form","Card","Col","Button","faSave","faUndo","faArrowLeft","faEdit","faPlusSquare","faLanguage","FontAwesomeIcon","Link","axios","SuccessToast","Instructor","Lesson","Component","constructor","props","initialState","id","date","time","nrStudents","status","howLong","students","instructors","dates","times","nrStudTable","howLongTable","instructor","lastName","firstName","NrHoursWeek","NrHoursFull","WeekWage","student","idCardNr","telNr","paymentStatus","lessonHours","unpaidLessons","moneyOwing","moneyInAdvance","findAllStudents","get","then","response","data","state","length","push","setState","concat","content","filter","findAllInstructors","findLessonById","idLesson","catch","error","console","returnToList","history","isValid","setTimeout","submitLesson","event","preventDefault","lesson","JSON","parse","post","updateLesson","stringify","put","resetLesson","setArrays","lessonChange","target","name","value","lessonChangeInstructor","alert","timesTab","e","indexOf","show","showInvalidMessage","method","bind","componentDidMount","match","params","log","arrayWithHours","arr","i","j","addDays","days","result","Date","setDate","getDate","getDateArray","start","end","Array","dt","dd","mm","getMonth","yyyy","getFullYear","fullDate","getNrStudArray","getHowLongArray","render","map","item","index"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Form, Card, Col, Button } from 'react-bootstrap';\nimport { faSave, faUndo, faArrowLeft, faEdit, faPlusSquare, faLanguage } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport SuccessToast from '../SuccessToast';\nimport Instructor from '../Instructor/Instructor';\n\nclass Lesson extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = this.initialState;\n        this.state.show = false;\n        this.state.showInvalidMessage = false;\n\n        this.state.method = 'post';\n        this.lessonChange = this.lessonChange.bind(this);\n        this.submitLesson = this.submitLesson.bind(this);\n\n    }\n\n    initialState = {\n        id: '', date: 'Select Date', time: 'Select Hour', nrStudents: 'Select Nr of Students', status: 0, howLong: 'Select How Long',\n        students: [], instructors: [], dates: [], times: [], nrStudTable: [], howLongTable: [],\n        instructor: {\n            id: '', lastName: 'Select Instructor', firstName: '', NrHoursWeek: 0, NrHoursFull: 0, WeekWage: 0\n        },\n        student: {\n            id: '', lastName: 'Select Student', firstName: '', idCardNr: '', telNr: '', paymentStatus: 0, lessonHours: 0, unpaidLessons: 0, moneyOwing: 0, moneyInAdvance: ''\n        }\n    }\n\n    componentDidMount() {\n        const idLesson = +this.props.match.params.id;\n\n        if (idLesson) {\n            this.findLessonById(idLesson);\n        }\n        this.findAllStudents();\n        this.findAllInstructors();\n        this.setArrays();\n\n        if (idLesson) {\n            console.log(this.state.instructors[0]);\n            console.log(this.state.dates[0]);\n\n        }\n    };\n\n\n    arrayWithHours() {\n        var arr = [], i, j;\n        for (i = 9; i < 21; i++) {\n            arr.push(i + \":00\");\n        }\n        return arr;\n    };\n\n    addDays(date, days) {\n        var result = new Date(date);\n        result.setDate(result.getDate() + days);\n        return result;\n    }\n\n    getDateArray(start, end) {\n        var arr = new Array();\n        var dt = new Date(start);\n        while (dt < end) {\n            var dd = dt.getDate();\n            var mm = dt.getMonth() + 1;\n            var yyyy = dt.getFullYear();\n            if (dd < 10) {\n                dd = '0' + dd;\n            }\n            if (mm < 10) {\n                mm = '0' + mm;\n            }\n            var fullDate = dd + '-' + mm + '-' + yyyy;\n            arr.push(fullDate);\n            dt.setDate(dt.getDate() + 1);\n        }\n        return arr;\n    }\n\n    getNrStudArray() {\n        var arr = new Array();\n        for (var i = 1; i < 6; ++i) {\n            arr.push(i);\n        }\n        return arr;\n    }\n\n    getHowLongArray() {\n        var arr = new Array();\n        for (var i = 1; i < 4; ++i) {\n            arr.push(i);\n        }\n        return arr;\n    }\n\n    setArrays() {\n        this.state.dates.push('Select Date');\n        this.state.times.push('Select Hour');\n        this.state.howLongTable.push('Select How Long');\n        this.state.nrStudTable.push('Select Nr of Students');\n        this.setState({\n            dates: this.state.dates.concat(this.getDateArray(new Date(), this.addDays(new Date(), 7))),\n            times: this.state.times.concat(this.arrayWithHours()),\n            howLongTable: this.state.howLongTable.concat(this.getHowLongArray()),\n            nrStudTable: this.state.nrStudTable.concat(this.getNrStudArray())\n        });\n    }\n\n    findAllStudents = () => {\n        axios.get(\"http://localhost:8080/student-api/list?page=0&size=999999999&sortBy=paymentStatus&sortDir=desc\")\n            .then(response => response.data)\n            .then((data) => {\n                if (!this.state.students.length)\n                    this.state.students.push(this.initialState.student);\n                this.setState({\n                    students: this.state.students.concat(data.content)\n                });\n\n                if (this.state.id)\n                    this.setState({\n                        students: this.state.students.filter(student => student.id !== this.state.students[0].id)\n                    });\n            });\n    };\n\n\n\n    findAllInstructors = () => {\n        axios.get(\"http://localhost:8080/instructor-api/list?page=0&size=999999999&sortBy=paymentStatus&sortDir=desc\")\n            .then(response => response.data)\n            .then((data) => {\n                if (!this.state.instructors.length)\n                    this.state.instructors.push(this.state.instructor);\n                // this.state.instructors.push(\"Select Instructor\");\n\n                this.setState({\n                    instructors: this.state.instructors.concat(data.content)\n                });\n\n                if (this.state.id)\n                    this.setState({\n                        instructors: this.state.instructors.filter(instructor => instructor.id !== this.state.instructors[0].id)\n                    });\n\n            });\n\n    };\n\n\n    findLessonById = (idLesson) => {\n        axios.get(\"http://localhost:8080/lesson-api/\" + idLesson)\n            .then(response => {\n                if (response.data != null) {\n                    this.setState({\n                        id: response.data.id,\n                        instructor: response.data.instructor,\n                        student: response.data.student,\n                        date: response.data.date,\n                        time: response.data.time,\n                        howLong: response.data.howLong,\n                        nrStudents: response.data.nrStudents,\n                        status: response.data.status,\n                    });\n\n                }\n            }).catch((error) => {\n                console.error(\"Error: \" + error);\n            });\n    };\n\n    returnToList = () => {\n        return this.props.history.push(\"/lessons\");\n    };\n\n    isValid = () => {\n        if (this.state.student.lastName === 'Select Student' ||\n            this.state.instructor.lastName === 'Select Instructor' ||\n            this.state.date === 'Select Date' ||\n            this.state.time === 'Select Hour' ||\n            this.state.nrStudents === 'Select Nr of Students' ||\n            this.state.howLong === 'Select How Long') {\n            this.setState({ \"showInvalidMessage\": true, \"method\": \"post\" });\n            setTimeout(() => this.setState({ \"showInvalidMessage\": false }), 3000);\n            return false;\n        }\n        else\n            return true;\n    }\n\n    submitLesson = event => {\n        event.preventDefault();\n        if (!this.isValid()) {\n            return;\n        }\n\n        const lesson = {\n            instructor: JSON.parse(this.state.instructor),\n            student: JSON.parse(this.state.student),\n            date: this.state.date,\n            time: this.state.time,\n            howLong: this.state.howLong,\n            nrStudents: this.state.nrStudents,\n            status: this.state.status\n        };\n\n        axios.post(\"http://localhost:8080/lesson-api/list\", lesson)\n            .then(response => {\n                if (response.data != null) {\n                    this.setState({ \"show\": true, \"method\": \"post\" });\n                    setTimeout(() => this.setState({ \"show\": false }), 3000);\n                    setTimeout(() => this.returnToList(), 1000);\n                } else {\n                    this.setState({ \"show\": false });\n                }\n            });\n        this.setState(this.initialState);\n\n    };\n\n    updateLesson = event => {\n        event.preventDefault();\n        if (!this.isValid()) {\n            return;\n        }\n        if (typeof (this.state.instructor) === \"object\")\n            this.state.instructor = JSON.stringify(this.state.instructor);\n\n        if (typeof (this.state.student) === \"object\")\n            this.state.student = JSON.stringify(this.state.student);\n\n        const lesson = {\n            id: this.state.id,\n            instructor: JSON.parse(this.state.instructor),\n            student: JSON.parse(this.state.student),\n            date: this.state.date,\n            time: this.state.time,\n            howLong: this.state.howLong,\n            nrStudents: this.state.nrStudents,\n            status: this.state.status\n        };\n\n        axios.put(\"http://localhost:8080/lesson-api/\" + this.state.id, lesson)\n            .then(response => {\n                if (response.data != null) {\n                    this.setState({ \"show\": true, \"method\": \"put\" });\n                    setTimeout(() => this.setState({ \"show\": false }), 3000);\n                    setTimeout(() => this.returnToList(), 1000);\n                } else {\n                    this.setState({ \"show\": false });\n                }\n            });\n        this.setState(this.initialState);\n    }\n\n    resetLesson = () => {\n        this.setState(() => this.initialState);\n        this.findAllInstructors();\n        this.findAllStudents();\n        this.setArrays();\n    };\n\n    lessonChange = event => {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    };\n\n    lessonChangeInstructor = event => {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n        if (typeof (this.state.instructor) === \"string\")\n            this.state.instructor = JSON.parse(this.state.instructor);\n        alert((this.state.instructor));\n        axios.get(\"http://localhost:8080/lesson-api/\" + this.state.instructor.id, + \"/\" + this.state.date)\n            .then(response => {\n                if (response.data != null) {\n                    var timesTab = response.data.time;\n                    this.setState({\n                        times: this.state.times.filter(\n                            function  (e) {\n                                return this.indexOf(e) < 0;\n                            }, timesTab\n                        )\n                    });\n\n                }\n            }).catch((error) => {\n                console.error(\"Error: \" + error);\n            });\n\n    }\n\n    render() {\n        const { student, instructor, date, time, howLong, nrStudents } = this.state;\n        return (\n            <div>\n                <div style={{ \"display\": this.state.show ? \"block\" : \"none\" }}>\n                    <SuccessToast show={this.state.show} message={this.state.method === \"put\" ? \"Lesson Updated Successfully\" : \"Lesson Saved Successfully.\"} type=\"success\" />\n                </div>\n                <div style={{ \"display\": this.state.showInvalidMessage ? \"block\" : \"none\" }}>\n                    <SuccessToast show={this.state.showInvalidMessage} message={\"Fill out the required fields.\"} type=\"dangerNoSuccess\" />\n                </div>\n\n                <Card className={\"border border-dark bg-dark text-white\"}>\n                    <Card.Header>\n                        <FontAwesomeIcon icon={this.state.id ? faEdit : faPlusSquare} /> {this.state.id ? \"Update Lesson\" : \"Add New Lesson\"}\n                    </Card.Header>\n                    <Form onReset={this.resetLesson} onSubmit={this.state.id ? this.updateLesson : this.submitLesson}>\n                        <Card.Body>\n                            <Form.Row>\n                                <Form.Group as={Col} controlId=\"formGridStudent\">\n                                    <Form.Label>Student</Form.Label>\n                                    <Form.Control required as=\"select\"\n                                        name=\"student\"\n                                        value={student}\n                                        onChange={this.lessonChange}\n                                        className={\"bg-dark text-white\"} >\n                                        {this.state.students.map(student =>\n                                            <option key={student.id} value={JSON.stringify(student)}>\n                                                {student.lastName + \" \" + student.firstName}\n                                            </option>\n                                        )}\n                                    </Form.Control>\n                                </Form.Group>\n\n                                <Form.Group as={Col} controlId=\"formGridInstructor\">\n                                    <Form.Label>Instructor</Form.Label>\n                                    <Form.Control required as=\"select\"\n                                        autoComplete=\"off\"\n                                        name=\"instructor\"\n                                        value={instructor}\n                                        onChange={this.lessonChangeInstructor}\n                                        className={\"bg-dark text-white\"} >\n                                        {this.state.instructors.filter((item, index) => this.state.instructors.indexOf(item) === index)\n                                            .map(instructor =>\n                                                <option key={instructor.id} value={JSON.stringify(instructor)}>\n                                                    {instructor.lastName + \" \" + instructor.firstName}\n\n                                                </option>\n                                            )}\n                                    </Form.Control>\n                                </Form.Group>\n                            </Form.Row>\n\n                            <Form.Row>\n                                <Form.Group as={Col} controlId=\"formGridDate\">\n                                    <Form.Label>Date [dd-mm-yyyy]</Form.Label>\n                                    <Form.Control required as=\"select\"\n                                        autoComplete=\"off\"\n                                        name=\"date\"\n                                        value={date}\n                                        onChange={this.lessonChange}\n                                        className={\"bg-dark text-white\"}\n                                        placeholder=\"Select Date\">\n                                        {this.state.dates.map(date =>\n                                            <option key={date} value={date}>\n                                                {date}\n                                            </option>\n                                        )}\n                                    </Form.Control>\n                                </Form.Group>\n\n                                <Form.Group as={Col} controlId=\"formGridTime\">\n                                    <Form.Label>Time</Form.Label>\n                                    <Form.Control required as=\"select\"\n                                        autoComplete=\"off\"\n                                        name=\"time\"\n                                        value={time}\n                                        onChange={this.lessonChange}\n                                        className={\"bg-dark text-white\"} >\n                                        {this.state.times.map(time =>\n                                            <option key={time} value={time}>\n                                                {time}\n                                            </option>\n                                        )}\n                                    </Form.Control>\n                                </Form.Group>\n                            </Form.Row>\n\n                            <Form.Row>\n                                <Form.Group as={Col} controlId=\"formGridHowLong\">\n                                    <Form.Label>How Long [h]</Form.Label>\n                                    <Form.Control required as=\"select\"\n                                        autoComplete=\"off\"\n                                        name=\"howLong\"\n                                        value={howLong}\n                                        onChange={this.lessonChange}\n                                        className={\"bg-dark text-white\"}>\n                                        {this.state.howLongTable.map(howLong =>\n                                            <option key={howLong} value={howLong}>\n                                                {howLong}\n                                            </option>\n                                        )}\n                                    </Form.Control>\n                                </Form.Group>\n\n                                <Form.Group as={Col} controlId=\"formGridNrStudents\">\n                                    <Form.Label>Nr Of Students</Form.Label>\n                                    <Form.Control required as=\"select\"\n                                        autoComplete=\"off\"\n                                        name=\"nrStudents\"\n                                        value={nrStudents}\n                                        onChange={this.lessonChange}\n                                        className={\"bg-dark text-white\"} >\n                                        {this.state.nrStudTable.map(nrStudents =>\n                                            <option key={nrStudents} value={nrStudents}>\n                                                {nrStudents}\n                                            </option>\n                                        )}\n                                    </Form.Control>\n                                </Form.Group>\n                            </Form.Row>\n\n                        </Card.Body>\n\n                        <Card.Footer>\n                            <div>\n                                <Button size=\"sm\" variant=\"primary\" type=\"submit\">\n                                    <FontAwesomeIcon icon={faSave} /> {this.state.id ? \"Update\" : \"Submit\"}\n                                </Button>\n                                {'      '}\n\n                                <Button size=\"sm\" variant=\"secondary\" type=\"reset\">\n                                    <FontAwesomeIcon icon={faUndo} />  Reset\n                    </Button>\n                            </div>\n                            {'      '}\n                            <div>\n                                <Button size=\"sm\" variant=\"light\" type=\"button\" onClick={this.returnToList.bind()}>\n                                    <FontAwesomeIcon icon={faArrowLeft} />  Return\n                    </Button>\n                            </div>\n                        </Card.Footer>\n                    </Form >\n\n\n                </Card >\n            </div>\n        );\n    }\n\n}\nexport default Lesson;"]},"metadata":{},"sourceType":"module"}