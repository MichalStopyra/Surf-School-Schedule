{"ast":null,"code":"import { SAVE_INSTRUCTOR_REQUEST, FETCH_INSTRUCTOR_REQUEST, UPDATE_INSTRUCTOR_REQUEST, DELETE_INSTRUCTOR_REQUEST, INSTRUCTOR_SUCCESS, INSTRUCTOR_FAILURE, FETCH_ALL_INSTRUCTORS_REQUEST, FETCH_ALL_INSTRUCTORS_SUCCESS } from \"./instructorTypes\";\nimport axios from 'axios';\nexport const fetchAllInstructors = (currentPage, size, sortDir) => {\n  return dispatch => {\n    dispatch(fetchAllInstructorsRequest());\n    axios.get(\"http://localhost:8080/instructor-api/list?page=\" + 0 + \"&size=\" + size + \"&sortBy=paymentStatus&sortDir=\" + sortDir).then(response => {\n      dispatch(fetchAllInstructorsSuccess(response.data.content));\n    }).catch(error => {\n      dispatch(instructorFailure(error.message));\n    });\n  };\n};\n\nconst fetchAllInstructorsRequest = () => {\n  return {\n    type: FETCH_ALL_INSTRUCTORS_REQUEST\n  };\n};\n\nexport const saveInstructor = instructor => {\n  return dispatch => {\n    axios.post(\"http://localhost:8080/instructor-api/list\", instructor).then(response => {\n      //  dispatch(instructorSuccess(response.data));\n      dispatch(saveInstructorRequest(instructor));\n    }).catch(error => {\n      console.log(error);\n      dispatch(instructorFailure(error));\n    });\n  };\n};\n\nconst saveInstructorRequest = instructor => {\n  return {\n    type: SAVE_INSTRUCTOR_REQUEST,\n    newItem: instructor\n  };\n};\n\nconst fetchInstructorRequest = updatedInstructor => {\n  return {\n    type: FETCH_INSTRUCTOR_REQUEST,\n    updatedInstructor: updatedInstructor\n  };\n};\n\nexport const fetchInstructor = instructorId => {\n  return dispatch => {\n    axios.get(\"http://localhost:8080/instructor-api/\" + instructorId).then(response => {\n      dispatch(fetchInstructorRequest(response.data)); //dispatch(instructorSuccess(response.data.content));\n    }).catch(error => {\n      dispatch(instructorFailure(error));\n    });\n  };\n};\n\nconst updateInstructorRequest = instructor => {\n  instructor.nrHoursWeek = 0;\n  instructor.nrHoursFull = 0;\n  instructor.weekWage = 0;\n  return {\n    type: UPDATE_INSTRUCTOR_REQUEST,\n    updatedInstructor: instructor\n  };\n};\n\nexport const updateInstructor = instructor => {\n  console.log(instructor);\n  return dispatch => {\n    axios.put(\"http://localhost:8080/instructor-api/\", instructor).then(response => {\n      dispatch(updateInstructorRequest(instructor)); // dispatch(instructorSuccess(response.data));\n    }).catch(error => {\n      console.log(error);\n      dispatch(instructorFailure(error));\n    });\n  };\n};\n\nconst deleteInstructorRequest = instructorId => {\n  return {\n    type: DELETE_INSTRUCTOR_REQUEST,\n    instructorId: instructorId\n  };\n};\n\nexport const deleteInstructor = instructorId => {\n  return dispatch => {\n    axios.delete(\"http://localhost:8080/instructor-api/list/\" + instructorId).then(response => {\n      dispatch(deleteInstructorRequest(instructorId)); //console.log(response);\n\n      dispatch(instructorSuccess(response.data));\n    }).catch(error => {\n      dispatch(instructorFailure(error));\n    });\n  };\n};\n\nconst instructorSuccess = instructor => {\n  return {\n    type: INSTRUCTOR_SUCCESS,\n    payload: instructor\n  };\n};\n\nconst instructorFailure = error => {\n  return {\n    type: INSTRUCTOR_FAILURE,\n    payload: error\n  };\n};\n\nconst fetchAllInstructorsSuccess = instructors => {\n  return {\n    type: FETCH_ALL_INSTRUCTORS_SUCCESS,\n    payload: instructors\n  };\n};","map":{"version":3,"sources":["/home/michal/Desktop/projekty/java/SurfSchoolSchedule/SurfSchoolSchedule/surf-school-schedule/src/services/instructor/instructorActions.js"],"names":["SAVE_INSTRUCTOR_REQUEST","FETCH_INSTRUCTOR_REQUEST","UPDATE_INSTRUCTOR_REQUEST","DELETE_INSTRUCTOR_REQUEST","INSTRUCTOR_SUCCESS","INSTRUCTOR_FAILURE","FETCH_ALL_INSTRUCTORS_REQUEST","FETCH_ALL_INSTRUCTORS_SUCCESS","axios","fetchAllInstructors","currentPage","size","sortDir","dispatch","fetchAllInstructorsRequest","get","then","response","fetchAllInstructorsSuccess","data","content","catch","error","instructorFailure","message","type","saveInstructor","instructor","post","saveInstructorRequest","console","log","newItem","fetchInstructorRequest","updatedInstructor","fetchInstructor","instructorId","updateInstructorRequest","nrHoursWeek","nrHoursFull","weekWage","updateInstructor","put","deleteInstructorRequest","deleteInstructor","delete","instructorSuccess","payload","instructors"],"mappings":"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","sourcesContent":["\nimport {SAVE_INSTRUCTOR_REQUEST, FETCH_INSTRUCTOR_REQUEST, UPDATE_INSTRUCTOR_REQUEST,\n     DELETE_INSTRUCTOR_REQUEST, INSTRUCTOR_SUCCESS, INSTRUCTOR_FAILURE,\n    FETCH_ALL_INSTRUCTORS_REQUEST, FETCH_ALL_INSTRUCTORS_SUCCESS} from \"./instructorTypes\";\nimport axios from 'axios';\n\nexport const fetchAllInstructors = (currentPage, size, sortDir) => {\n    return dispatch => {\n        dispatch(fetchAllInstructorsRequest());\n        axios.get(\"http://localhost:8080/instructor-api/list?page=\" + 0 + \"&size=\" + size + \"&sortBy=paymentStatus&sortDir=\" + sortDir)\n            .then(response => {\n                dispatch(fetchAllInstructorsSuccess(response.data.content));\n            })\n            .catch(error => {\n                dispatch(instructorFailure(error.message));\n            });\n    };\n};\n\nconst fetchAllInstructorsRequest = () => {\n    return {\n        type: FETCH_ALL_INSTRUCTORS_REQUEST\n    };\n};\n\nexport const saveInstructor = instructor => {\n    return dispatch => {\n        axios.post(\"http://localhost:8080/instructor-api/list\", instructor)\n            .then(response => {\n              //  dispatch(instructorSuccess(response.data));\n              dispatch(saveInstructorRequest(instructor));\n            })\n            .catch(error => {\n                console.log(error);\n                dispatch(instructorFailure(error));\n            });\n    };\n};\n\nconst saveInstructorRequest = instructor => { \n    return {\n        type: SAVE_INSTRUCTOR_REQUEST,\n        newItem: instructor\n    };\n};\n\nconst fetchInstructorRequest = updatedInstructor => {\n    return {\n        type: FETCH_INSTRUCTOR_REQUEST,\n        updatedInstructor: updatedInstructor\n    };\n};\n\nexport const fetchInstructor = instructorId => {\n    return dispatch => {\n        axios.get(\"http://localhost:8080/instructor-api/\"+instructorId)\n            .then(response => {\n                dispatch(fetchInstructorRequest(response.data));\n                //dispatch(instructorSuccess(response.data.content));\n            })\n            .catch(error => {\n                dispatch(instructorFailure(error));\n            });\n    };\n};\n\nconst updateInstructorRequest = instructor => {\n    instructor.nrHoursWeek = 0;\n    instructor.nrHoursFull = 0;\n    instructor.weekWage = 0;\n    return {\n        type: UPDATE_INSTRUCTOR_REQUEST,\n        updatedInstructor: instructor\n    };\n};\n\nexport const updateInstructor = instructor => {\n    console.log(instructor);\n    return dispatch => {\n        axios.put(\"http://localhost:8080/instructor-api/\", instructor)\n            .then(response => {\n                dispatch(updateInstructorRequest(instructor));\n\n               // dispatch(instructorSuccess(response.data));\n            })\n            .catch(error => {\n                console.log(error);\n                dispatch(instructorFailure(error));\n            });\n    };\n};\n\nconst deleteInstructorRequest = instructorId => {\n    return {\n        type: DELETE_INSTRUCTOR_REQUEST,\n        instructorId: instructorId\n    };\n};\n\nexport const deleteInstructor = instructorId => {\n    return dispatch => {\n        axios.delete(\"http://localhost:8080/instructor-api/list/\"+instructorId)\n            .then(response => {\n                dispatch(deleteInstructorRequest(instructorId));\n                //console.log(response);\n                dispatch(instructorSuccess(response.data));\n            })\n            .catch(error => {\n                dispatch(instructorFailure(error));\n            });\n    };\n};\n\n\nconst instructorSuccess = instructor => {\n    return {\n        type: INSTRUCTOR_SUCCESS,\n        payload: instructor\n    };\n};\n\nconst instructorFailure = error => {\n    return {\n        type: INSTRUCTOR_FAILURE,\n        payload: error\n    };\n};\n\nconst fetchAllInstructorsSuccess = instructors => {\n    return {\n        type: FETCH_ALL_INSTRUCTORS_SUCCESS,\n        payload: instructors\n    };\n};\n\n\n"]},"metadata":{},"sourceType":"module"}