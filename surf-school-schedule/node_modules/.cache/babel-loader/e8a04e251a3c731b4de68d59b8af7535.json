{"ast":null,"code":"import{SAVE_INSTRUCTOR_REQUEST,FETCH_INSTRUCTOR_REQUEST,UPDATE_INSTRUCTOR_REQUEST,DELETE_INSTRUCTOR_REQUEST,INSTRUCTOR_SUCCESS,INSTRUCTOR_FAILURE,FETCH_ALL_INSTRUCTORS_REQUEST,FETCH_ALL_INSTRUCTORS_SUCCESS,FETCH_SEARCH_INSTRUCTORS_REQUEST}from\"./instructorTypes\";import axios from'axios';export var fetchAllInstructors=function fetchAllInstructors(currentPage,size,sortDir,addSelect){--currentPage;return function(dispatch){// dispatch(fetchAllInstructorsRequest());???????????????????????????\naxios.get(\"http://localhost:8080/instructor-api/list?page=\"+currentPage+\"&size=\"+size+\"&sortBy=paymentStatus&sortDir=\"+sortDir).then(function(response){if(addSelect)response.data.content.unshift({id:'',lastName:'Select Instructor',firstName:'',NrHoursWeek:0,NrHoursFull:0,WeekWage:0});dispatch(fetchAllInstructorsSuccess(response.data.content,response.data.totalPages,response.data.totalElements,sortDir));}).catch(function(error){dispatch(instructorFailure(error.message));});};};var fetchAllInstructorsRequest=function fetchAllInstructorsRequest(){return{type:FETCH_ALL_INSTRUCTORS_REQUEST};};export var saveInstructor=function saveInstructor(instructor){return function(dispatch){axios.post(\"http://localhost:8080/instructor-api/list\",instructor).then(function(response){//  dispatch(instructorSuccess(response.data));\ndispatch(saveInstructorRequest(instructor));}).catch(function(error){console.log(error);dispatch(instructorFailure(error));});};};var saveInstructorRequest=function saveInstructorRequest(instructor){return{type:SAVE_INSTRUCTOR_REQUEST,newItem:instructor};};var fetchInstructorRequest=function fetchInstructorRequest(updatedInstructor){return{type:FETCH_INSTRUCTOR_REQUEST,updatedInstructor:updatedInstructor};};export var fetchInstructor=function fetchInstructor(instructorId){return function(dispatch){axios.get(\"http://localhost:8080/instructor-api/\"+instructorId).then(function(response){dispatch(fetchInstructorRequest(response.data));//dispatch(instructorSuccess(response.data.content));\n}).catch(function(error){dispatch(instructorFailure(error));});};};var updateInstructorRequest=function updateInstructorRequest(instructor){return{type:UPDATE_INSTRUCTOR_REQUEST,updatedInstructor:instructor};};export var updateInstructor=function updateInstructor(instructor){//console.log(instructor);\n//instructor.NrHoursFull = 0;\n//instructor.WeekWage = 0;\n//console.log(instructor);\nreturn function(dispatch){axios.put(\"http://localhost:8080/instructor-api/\"+instructor.id,instructor).then(function(response){dispatch(updateInstructorRequest(instructor));// dispatch(instructorSuccess(response.data));\n}).catch(function(error){console.log(error);dispatch(instructorFailure(error));});};};var deleteInstructorRequest=function deleteInstructorRequest(instructorId){return{type:DELETE_INSTRUCTOR_REQUEST,instructorId:instructorId};};export var deleteInstructor=function deleteInstructor(instructorId){return function(dispatch){axios.delete(\"http://localhost:8080/instructor-api/list/\"+instructorId).then(function(response){dispatch(deleteInstructorRequest(instructorId));//console.log(response);\ndispatch(instructorSuccess(response.data));}).catch(function(error){dispatch(instructorFailure(error));});};};var instructorSuccess=function instructorSuccess(instructor){return{type:INSTRUCTOR_SUCCESS,payload:instructor};};var instructorFailure=function instructorFailure(error){return{type:INSTRUCTOR_FAILURE,payload:error};};var fetchAllInstructorsSuccess=function fetchAllInstructorsSuccess(instructors,totalPages,totalElements,sortDirection){return{type:FETCH_ALL_INSTRUCTORS_SUCCESS,payload:instructors,totalPages:totalPages,totalElements:totalElements,sortDirection:sortDirection};};export var searchInstructors=function searchInstructors(searchedValue,currentPage,instructorsPerPage){--currentPage;return function(dispatch){axios.get(\"http://localhost:8080/instructor-api/search/\"+searchedValue+\"?page=\"+currentPage+\"&size=\"+instructorsPerPage).then(function(response){dispatch(searchInstructorsRequest(response.data.content));}).catch(function(error){dispatch(instructorFailure(error.message));});};};var searchInstructorsRequest=function searchInstructorsRequest(instructors){return{type:FETCH_SEARCH_INSTRUCTORS_REQUEST,instructors:instructors};};","map":{"version":3,"sources":["/home/michal/Desktop/projekty/java/SurfSchoolSchedule/SurfSchoolSchedule/surf-school-schedule/src/services/instructor/instructorActions.js"],"names":["SAVE_INSTRUCTOR_REQUEST","FETCH_INSTRUCTOR_REQUEST","UPDATE_INSTRUCTOR_REQUEST","DELETE_INSTRUCTOR_REQUEST","INSTRUCTOR_SUCCESS","INSTRUCTOR_FAILURE","FETCH_ALL_INSTRUCTORS_REQUEST","FETCH_ALL_INSTRUCTORS_SUCCESS","FETCH_SEARCH_INSTRUCTORS_REQUEST","axios","fetchAllInstructors","currentPage","size","sortDir","addSelect","dispatch","get","then","response","data","content","unshift","id","lastName","firstName","NrHoursWeek","NrHoursFull","WeekWage","fetchAllInstructorsSuccess","totalPages","totalElements","catch","error","instructorFailure","message","fetchAllInstructorsRequest","type","saveInstructor","instructor","post","saveInstructorRequest","console","log","newItem","fetchInstructorRequest","updatedInstructor","fetchInstructor","instructorId","updateInstructorRequest","updateInstructor","put","deleteInstructorRequest","deleteInstructor","delete","instructorSuccess","payload","instructors","sortDirection","searchInstructors","searchedValue","instructorsPerPage","searchInstructorsRequest"],"mappings":"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","sourcesContent":["import {\n    SAVE_INSTRUCTOR_REQUEST, FETCH_INSTRUCTOR_REQUEST, UPDATE_INSTRUCTOR_REQUEST,\n    DELETE_INSTRUCTOR_REQUEST, INSTRUCTOR_SUCCESS, INSTRUCTOR_FAILURE,\n    FETCH_ALL_INSTRUCTORS_REQUEST, FETCH_ALL_INSTRUCTORS_SUCCESS,\n    FETCH_SEARCH_INSTRUCTORS_REQUEST\n} from \"./instructorTypes\";\nimport axios from 'axios';\n\nexport const fetchAllInstructors = (currentPage, size, sortDir, addSelect) => {\n    --currentPage;\n    return dispatch => {\n        // dispatch(fetchAllInstructorsRequest());???????????????????????????\n        axios.get(\"http://localhost:8080/instructor-api/list?page=\" + currentPage + \"&size=\" + size + \"&sortBy=paymentStatus&sortDir=\" + sortDir)\n            .then(response => {\n                if (addSelect)\n                response.data.content.unshift({\n                             id: '', lastName: 'Select Instructor', firstName: '', NrHoursWeek: 0, NrHoursFull: 0, WeekWage: 0\n                         });\n                dispatch(fetchAllInstructorsSuccess(response.data.content, response.data.totalPages, response.data.totalElements, sortDir));\n            })\n            .catch(error => {\n                dispatch(instructorFailure(error.message));\n            });\n    };\n};\n\nconst fetchAllInstructorsRequest = () => {\n    return {\n        type: FETCH_ALL_INSTRUCTORS_REQUEST\n    };\n};\n\nexport const saveInstructor = instructor => {\n    return dispatch => {\n        axios.post(\"http://localhost:8080/instructor-api/list\", instructor)\n            .then(response => {\n                //  dispatch(instructorSuccess(response.data));\n                dispatch(saveInstructorRequest(instructor));\n            })\n            .catch(error => {\n                console.log(error);\n                dispatch(instructorFailure(error));\n            });\n    };\n};\n\nconst saveInstructorRequest = instructor => {\n    return {\n        type: SAVE_INSTRUCTOR_REQUEST,\n        newItem: instructor\n    };\n};\n\nconst fetchInstructorRequest = updatedInstructor => {\n    return {\n        type: FETCH_INSTRUCTOR_REQUEST,\n        updatedInstructor: updatedInstructor\n    };\n};\n\nexport const fetchInstructor = instructorId => {\n    return dispatch => {\n        axios.get(\"http://localhost:8080/instructor-api/\" + instructorId)\n            .then(response => {\n                dispatch(fetchInstructorRequest(response.data));\n                //dispatch(instructorSuccess(response.data.content));\n            })\n            .catch(error => {\n                dispatch(instructorFailure(error));\n            });\n    };\n};\n\nconst updateInstructorRequest = instructor => {\n    return {\n        type: UPDATE_INSTRUCTOR_REQUEST,\n        updatedInstructor: instructor\n    };\n};\n\nexport const updateInstructor = instructor => {\n    //console.log(instructor);\n    //instructor.NrHoursFull = 0;\n    //instructor.WeekWage = 0;\n    //console.log(instructor);\n\n    return dispatch => {\n        axios.put(\"http://localhost:8080/instructor-api/\" + instructor.id, instructor)\n            .then(response => {\n                dispatch(updateInstructorRequest(instructor));\n\n                // dispatch(instructorSuccess(response.data));\n            })\n            .catch(error => {\n                console.log(error);\n                dispatch(instructorFailure(error));\n            });\n    };\n};\n\nconst deleteInstructorRequest = instructorId => {\n    return {\n        type: DELETE_INSTRUCTOR_REQUEST,\n        instructorId: instructorId\n    };\n};\n\nexport const deleteInstructor = instructorId => {\n    return dispatch => {\n        axios.delete(\"http://localhost:8080/instructor-api/list/\" + instructorId)\n            .then(response => {\n                dispatch(deleteInstructorRequest(instructorId));\n                //console.log(response);\n                dispatch(instructorSuccess(response.data));\n            })\n            .catch(error => {\n                dispatch(instructorFailure(error));\n            });\n    };\n};\n\n\nconst instructorSuccess = instructor => {\n    return {\n        type: INSTRUCTOR_SUCCESS,\n        payload: instructor\n    };\n};\n\nconst instructorFailure = error => {\n    return {\n        type: INSTRUCTOR_FAILURE,\n        payload: error\n    };\n};\n\nconst fetchAllInstructorsSuccess = (instructors, totalPages, totalElements, sortDirection) => {\n    return {\n        type: FETCH_ALL_INSTRUCTORS_SUCCESS,\n        payload: instructors,\n        totalPages: totalPages,\n        totalElements: totalElements,\n        sortDirection: sortDirection\n    };\n};\n\nexport const searchInstructors = (searchedValue, currentPage, instructorsPerPage) => {\n    --currentPage;\n    return dispatch => {\n        axios.get(\"http://localhost:8080/instructor-api/search/\" + searchedValue + \"?page=\" + currentPage + \"&size=\" + instructorsPerPage)\n            .then(response => {\n                dispatch(searchInstructorsRequest(response.data.content));\n            })\n            .catch(error => {\n                dispatch(instructorFailure(error.message));\n            });\n    };\n};\n\n\nconst searchInstructorsRequest = instructors => {\n    return {\n        type: FETCH_SEARCH_INSTRUCTORS_REQUEST,\n        instructors: instructors\n    };\n};\n\n\n"]},"metadata":{},"sourceType":"module"}