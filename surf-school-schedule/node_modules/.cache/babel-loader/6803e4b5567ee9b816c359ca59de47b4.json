{"ast":null,"code":"import { SAVE_PRICE_TABLE_REQUEST, FETCH_PRICE_TABLE_REQUEST, UPDATE_PRICE_TABLE_REQUEST, DELETE_PRICE_TABLE_REQUEST, FETCH_ALL_PRICE_TABLES_REQUEST, FETCH_ALL_PRICE_TABLES_SUCCESS, PRICE_TABLE_SUCCESS, PRICE_TABLE_FAILURE } from \"./priceTableTypes\";\nconst initialState = {\n  priceTable: '',\n  error: '',\n  priceTables: []\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_ALL_PRICE_TABLES_REQUEST:\n      return { ...state\n      };\n\n    case UPDATE_PRICE_TABLE_REQUEST:\n      console.log(action);\n      return { ...state,\n        priceTable: action.updatedPriceTable,\n        //update specific priceTable\n        priceTables: state.priceTables.map((item, index) => {\n          // Replace the item at index = updatedPriceTable\n          if (index === action.updatedPriceTable.id) {\n            return action.updatedPriceTable;\n          } // Leave every other item unchanged\n\n\n          return item;\n        })\n      };\n\n    case FETCH_PRICE_TABLE_REQUEST:\n      return { ...state,\n        priceTable: action.updatedPriceTable\n      };\n\n    case SAVE_PRICE_TABLE_REQUEST:\n      return { ...state,\n        priceTables: state.priceTables.concat(action.newItem),\n        priceTable: action.newItem\n      };\n\n    case DELETE_PRICE_TABLE_REQUEST:\n      return { ...state,\n        priceTables: state.priceTables.filter(item => item.id !== action.priceTableId)\n      };\n\n    case PRICE_TABLE_SUCCESS:\n      return { ...state,\n        priceTable: action.payload,\n        error: ''\n      };\n\n    case PRICE_TABLE_FAILURE:\n      return { ...state,\n        //priceTable: '',\n        error: action.payload\n      };\n\n    case FETCH_ALL_PRICE_TABLES_SUCCESS:\n      return { ...state,\n        priceTables: action.payload,\n        error: ''\n      };\n\n    case FETCH_SEARCH_PRICE_TABLES_REQUEST:\n      return { ...state,\n        priceTables: action.priceTables,\n        error: ''\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/michal/Desktop/projekty/java/SurfSchoolSchedule/SurfSchoolSchedule/surf-school-schedule/src/services/priceTable/priceTableReducer.js"],"names":["SAVE_PRICE_TABLE_REQUEST","FETCH_PRICE_TABLE_REQUEST","UPDATE_PRICE_TABLE_REQUEST","DELETE_PRICE_TABLE_REQUEST","FETCH_ALL_PRICE_TABLES_REQUEST","FETCH_ALL_PRICE_TABLES_SUCCESS","PRICE_TABLE_SUCCESS","PRICE_TABLE_FAILURE","initialState","priceTable","error","priceTables","reducer","state","action","type","console","log","updatedPriceTable","map","item","index","id","concat","newItem","filter","priceTableId","payload","FETCH_SEARCH_PRICE_TABLES_REQUEST"],"mappings":"AAAA,SACIA,wBADJ,EAC8BC,yBAD9B,EACyDC,0BADzD,EACqFC,0BADrF,EAEIC,8BAFJ,EAEoCC,8BAFpC,EAGIC,mBAHJ,EAGyBC,mBAHzB,QAIO,mBAJP;AAMA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,UAAU,EAAE,EADK;AAEjBC,EAAAA,KAAK,EAAE,EAFU;AAGjBC,EAAAA,WAAW,EAAE;AAHI,CAArB;;AAMA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAkC;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKX,8BAAL;AACI,aAAO,EACH,GAAGS;AADA,OAAP;;AAGJ,SAAKX,0BAAL;AACIc,MAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACA,aAAO,EACH,GAAGD,KADA;AAEHJ,QAAAA,UAAU,EAAEK,MAAM,CAACI,iBAFhB;AAGH;AACAP,QAAAA,WAAW,EAAEE,KAAK,CAACF,WAAN,CAAkBQ,GAAlB,CAAsB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAChD;AACA,cAAIA,KAAK,KAAKP,MAAM,CAACI,iBAAP,CAAyBI,EAAvC,EAA2C;AACvC,mBAAOR,MAAM,CAACI,iBAAd;AACH,WAJ+C,CAKhD;;;AACA,iBAAOE,IAAP;AACH,SAPY;AAJV,OAAP;;AAaJ,SAAKnB,yBAAL;AACI,aAAO,EACH,GAAGY,KADA;AAEHJ,QAAAA,UAAU,EAAEK,MAAM,CAACI;AAFhB,OAAP;;AAIJ,SAAKlB,wBAAL;AACI,aAAO,EACH,GAAGa,KADA;AAEHF,QAAAA,WAAW,EAAEE,KAAK,CAACF,WAAN,CAAkBY,MAAlB,CAAyBT,MAAM,CAACU,OAAhC,CAFV;AAGHf,QAAAA,UAAU,EAAEK,MAAM,CAACU;AAHhB,OAAP;;AAKJ,SAAKrB,0BAAL;AACI,aAAO,EACH,GAAGU,KADA;AAEHF,QAAAA,WAAW,EAAEE,KAAK,CAACF,WAAN,CAAkBc,MAAlB,CAAyBL,IAAI,IAAIA,IAAI,CAACE,EAAL,KAAYR,MAAM,CAACY,YAApD;AAFV,OAAP;;AAIJ,SAAKpB,mBAAL;AACI,aAAO,EACH,GAAGO,KADA;AAEHJ,QAAAA,UAAU,EAAEK,MAAM,CAACa,OAFhB;AAGHjB,QAAAA,KAAK,EAAE;AAHJ,OAAP;;AAKJ,SAAKH,mBAAL;AACI,aAAO,EACH,GAAGM,KADA;AAEH;AACAH,QAAAA,KAAK,EAAEI,MAAM,CAACa;AAHX,OAAP;;AAKJ,SAAKtB,8BAAL;AACI,aAAO,EACH,GAAGQ,KADA;AAEHF,QAAAA,WAAW,EAAEG,MAAM,CAACa,OAFjB;AAGHjB,QAAAA,KAAK,EAAE;AAHJ,OAAP;;AAKJ,SAAKkB,iCAAL;AACI,aAAO,EACH,GAAGf,KADA;AAEHF,QAAAA,WAAW,EAAEG,MAAM,CAACH,WAFjB;AAGHD,QAAAA,KAAK,EAAE;AAHJ,OAAP;;AAKJ;AAAS,aAAOG,KAAP;AA5Db;AA8DH,CA/DD;;AAiEA,eAAeD,OAAf","sourcesContent":["import {\n    SAVE_PRICE_TABLE_REQUEST, FETCH_PRICE_TABLE_REQUEST, UPDATE_PRICE_TABLE_REQUEST, DELETE_PRICE_TABLE_REQUEST, \n    FETCH_ALL_PRICE_TABLES_REQUEST, FETCH_ALL_PRICE_TABLES_SUCCESS,\n    PRICE_TABLE_SUCCESS, PRICE_TABLE_FAILURE\n} from \"./priceTableTypes\";\n\nconst initialState = {\n    priceTable: '',\n    error: '',\n    priceTables: [],\n};\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case FETCH_ALL_PRICE_TABLES_REQUEST:\n            return {\n                ...state\n            };\n        case UPDATE_PRICE_TABLE_REQUEST:\n            console.log(action);\n            return {\n                ...state,\n                priceTable: action.updatedPriceTable,\n                //update specific priceTable\n                priceTables: state.priceTables.map((item, index) => {\n                    // Replace the item at index = updatedPriceTable\n                    if (index === action.updatedPriceTable.id) {\n                        return action.updatedPriceTable;\n                    }\n                    // Leave every other item unchanged\n                    return item;\n                })\n            };\n        case FETCH_PRICE_TABLE_REQUEST:\n            return {\n                ...state,\n                priceTable: action.updatedPriceTable\n            };\n        case SAVE_PRICE_TABLE_REQUEST:\n            return {\n                ...state,\n                priceTables: state.priceTables.concat(action.newItem),\n                priceTable: action.newItem\n            };\n        case DELETE_PRICE_TABLE_REQUEST:\n            return {\n                ...state,\n                priceTables: state.priceTables.filter(item => item.id !== action.priceTableId),\n            };\n        case PRICE_TABLE_SUCCESS:\n            return {\n                ...state,\n                priceTable: action.payload,\n                error: ''\n            };\n        case PRICE_TABLE_FAILURE:\n            return {\n                ...state,\n                //priceTable: '',\n                error: action.payload\n            };\n        case FETCH_ALL_PRICE_TABLES_SUCCESS:\n            return {\n                ...state,\n                priceTables: action.payload,\n                error: ''\n            };\n        case FETCH_SEARCH_PRICE_TABLES_REQUEST:\n            return {\n                ...state,\n                priceTables: action.priceTables,\n                error: ''\n            };\n        default: return state;\n    }\n};\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}