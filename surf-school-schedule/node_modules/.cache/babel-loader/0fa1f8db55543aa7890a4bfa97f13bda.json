{"ast":null,"code":"var _jsxFileName = \"/home/michal/Desktop/projekty/java/SurfSchoolSchedule/SurfSchoolSchedule/surf-school-schedule/src/components/Lesson/Schedule.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { Card, Table, ButtonGroup, Button, InputGroup, FormControl } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCalendarAlt, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport SuccessToast from '../SuccessToast';\nimport Popover from '../Popover';\nimport InstructorDay from './InstructorDay';\nimport './../../style/Style.css';\nimport { connect } from 'react-redux';\nimport { updateLesson, deleteLesson } from '../../services/index';\n\nclass Schedule extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.changePage = event => {\n      let target = parseInt(event.target.value);\n\n      if (this.state.searchedLesson) {\n        this.searchLesson(target);\n      } else {\n        this.findAllLessons(target);\n      }\n\n      this.setState({\n        [event.target.name]: target\n      });\n    };\n\n    this.prevPage = () => {\n      let prevPage = this.state.currentPage - 1;\n\n      if (this.state.currentPage > 1) {\n        if (this.state.searchedLesson) {\n          this.searchLesson(prevPage);\n        } else {\n          this.findAllLessons(prevPage);\n        }\n      }\n    };\n\n    this.nextPage = () => {\n      let nextPage = this.state.currentPage + 1;\n\n      if (this.state.currentPage < Math.ceil(this.state.totalElements / this.state.lessonsPerPage)) {\n        if (this.state.searchedLesson) {\n          this.searchLesson(nextPage);\n        } else {\n          this.findAllLessons(nextPage);\n        }\n      }\n    };\n\n    this.lessonStatusChange = (lesson, newStatus) => {\n      if (!lesson) return;\n      lesson.status = newStatus;\n      console.log(lesson);\n      this.props.updateLesson(lesson);\n    };\n\n    this.deleteLesson = lesson => {\n      if (!lesson) return;\n      console.log(lesson); //this.props.deleteLesson(lesson.id);\n      // setTimeout(() => {\n      //     if (this.props.lesson != null) {\n      //         this.setState({ \"show\": true });\n      //         setTimeout(() => this.setState({ \"show\": false }), 1000);\n      //     } else {\n      //         this.setState({ \"show\": false });\n      //     }\n      // }, 1000);\n      //this.props.fetchAllLessons(this.props.lesson.currentPage, this.state.lessonsPerPage, this.props.lesson.sortDirection);\n    };\n\n    let today = new Date();\n    this.state = {\n      date: today.getMonth() + 1 + '-' + today.getDate() + '-' + today.getFullYear(),\n      instructors: [],\n      lessons: [],\n      instructorDay: [],\n      currentPage: 1,\n      lessonsPerPage: 5,\n      searchedLesson: '',\n      sortToggle: false,\n      show: true\n    }; // this.getFieldColor = this.getFieldColor.bind(this);\n  }\n\n  componentDidMount() {\n    this.findAllInstructorsAndSchedules(this.state.date);\n  }\n\n  findAllInstructorsAndSchedules(date) {\n    var instructors = [];\n    axios.get(\"http://localhost:8080/instructor-api/list?page=0&size=999999999&sortBy=paymentStatus&sortDir=desc\").then(response => response.data).then(data => {\n      instructors = data.content;\n      this.findAllInstructorDay(instructors, date);\n    });\n  }\n\n  findAllInstructorDay(instructors, date) {\n    let allInstrDayTable = [];\n    instructors.forEach(function (instructor) {\n      axios.get(\"http://localhost:8080/lesson-api/\" + instructor.id + \"/\" + date).then(response => {\n        if (response.data != null) {\n          let tempInstrDay = {\n            instructor: '',\n            lessonsThisDay: []\n          };\n          tempInstrDay.instructor = instructor.firstName + \" \" + instructor.lastName; //save when the lessons start \n\n          let tab = response.data.content; //save lessons at specific indexes in array - representing gour of the lesson\n\n          tab.forEach(function (element) {\n            //get hour and create index\n            let time = element.time;\n            time = time.split(\":\")[0]; //first lesson starts at 9 so minus 9 to get index in the array\n\n            let index = time - 9; //if lesson is 1 hour long -add it to array once; if longer than 1 hour - duplicate it in array\n\n            for (let j = 0; j < element.howLong; ++j) {\n              tempInstrDay.lessonsThisDay[index + j] = element;\n            }\n          });\n          allInstrDayTable.push(tempInstrDay);\n        }\n      });\n    });\n    this.setState({\n      instructorDay: allInstrDayTable\n    });\n    setTimeout(() => this.forceUpdate(), 500);\n  } //change status of lessons that have their date in the past and were not given into not given\n\n\n  checkIfLessonInThePast() {\n    let today = new Date();\n\n    for (let i = 0; i < this.state.lessons.length; ++i) {\n      let temp = new Date(this.state.lessons[i].date);\n\n      if (this.state.lessons[i].status === \"To_Give\" && temp < today) {\n        console.log(\"asd\");\n        this.lessonStatusChange(this.state.lessons[i], 3);\n      }\n    }\n  }\n\n  render() {\n    const {\n      instructorDay,\n      instructors\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"border border-dark bg-dark text-white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        \"float\": \"left\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faCalendarAlt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 29\n      }\n    }), \"  \", this.state.date)), /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      variant: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 37\n      }\n    }, \"Instructor\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 37\n      }\n    }, \"9:00\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 37\n      }\n    }, \"10:00\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 37\n      }\n    }, \"11:00\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 37\n      }\n    }, \"12:00\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 37\n      }\n    }, \"13:00\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 37\n      }\n    }, \"14:00\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 37\n      }\n    }, \"15:00\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 37\n      }\n    }, \"16:00\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 37\n      }\n    }, \"17:00\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 37\n      }\n    }, \"18:00\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 37\n      }\n    }, \"19:00\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 37\n      }\n    }, \"20:00\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 29\n      }\n    }, instructorDay.length === 0 ? /*#__PURE__*/React.createElement(\"tr\", {\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      colSpan: \"13\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 41\n      }\n    }, \" No Lessons for the given date in the Data Base\")) : /*#__PURE__*/React.createElement(InstructorDay, {\n      instructorDay: instructorDay,\n      lessonStatusChange: (lesson, newStatus) => this.lessonStatusChange(lesson, newStatus),\n      deleteLesson: lesson => this.deleteLesson(lesson),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 37\n      }\n    })))), /*#__PURE__*/React.createElement(Card.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    //savedStudentObject: state.student,\n    //      studentObject: state.student,\n    //  updatedStudent: state.student.student\n    lesson: state.lesson\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateLesson: lesson => dispatch(updateLesson(lesson)),\n    deleteLesson: lesson => dispatch(deleteLesson(lesson))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Schedule);","map":{"version":3,"sources":["/home/michal/Desktop/projekty/java/SurfSchoolSchedule/SurfSchoolSchedule/surf-school-schedule/src/components/Lesson/Schedule.js"],"names":["React","axios","Card","Table","ButtonGroup","Button","InputGroup","FormControl","FontAwesomeIcon","faCalendarAlt","faTimes","SuccessToast","Popover","InstructorDay","connect","updateLesson","deleteLesson","Schedule","Component","constructor","props","changePage","event","target","parseInt","value","state","searchedLesson","searchLesson","findAllLessons","setState","name","prevPage","currentPage","nextPage","Math","ceil","totalElements","lessonsPerPage","lessonStatusChange","lesson","newStatus","status","console","log","today","Date","date","getMonth","getDate","getFullYear","instructors","lessons","instructorDay","sortToggle","show","componentDidMount","findAllInstructorsAndSchedules","get","then","response","data","content","findAllInstructorDay","allInstrDayTable","forEach","instructor","id","tempInstrDay","lessonsThisDay","firstName","lastName","tab","element","time","split","index","j","howLong","push","setTimeout","forceUpdate","checkIfLessonInThePast","i","length","temp","render","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport axios from 'axios';\nimport { Card, Table, ButtonGroup, Button, InputGroup, FormControl } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCalendarAlt, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport SuccessToast from '../SuccessToast';\nimport Popover from '../Popover';\nimport InstructorDay from './InstructorDay';\n\nimport './../../style/Style.css';\n\nimport { connect } from 'react-redux';\nimport { updateLesson, deleteLesson } from '../../services/index';\n\n\n\nclass Schedule extends React.Component {\n\n    constructor(props) {\n        super(props);\n        let today = new Date();\n        this.state = {\n            date: today.getMonth() + 1 + '-' + today.getDate() + '-' + today.getFullYear(),\n            instructors: [],\n            lessons: [],\n            instructorDay: [],\n            currentPage: 1,\n            lessonsPerPage: 5,\n            searchedLesson: '',\n            sortToggle: false,\n            show: true\n        };\n        // this.getFieldColor = this.getFieldColor.bind(this);\n\n    }\n\n    componentDidMount() {\n        this.findAllInstructorsAndSchedules(this.state.date);\n    }\n\n\n    findAllInstructorsAndSchedules(date) {\n        var instructors = [];\n\n        axios.get(\"http://localhost:8080/instructor-api/list?page=0&size=999999999&sortBy=paymentStatus&sortDir=desc\")\n            .then(response => response.data)\n            .then((data) => {\n                instructors = data.content;\n                this.findAllInstructorDay(instructors, date);\n            });\n\n    }\n\n    findAllInstructorDay(instructors, date) {\n        let allInstrDayTable = [];\n        instructors.forEach(function (instructor) {\n            axios.get(\"http://localhost:8080/lesson-api/\" + instructor.id + \"/\" + date)\n                .then(response => {\n                    if (response.data != null) {\n\n                        let tempInstrDay = {\n                            instructor: '',\n                            lessonsThisDay: []\n                        };\n\n                        tempInstrDay.instructor = instructor.firstName + \" \" + instructor.lastName;\n                        //save when the lessons start \n                        let tab = response.data.content;\n                        //save lessons at specific indexes in array - representing gour of the lesson\n\n                        tab.forEach(function (element) {\n                            //get hour and create index\n                            let time = element.time;\n                            time = time.split(\":\")[0];\n                            //first lesson starts at 9 so minus 9 to get index in the array\n                            let index = time - 9;\n\n                            //if lesson is 1 hour long -add it to array once; if longer than 1 hour - duplicate it in array\n                            for (let j = 0; j < element.howLong; ++j) {\n                                tempInstrDay.lessonsThisDay[index + j] = element;\n                            }\n                        });\n                        allInstrDayTable.push(tempInstrDay);\n                    }\n                })\n        });\n        this.setState({\n            instructorDay: allInstrDayTable\n        });\n        setTimeout(() => this.forceUpdate(), 500);\n    }\n\n    //change status of lessons that have their date in the past and were not given into not given\n    checkIfLessonInThePast() {\n        let today = new Date();\n\n        for (let i = 0; i < this.state.lessons.length; ++i) {\n            let temp = new Date(this.state.lessons[i].date);\n            if (this.state.lessons[i].status === \"To_Give\" && temp < today) {\n                console.log(\"asd\");\n                this.lessonStatusChange(this.state.lessons[i], 3)\n            }\n        }\n    };\n\n\n    changePage = event => {\n        let target = parseInt(event.target.value);\n        if (this.state.searchedLesson) {\n            this.searchLesson(target)\n        } else {\n            this.findAllLessons(target);\n        }\n        this.setState({\n            [event.target.name]: target\n        });\n\n    };\n\n    prevPage = () => {\n        let prevPage = this.state.currentPage - 1;\n        if (this.state.currentPage > 1) {\n            if (this.state.searchedLesson) {\n                this.searchLesson(prevPage)\n            } else {\n                this.findAllLessons(prevPage);\n            }\n        }\n    };\n\n    nextPage = () => {\n        let nextPage = this.state.currentPage + 1;\n        if (this.state.currentPage < Math.ceil(this.state.totalElements / this.state.lessonsPerPage)) {\n            if (this.state.searchedLesson) {\n                this.searchLesson(nextPage)\n            } else {\n                this.findAllLessons(nextPage);\n            }\n        }\n    };\n\n    lessonStatusChange = (lesson, newStatus) => {\n        if (!lesson)\n            return;\n        lesson.status = newStatus;\n\n        console.log(lesson);\n        this.props.updateLesson(lesson);\n    };\n\n    deleteLesson = (lesson) => {\n        if (!lesson)\n        return;\n        console.log(lesson);\n        //this.props.deleteLesson(lesson.id);\n\n        // setTimeout(() => {\n        //     if (this.props.lesson != null) {\n        //         this.setState({ \"show\": true });\n        //         setTimeout(() => this.setState({ \"show\": false }), 1000);\n\n        //     } else {\n        //         this.setState({ \"show\": false });\n        //     }\n        // }, 1000);\n        //this.props.fetchAllLessons(this.props.lesson.currentPage, this.state.lessonsPerPage, this.props.lesson.sortDirection);\n\n    };\n\n    render() {\n        const { instructorDay, instructors } = this.state;\n\n        return (\n            <div>\n\n                <Card className={\"border border-dark bg-dark text-white\"}>\n                    <Card.Header>\n                        <div style={{ \"float\": \"left\" }}>\n                            <FontAwesomeIcon icon={faCalendarAlt} />  {this.state.date}\n                        </div>\n\n                    </Card.Header>\n                    <Card.Body>\n                        <Table striped bordered hover variant=\"dark\">\n                            <thead>\n                                <tr>\n                                    <th>Instructor</th>\n                                    <th>9:00</th>\n                                    <th>10:00</th>\n                                    <th>11:00</th>\n                                    <th>12:00</th>\n                                    <th>13:00</th>\n                                    <th>14:00</th>\n                                    <th>15:00</th>\n                                    <th>16:00</th>\n                                    <th>17:00</th>\n                                    <th>18:00</th>\n                                    <th>19:00</th>\n                                    <th>20:00</th>\n\n                                </tr>\n                            </thead>\n\n                            <tbody>\n                                {instructorDay.length === 0 ?\n                                    <tr align=\"center\">\n                                        <td colSpan=\"13\"> No Lessons for the given date in the Data Base</td>\n                                    </tr> :\n                                    <InstructorDay instructorDay={instructorDay}\n                                        lessonStatusChange={(lesson, newStatus) => this.lessonStatusChange(lesson, newStatus)}\n                                        deleteLesson={(lesson) => this.deleteLesson(lesson)} />\n\n                                }\n                            </tbody>\n\n\n                        </Table>\n                    </Card.Body>\n                    <Card.Footer>\n\n\n\n                    </Card.Footer>\n                </Card>\n            </div>\n\n        );\n    }\n\n\n}\n\nconst mapStateToProps = state => {\n    return {\n        //savedStudentObject: state.student,\n        //      studentObject: state.student,\n        //  updatedStudent: state.student.student\n        lesson: state.lesson,\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        updateLesson: (lesson) => dispatch(updateLesson(lesson)),\n        deleteLesson: (lesson) => dispatch(deleteLesson(lesson))\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Schedule);"]},"metadata":{},"sourceType":"module"}