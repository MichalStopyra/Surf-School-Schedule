{"ast":null,"code":"var _jsxFileName = \"/home/michal/Desktop/projekty/java/SurfSchoolSchedule/SurfSchoolSchedule/surf-school-schedule/src/components/Instructor/Instructor.js\";\nimport React from 'react';\nimport { Form, Card, Col, Button } from 'react-bootstrap';\nimport { faSave, faUndo, faArrowLeft, faEdit, faPlusSquare } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport SuccessToast from '../SuccessToast';\n\nclass Instructor extends React.Component {\n  constructor(props) {\n    super(props);\n    this.initialState = {\n      id: '',\n      lastName: '',\n      firstName: '',\n      idCardNr: '',\n      telNr: '',\n      paymentStatus: 0,\n      lessonHours: 0,\n      unpaidLessons: 0,\n      moneyOwing: 0,\n      moneyInAdvance: ''\n    };\n\n    this.findInstructorById = idInstructor => {\n      axios.get(\"http://localhost:8080/instructor-api/\" + idInstructor).then(response => {\n        if (response.data != null) {\n          this.setState({\n            id: response.data.id,\n            lastName: response.data.lastName,\n            firstName: response.data.firstName,\n            idCardNr: response.data.idCardNr,\n            telNr: response.data.telNr,\n            paymentStatus: response.data.paymentStatus,\n            lessonHours: response.data.lessonHours,\n            unpaidLessons: response.data.unpaidLessons,\n            moneyOwing: response.data.moneyOwing,\n            moneyInAdvance: response.data.moneyInAdvance\n          });\n          console.log(response.data.lastName);\n        }\n      }).catch(error => {\n        console.error(\"Error: \" + error);\n      });\n    };\n\n    this.returnToList = () => {\n      return this.props.history.push(\"/instructors\");\n    };\n\n    this.submitInstructor = event => {\n      event.preventDefault();\n      const instructor = {\n        lastName: this.state.lastName,\n        firstName: this.state.firstName,\n        idCardNr: this.state.idCardNr,\n        telNr: this.state.telNr,\n        paymentStatus: this.state.paymentStatus,\n        lessonHours: this.state.lessonHours,\n        unpaidLessons: this.state.unpaidLessons,\n        moneyOwing: this.state.moneyOwing,\n        moneyInAdvance: this.state.moneyInAdvance\n      };\n      axios.post(\"http://localhost:8080/instructor-api/list\", instructor).then(response => {\n        if (response.data != null) {\n          this.setState({\n            \"show\": true,\n            \"method\": \"post\"\n          });\n          setTimeout(() => this.setState({\n            \"show\": false\n          }), 3000);\n          setTimeout(() => this.returnToList(), 1000);\n        } else {\n          this.setState({\n            \"show\": false\n          });\n        }\n      });\n      this.setState(this.initialState);\n    };\n\n    this.updateInstructor = event => {\n      event.preventDefault();\n      const instructor = {\n        id: this.state.id,\n        lastName: this.state.lastName,\n        firstName: this.state.firstName,\n        idCardNr: this.state.idCardNr,\n        telNr: this.state.telNr,\n        paymentStatus: this.state.paymentStatus,\n        lessonHours: this.state.lessonHours,\n        unpaidLessons: this.state.unpaidLessons,\n        moneyOwing: this.state.moneyOwing,\n        moneyInAdvance: this.state.moneyInAdvance\n      };\n      axios.put(\"http://localhost:8080/instructor-api/\" + this.state.id, instructor).then(response => {\n        if (response.data != null) {\n          this.setState({\n            \"show\": true,\n            \"method\": \"put\"\n          });\n          setTimeout(() => this.setState({\n            \"show\": false\n          }), 3000);\n          setTimeout(() => this.returnToList(), 1000);\n        } else {\n          this.setState({\n            \"show\": false\n          });\n        }\n      });\n      this.setState(this.initialState);\n    };\n\n    this.resetInstructor = () => {\n      this.setState(() => this.initialState);\n    };\n\n    this.instructorChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.state = this.initialState;\n    this.state.show = false;\n    this.state.method = 'post';\n    this.instructorChange = this.instructorChange.bind(this);\n    this.submitInstructor = this.submitInstructor.bind(this);\n  }\n\n  componentDidMount() {\n    const idInstructor = +this.props.match.params.id;\n\n    if (idInstructor) {\n      this.findInstructorById(idInstructor);\n    }\n  }\n\n  render() {\n    const {\n      firstName,\n      lastName,\n      idCardNr,\n      telNr,\n      paymentStatus,\n      lessonHours,\n      unpaidLessons,\n      moneyOwing,\n      moneyInAdvance\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        \"display\": this.state.show ? \"block\" : \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(SuccessToast, {\n      show: this.state.show,\n      message: this.state.method === \"put\" ? \"Instructor Updated Successfully\" : \"Instructor Saved Successfully.\",\n      type: \"success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Card, {\n      className: \"border border-dark bg-dark text-white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: this.state.id ? faEdit : faPlusSquare,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 25\n      }\n    }), \" \", this.state.id ? \"Update Instructor\" : \"Add New Instructor\"), /*#__PURE__*/React.createElement(Form, {\n      onReset: this.resetInstructor,\n      onSubmit: this.state.id ? this.updateInstructor : this.submitInstructor,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridLastName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 37\n      }\n    }, \"Last Name\"), /*#__PURE__*/React.createElement(Form.Control, {\n      required: true,\n      autoComplete: \"off\",\n      type: \"test\",\n      name: \"lastName\",\n      value: lastName,\n      onChange: this.instructorChange,\n      placeholder: \"Enter Last Name\",\n      className: \"bg-dark text-white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridFirstName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 37\n      }\n    }, \"First Name\"), /*#__PURE__*/React.createElement(Form.Control, {\n      required: true,\n      autoComplete: \"off\",\n      type: \"test\",\n      name: \"firstName\",\n      value: firstName,\n      onChange: this.instructorChange,\n      placeholder: \" Enter First Name\",\n      className: \"bg-dark text-white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 37\n      }\n    }))), /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridIdCardNr\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 37\n      }\n    }, \"ID Card Nr\"), /*#__PURE__*/React.createElement(Form.Control, {\n      required: true,\n      autoComplete: \"off\",\n      name: \"idCardNr\",\n      type: \"test\",\n      value: idCardNr,\n      onChange: this.instructorChange,\n      placeholder: \"Enter ID Card Nr\",\n      className: \"bg-dark text-white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridPhoneNr\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 37\n      }\n    }, \"Phone Nr\"), /*#__PURE__*/React.createElement(Form.Control, {\n      required: true,\n      autoComplete: \"off\",\n      name: \"telNr\",\n      type: \"test\",\n      value: telNr,\n      onChange: this.instructorChange,\n      placeholder: \"Enter Phone Nr\",\n      className: \"bg-dark text-white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 37\n      }\n    }))), /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridMoneyInAdvance\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 37\n      }\n    }, \"Payment In Advance\"), /*#__PURE__*/React.createElement(Form.Control, {\n      required: true,\n      autoComplete: \"off\",\n      name: \"moneyInAdvance\",\n      type: \"test\",\n      value: moneyInAdvance,\n      onChange: this.instructorChange,\n      placeholder: \"$\",\n      className: \"bg-dark text-white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 37\n      }\n    })))), /*#__PURE__*/React.createElement(Card.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      size: \"sm\",\n      variant: \"primary\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faSave,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 37\n      }\n    }), \" \", this.state.id ? \"Update\" : \"Submit\"), '      ', /*#__PURE__*/React.createElement(Button, {\n      size: \"sm\",\n      variant: \"secondary\",\n      type: \"reset\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faUndo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 37\n      }\n    }), \"  Reset\")), '      ', /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      size: \"sm\",\n      variant: \"light\",\n      type: \"button\",\n      onClick: this.returnToList.bind(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faArrowLeft,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 37\n      }\n    }), \"  Return\"))))));\n  }\n\n}\n\nexport default Instructor;","map":{"version":3,"sources":["/home/michal/Desktop/projekty/java/SurfSchoolSchedule/SurfSchoolSchedule/surf-school-schedule/src/components/Instructor/Instructor.js"],"names":["React","Form","Card","Col","Button","faSave","faUndo","faArrowLeft","faEdit","faPlusSquare","FontAwesomeIcon","Link","axios","SuccessToast","Instructor","Component","constructor","props","initialState","id","lastName","firstName","idCardNr","telNr","paymentStatus","lessonHours","unpaidLessons","moneyOwing","moneyInAdvance","findInstructorById","idInstructor","get","then","response","data","setState","console","log","catch","error","returnToList","history","push","submitInstructor","event","preventDefault","instructor","state","post","setTimeout","updateInstructor","put","resetInstructor","instructorChange","target","name","value","show","method","bind","componentDidMount","match","params","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Form, Card, Col, Button } from 'react-bootstrap';\nimport { faSave, faUndo, faArrowLeft, faEdit, faPlusSquare } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport SuccessToast from '../SuccessToast';\n\nclass Instructor extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = this.initialState;\n        this.state.show = false;\n        this.state.method = 'post';\n        this.instructorChange = this.instructorChange.bind(this);\n        this.submitInstructor = this.submitInstructor.bind(this);\n    }\n\n    initialState = {\n        id: '', lastName: '', firstName: '', idCardNr: '', telNr: '', paymentStatus: 0, lessonHours: 0, unpaidLessons: 0, moneyOwing: 0, moneyInAdvance: ''\n    }\n\n    componentDidMount() {\n        const idInstructor = +this.props.match.params.id;\n        if (idInstructor) {\n            this.findInstructorById(idInstructor);\n        }\n    };\n\n\n    findInstructorById = (idInstructor) => {\n        axios.get(\"http://localhost:8080/instructor-api/\" + idInstructor)\n            .then(response => {\n                if (response.data != null) {\n                    this.setState({\n                        id: response.data.id,\n                        lastName: response.data.lastName,\n                        firstName: response.data.firstName,\n                        idCardNr: response.data.idCardNr,\n                        telNr: response.data.telNr,\n                        paymentStatus: response.data.paymentStatus,\n                        lessonHours: response.data.lessonHours,\n                        unpaidLessons: response.data.unpaidLessons,\n                        moneyOwing: response.data.moneyOwing,\n                        moneyInAdvance: response.data.moneyInAdvance\n                    });\n                    console.log(response.data.lastName);\n\n                }\n            }).catch((error) => {\n                console.error(\"Error: \" + error);\n            });\n    };\n\n    returnToList = () => {\n        return this.props.history.push(\"/instructors\");\n    };\n\n    submitInstructor = event => {\n        event.preventDefault();\n\n        const instructor = {\n            lastName: this.state.lastName,\n            firstName: this.state.firstName,\n            idCardNr: this.state.idCardNr,\n            telNr: this.state.telNr,\n            paymentStatus: this.state.paymentStatus,\n            lessonHours: this.state.lessonHours,\n            unpaidLessons: this.state.unpaidLessons,\n            moneyOwing: this.state.moneyOwing,\n            moneyInAdvance: this.state.moneyInAdvance\n        };\n\n        axios.post(\"http://localhost:8080/instructor-api/list\", instructor)\n            .then(response => {\n                if (response.data != null) {\n                    this.setState({ \"show\": true, \"method\": \"post\" });\n                    setTimeout(() => this.setState({ \"show\": false }), 3000);\n                    setTimeout(() => this.returnToList(), 1000);\n                } else {\n                    this.setState({ \"show\": false });\n                }\n            });\n        this.setState(this.initialState);\n\n    };\n\n    updateInstructor = event => {\n        event.preventDefault();\n\n        const instructor = {\n            id: this.state.id,\n            lastName: this.state.lastName,\n            firstName: this.state.firstName,\n            idCardNr: this.state.idCardNr,\n            telNr: this.state.telNr,\n            paymentStatus: this.state.paymentStatus,\n            lessonHours: this.state.lessonHours,\n            unpaidLessons: this.state.unpaidLessons,\n            moneyOwing: this.state.moneyOwing,\n            moneyInAdvance: this.state.moneyInAdvance\n        }; \n        axios.put(\"http://localhost:8080/instructor-api/\"+this.state.id, instructor)\n            .then(response => {\n                if (response.data != null) {\n                    this.setState({ \"show\": true, \"method\": \"put\" });\n                    setTimeout(() => this.setState({ \"show\": false }), 3000);\n                    setTimeout(() => this.returnToList(), 1000);\n                } else {\n                    this.setState({ \"show\": false });\n                }\n            });\n        this.setState(this.initialState);\n    }\n\n    resetInstructor = () => {\n        this.setState(() => this.initialState);\n    };\n\n    instructorChange = event => {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    };\n\n    render() {\n        const { firstName, lastName, idCardNr, telNr, paymentStatus, lessonHours, unpaidLessons, moneyOwing, moneyInAdvance } = this.state;\n        return (\n            <div>\n                <div style={{ \"display\": this.state.show ? \"block\" : \"none\" }}>\n                    <SuccessToast show={this.state.show} message={this.state.method === \"put\" ? \"Instructor Updated Successfully\" : \"Instructor Saved Successfully.\"} type=\"success\" />\n                </div>\n\n                <Card className={\"border border-dark bg-dark text-white\"}>\n                    <Card.Header>\n                        <FontAwesomeIcon icon={this.state.id ? faEdit : faPlusSquare} /> {this.state.id ? \"Update Instructor\" : \"Add New Instructor\"}\n                    </Card.Header>\n                    <Form onReset={this.resetInstructor} onSubmit={this.state.id ? this.updateInstructor : this.submitInstructor}>\n                        <Card.Body>\n                            <Form.Row>\n                                <Form.Group as={Col} controlId=\"formGridLastName\">\n                                    <Form.Label>Last Name</Form.Label>\n                                    <Form.Control required\n                                        autoComplete=\"off\"\n                                        type=\"test\"\n                                        name=\"lastName\"\n                                        value={lastName}\n                                        onChange={this.instructorChange}\n                                        placeholder=\"Enter Last Name\"\n                                        className={\"bg-dark text-white\"} />\n                                </Form.Group>\n\n                                <Form.Group as={Col} controlId=\"formGridFirstName\">\n                                    <Form.Label>First Name</Form.Label>\n                                    <Form.Control required\n                                        autoComplete=\"off\"\n                                        type=\"test\"\n                                        name=\"firstName\"\n                                        value={firstName}\n                                        onChange={this.instructorChange}\n                                        placeholder=\" Enter First Name\"\n                                        className={\"bg-dark text-white\"} />\n                                </Form.Group>\n                            </Form.Row>\n\n                            <Form.Row>\n\n                            <Form.Group as={Col} controlId=\"formGridIdCardNr\">\n                                    <Form.Label>ID Card Nr</Form.Label>\n                                    <Form.Control required\n                                        autoComplete=\"off\"\n                                        name=\"idCardNr\"\n                                        type=\"test\"\n                                        value={idCardNr}\n                                        onChange={this.instructorChange}\n                                        placeholder=\"Enter ID Card Nr\"\n                                        className={\"bg-dark text-white\"} />\n                                </Form.Group>\n\n                                <Form.Group as={Col} controlId=\"formGridPhoneNr\">\n                                    <Form.Label>Phone Nr</Form.Label>\n                                    <Form.Control required\n                                        autoComplete=\"off\"\n                                        name=\"telNr\"\n                                        type=\"test\"\n                                        value={telNr}\n                                        onChange={this.instructorChange}\n                                        placeholder=\"Enter Phone Nr\"\n                                        className={\"bg-dark text-white\"} />\n                                </Form.Group>\n                            </Form.Row >\n\n                            <Form.Row>\n                                <Form.Group as={Col} controlId=\"formGridMoneyInAdvance\">\n                                    <Form.Label>Payment In Advance</Form.Label>\n                                    <Form.Control required\n                                        autoComplete=\"off\"\n                                        name=\"moneyInAdvance\"\n                                        type=\"test\"\n                                        value={moneyInAdvance}\n                                        onChange={this.instructorChange}\n                                        placeholder=\"$\"\n                                        className={\"bg-dark text-white\"} />\n                                </Form.Group>\n                            </Form.Row>\n                        </Card.Body>\n\n                        <Card.Footer>\n                            <div>\n                                <Button size=\"sm\" variant=\"primary\" type=\"submit\">\n                                    <FontAwesomeIcon icon={faSave} /> {this.state.id ? \"Update\" : \"Submit\"}\n                                </Button>\n                                {'      '}\n\n                                <Button size=\"sm\" variant=\"secondary\" type=\"reset\">\n                                    <FontAwesomeIcon icon={faUndo} />  Reset\n                    </Button>\n                            </div>\n                            {'      '}\n                            <div>\n                                <Button size=\"sm\" variant=\"light\" type=\"button\" onClick={this.returnToList.bind()}>\n                                    <FontAwesomeIcon icon={faArrowLeft} />  Return\n                    </Button>\n                            </div>\n                        </Card.Footer>\n                    </Form >\n\n\n                </Card >\n            </div>\n        );\n    }\n\n}\nexport default Instructor;"]},"metadata":{},"sourceType":"module"}