{"ast":null,"code":"import{SAVE_STUDENT_REQUEST,FETCH_STUDENT_REQUEST,UPDATE_STUDENT_REQUEST,DELETE_STUDENT_REQUEST,STUDENT_SUCCESS,STUDENT_FAILURE,FETCH_ALL_STUDENTS_REQUEST,FETCH_SEARCH_STUDENTS_REQUEST}from\"./studentTypes\";import axios from'axios';export var fetchAllStudents=function fetchAllStudents(currentPage,size,sortDir,addedStudent){--currentPage;return function(dispatch){axios.get(\"http://localhost:8080/student-api/list?page=\"+currentPage+\"&size=\"+size+\"&sortBy=paymentStatus&sortDir=\"+sortDir).then(function(response){if(addedStudent)response.data.content.unshift(//  {   id: -1, lastName: 'Select Student', firstName: '', idCardNr: '', telNr: '', paymentStatus: 0, lessonHours: 0, unpaidLessons: 0, moneyOwing: 0, moneyInAdvance: ''\n// }\naddedStudent);dispatch(fetchAllStudentsRequest(response.data.content,response.data.totalPages,response.data.totalElements,sortDir));}).catch(function(error){dispatch(studentFailure(error.message));});};};var fetchAllStudentsRequest=function fetchAllStudentsRequest(students,totalPages,totalElements,sortDirection){return{type:FETCH_ALL_STUDENTS_REQUEST,payload:students,totalPages:totalPages,totalElements:totalElements,sortDirection:sortDirection};};export var saveStudent=function saveStudent(student){return function(dispatch){axios.post(\"http://localhost:8080/student-api/list\",student).then(function(response){dispatch(saveStudentRequest(student));}).catch(function(error){console.log(error);dispatch(studentFailure(error));});};};var saveStudentRequest=function saveStudentRequest(student){return{type:SAVE_STUDENT_REQUEST,newItem:student};};var fetchStudentRequest=function fetchStudentRequest(updatedStudent){return{type:FETCH_STUDENT_REQUEST,updatedStudent:updatedStudent};};export var fetchStudent=function fetchStudent(studentId){return function(dispatch){axios.get(\"http://localhost:8080/student-api/\"+studentId).then(function(response){dispatch(fetchStudentRequest(response.data));//dispatch(studentSuccess(response.data.content));\n}).catch(function(error){dispatch(studentFailure(error));});};};var updateStudentRequest=function updateStudentRequest(student){return{type:UPDATE_STUDENT_REQUEST,updatedStudent:student};};export var updateStudent=function updateStudent(student){//console.log(student);\n// student.NrHoursWeek = 0;\n// student.NrHoursFull = 0;\n// student.WeekWage = 0;\n//console.log(student);\nreturn function(dispatch){axios.put(\"http://localhost:8080/student-api/\"+student.id,student).then(function(response){dispatch(updateStudentRequest(student));// dispatch(studentSuccess(response.data));\n}).catch(function(error){console.log(error);dispatch(studentFailure(error));});};};var deleteStudentRequest=function deleteStudentRequest(studentId){return{type:DELETE_STUDENT_REQUEST,studentId:studentId};};export var deleteStudent=function deleteStudent(studentId){return function(dispatch){axios.delete(\"http://localhost:8080/student-api/list/\"+studentId).then(function(response){dispatch(deleteStudentRequest(studentId));//console.log(response);\ndispatch(studentSuccess(response.data));}).catch(function(error){dispatch(studentFailure(error));});};};var studentSuccess=function studentSuccess(student){return{type:STUDENT_SUCCESS,payload:student};};var studentFailure=function studentFailure(error){return{type:STUDENT_FAILURE,payload:error};};export var searchStudents=function searchStudents(searchedValue,currentPage,studentsPerPage){--currentPage;return function(dispatch){axios.get(\"http://localhost:8080/student-api/search/\"+searchedValue+\"?page=\"+currentPage+\"&size=\"+studentsPerPage).then(function(response){dispatch(searchStudentsRequest(response.data.content));}).catch(function(error){dispatch(studentFailure(error.message));});};};var searchStudentsRequest=function searchStudentsRequest(students){return{type:FETCH_SEARCH_STUDENTS_REQUEST,students:students};};","map":{"version":3,"sources":["/home/michal/Desktop/projekty/java/SurfSchoolSchedule/SurfSchoolSchedule/surf-school-schedule/src/services/student/studentActions.js"],"names":["SAVE_STUDENT_REQUEST","FETCH_STUDENT_REQUEST","UPDATE_STUDENT_REQUEST","DELETE_STUDENT_REQUEST","STUDENT_SUCCESS","STUDENT_FAILURE","FETCH_ALL_STUDENTS_REQUEST","FETCH_SEARCH_STUDENTS_REQUEST","axios","fetchAllStudents","currentPage","size","sortDir","addedStudent","dispatch","get","then","response","data","content","unshift","fetchAllStudentsRequest","totalPages","totalElements","catch","error","studentFailure","message","students","sortDirection","type","payload","saveStudent","student","post","saveStudentRequest","console","log","newItem","fetchStudentRequest","updatedStudent","fetchStudent","studentId","updateStudentRequest","updateStudent","put","id","deleteStudentRequest","deleteStudent","delete","studentSuccess","searchStudents","searchedValue","studentsPerPage","searchStudentsRequest"],"mappings":"AAAA,OACIA,oBADJ,CAC0BC,qBAD1B,CACiDC,sBADjD,CAEIC,sBAFJ,CAE4BC,eAF5B,CAE6CC,eAF7C,CAGIC,0BAHJ,CAIIC,6BAJJ,KAKO,gBALP,CAMA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CAEA,MAAO,IAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACC,WAAD,CAAcC,IAAd,CAAoBC,OAApB,CAA6BC,YAA7B,CAA8C,CAC1E,EAAEH,WAAF,CACA,MAAO,UAAAI,QAAQ,CAAI,CAEfN,KAAK,CAACO,GAAN,CAAU,+CAAiDL,WAAjD,CAA+D,QAA/D,CAA0EC,IAA1E,CAAiF,gCAAjF,CAAoHC,OAA9H,EACKI,IADL,CACU,SAAAC,QAAQ,CAAI,CACV,GAAIJ,YAAJ,CACII,QAAQ,CAACC,IAAT,CAAcC,OAAd,CAAsBC,OAAtB,CACI;AACA;AACAP,YAHJ,EAKRC,QAAQ,CAACO,uBAAuB,CAACJ,QAAQ,CAACC,IAAT,CAAcC,OAAf,CAAwBF,QAAQ,CAACC,IAAT,CAAcI,UAAtC,CAAkDL,QAAQ,CAACC,IAAT,CAAcK,aAAhE,CAA+EX,OAA/E,CAAxB,CAAR,CACH,CATL,EAUKY,KAVL,CAUW,SAAAC,KAAK,CAAI,CACZX,QAAQ,CAACY,cAAc,CAACD,KAAK,CAACE,OAAP,CAAf,CAAR,CACH,CAZL,EAaH,CAfD,CAgBH,CAlBM,CAoBP,GAAMN,CAAAA,uBAAuB,CAAG,QAA1BA,CAAAA,uBAA0B,CAACO,QAAD,CAAWN,UAAX,CAAuBC,aAAvB,CAAsCM,aAAtC,CAAwD,CACpF,MAAO,CACHC,IAAI,CAAExB,0BADH,CAEHyB,OAAO,CAAEH,QAFN,CAGHN,UAAU,CAAEA,UAHT,CAIHC,aAAa,CAAEA,aAJZ,CAKHM,aAAa,CAAEA,aALZ,CAAP,CAOH,CARD,CAUA,MAAO,IAAMG,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAAAC,OAAO,CAAI,CAClC,MAAO,UAAAnB,QAAQ,CAAI,CACfN,KAAK,CAAC0B,IAAN,CAAW,wCAAX,CAAqDD,OAArD,EACKjB,IADL,CACU,SAAAC,QAAQ,CAAI,CACdH,QAAQ,CAACqB,kBAAkB,CAACF,OAAD,CAAnB,CAAR,CACH,CAHL,EAIKT,KAJL,CAIW,SAAAC,KAAK,CAAI,CACZW,OAAO,CAACC,GAAR,CAAYZ,KAAZ,EACAX,QAAQ,CAACY,cAAc,CAACD,KAAD,CAAf,CAAR,CACH,CAPL,EAQH,CATD,CAUH,CAXM,CAaP,GAAMU,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAAAF,OAAO,CAAI,CAClC,MAAO,CACHH,IAAI,CAAE9B,oBADH,CAEHsC,OAAO,CAAEL,OAFN,CAAP,CAIH,CALD,CAOA,GAAMM,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,CAAAC,cAAc,CAAI,CAC1C,MAAO,CACHV,IAAI,CAAE7B,qBADH,CAEHuC,cAAc,CAAEA,cAFb,CAAP,CAIH,CALD,CAOA,MAAO,IAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAAAC,SAAS,CAAI,CACrC,MAAO,UAAA5B,QAAQ,CAAI,CACfN,KAAK,CAACO,GAAN,CAAU,qCAAuC2B,SAAjD,EACK1B,IADL,CACU,SAAAC,QAAQ,CAAI,CACdH,QAAQ,CAACyB,mBAAmB,CAACtB,QAAQ,CAACC,IAAV,CAApB,CAAR,CACA;AACH,CAJL,EAKKM,KALL,CAKW,SAAAC,KAAK,CAAI,CACZX,QAAQ,CAACY,cAAc,CAACD,KAAD,CAAf,CAAR,CACH,CAPL,EAQH,CATD,CAUH,CAXM,CAaP,GAAMkB,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,CAAAV,OAAO,CAAI,CACpC,MAAO,CACHH,IAAI,CAAE5B,sBADH,CAEHsC,cAAc,CAAEP,OAFb,CAAP,CAIH,CALD,CAOA,MAAO,IAAMW,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAAX,OAAO,CAAI,CACpC;AACA;AACA;AACA;AACA;AAEA,MAAO,UAAAnB,QAAQ,CAAI,CACfN,KAAK,CAACqC,GAAN,CAAU,qCAAuCZ,OAAO,CAACa,EAAzD,CAA6Db,OAA7D,EACKjB,IADL,CACU,SAAAC,QAAQ,CAAI,CACdH,QAAQ,CAAC6B,oBAAoB,CAACV,OAAD,CAArB,CAAR,CAEA;AACH,CALL,EAMKT,KANL,CAMW,SAAAC,KAAK,CAAI,CACZW,OAAO,CAACC,GAAR,CAAYZ,KAAZ,EACAX,QAAQ,CAACY,cAAc,CAACD,KAAD,CAAf,CAAR,CACH,CATL,EAUH,CAXD,CAYH,CAnBM,CAqBP,GAAMsB,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,CAAAL,SAAS,CAAI,CACtC,MAAO,CACHZ,IAAI,CAAE3B,sBADH,CAEHuC,SAAS,CAAEA,SAFR,CAAP,CAIH,CALD,CAOA,MAAO,IAAMM,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAAN,SAAS,CAAI,CACtC,MAAO,UAAA5B,QAAQ,CAAI,CACfN,KAAK,CAACyC,MAAN,CAAa,0CAA4CP,SAAzD,EACK1B,IADL,CACU,SAAAC,QAAQ,CAAI,CACdH,QAAQ,CAACiC,oBAAoB,CAACL,SAAD,CAArB,CAAR,CACA;AACA5B,QAAQ,CAACoC,cAAc,CAACjC,QAAQ,CAACC,IAAV,CAAf,CAAR,CACH,CALL,EAMKM,KANL,CAMW,SAAAC,KAAK,CAAI,CACZX,QAAQ,CAACY,cAAc,CAACD,KAAD,CAAf,CAAR,CACH,CARL,EASH,CAVD,CAWH,CAZM,CAeP,GAAMyB,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAAAjB,OAAO,CAAI,CAC9B,MAAO,CACHH,IAAI,CAAE1B,eADH,CAEH2B,OAAO,CAAEE,OAFN,CAAP,CAIH,CALD,CAOA,GAAMP,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAAAD,KAAK,CAAI,CAC5B,MAAO,CACHK,IAAI,CAAEzB,eADH,CAEH0B,OAAO,CAAEN,KAFN,CAAP,CAIH,CALD,CAQA,MAAO,IAAM0B,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,aAAD,CAAgB1C,WAAhB,CAA6B2C,eAA7B,CAAiD,CAC3E,EAAE3C,WAAF,CACA,MAAO,UAAAI,QAAQ,CAAI,CACfN,KAAK,CAACO,GAAN,CAAU,4CAA8CqC,aAA9C,CAA8D,QAA9D,CAAyE1C,WAAzE,CAAuF,QAAvF,CAAkG2C,eAA5G,EACKrC,IADL,CACU,SAAAC,QAAQ,CAAI,CACdH,QAAQ,CAACwC,qBAAqB,CAACrC,QAAQ,CAACC,IAAT,CAAcC,OAAf,CAAtB,CAAR,CACH,CAHL,EAIKK,KAJL,CAIW,SAAAC,KAAK,CAAI,CACZX,QAAQ,CAACY,cAAc,CAACD,KAAK,CAACE,OAAP,CAAf,CAAR,CACH,CANL,EAOH,CARD,CASH,CAXM,CAcP,GAAM2B,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,CAAA1B,QAAQ,CAAI,CACtC,MAAO,CACHE,IAAI,CAAEvB,6BADH,CAEHqB,QAAQ,CAAEA,QAFP,CAAP,CAIH,CALD","sourcesContent":["import {\n    SAVE_STUDENT_REQUEST, FETCH_STUDENT_REQUEST, UPDATE_STUDENT_REQUEST,\n    DELETE_STUDENT_REQUEST, STUDENT_SUCCESS, STUDENT_FAILURE,\n    FETCH_ALL_STUDENTS_REQUEST,\n    FETCH_SEARCH_STUDENTS_REQUEST\n} from \"./studentTypes\";\nimport axios from 'axios';\n\nexport const fetchAllStudents = (currentPage, size, sortDir, addedStudent) => {\n    --currentPage;\n    return dispatch => {\n\n        axios.get(\"http://localhost:8080/student-api/list?page=\" + currentPage + \"&size=\" + size + \"&sortBy=paymentStatus&sortDir=\" + sortDir)\n            .then(response => {\n                    if (addedStudent)\n                        response.data.content.unshift(\n                            //  {   id: -1, lastName: 'Select Student', firstName: '', idCardNr: '', telNr: '', paymentStatus: 0, lessonHours: 0, unpaidLessons: 0, moneyOwing: 0, moneyInAdvance: ''\n                            // }\n                            addedStudent);\n\n                dispatch(fetchAllStudentsRequest(response.data.content, response.data.totalPages, response.data.totalElements, sortDir));\n            })\n            .catch(error => {\n                dispatch(studentFailure(error.message));\n            });\n    };\n};\n\nconst fetchAllStudentsRequest = (students, totalPages, totalElements, sortDirection) => {\n    return {\n        type: FETCH_ALL_STUDENTS_REQUEST,\n        payload: students,\n        totalPages: totalPages,\n        totalElements: totalElements,\n        sortDirection: sortDirection\n    };\n};\n\nexport const saveStudent = student => {\n    return dispatch => {\n        axios.post(\"http://localhost:8080/student-api/list\", student)\n            .then(response => {\n                dispatch(saveStudentRequest(student));\n            })\n            .catch(error => {\n                console.log(error);\n                dispatch(studentFailure(error));\n            });\n    };\n};\n\nconst saveStudentRequest = student => {\n    return {\n        type: SAVE_STUDENT_REQUEST,\n        newItem: student\n    };\n};\n\nconst fetchStudentRequest = updatedStudent => {\n    return {\n        type: FETCH_STUDENT_REQUEST,\n        updatedStudent: updatedStudent\n    };\n};\n\nexport const fetchStudent = studentId => {\n    return dispatch => {\n        axios.get(\"http://localhost:8080/student-api/\" + studentId)\n            .then(response => {\n                dispatch(fetchStudentRequest(response.data));\n                //dispatch(studentSuccess(response.data.content));\n            })\n            .catch(error => {\n                dispatch(studentFailure(error));\n            });\n    };\n};\n\nconst updateStudentRequest = student => {\n    return {\n        type: UPDATE_STUDENT_REQUEST,\n        updatedStudent: student\n    };\n};\n\nexport const updateStudent = student => {\n    //console.log(student);\n    // student.NrHoursWeek = 0;\n    // student.NrHoursFull = 0;\n    // student.WeekWage = 0;\n    //console.log(student);\n\n    return dispatch => {\n        axios.put(\"http://localhost:8080/student-api/\" + student.id, student)\n            .then(response => {\n                dispatch(updateStudentRequest(student));\n\n                // dispatch(studentSuccess(response.data));\n            })\n            .catch(error => {\n                console.log(error);\n                dispatch(studentFailure(error));\n            });\n    };\n};\n\nconst deleteStudentRequest = studentId => {\n    return {\n        type: DELETE_STUDENT_REQUEST,\n        studentId: studentId\n    };\n};\n\nexport const deleteStudent = studentId => {\n    return dispatch => {\n        axios.delete(\"http://localhost:8080/student-api/list/\" + studentId)\n            .then(response => {\n                dispatch(deleteStudentRequest(studentId));\n                //console.log(response);\n                dispatch(studentSuccess(response.data));\n            })\n            .catch(error => {\n                dispatch(studentFailure(error));\n            });\n    };\n};\n\n\nconst studentSuccess = student => {\n    return {\n        type: STUDENT_SUCCESS,\n        payload: student\n    };\n};\n\nconst studentFailure = error => {\n    return {\n        type: STUDENT_FAILURE,\n        payload: error\n    };\n};\n\n\nexport const searchStudents = (searchedValue, currentPage, studentsPerPage) => {\n    --currentPage;\n    return dispatch => {\n        axios.get(\"http://localhost:8080/student-api/search/\" + searchedValue + \"?page=\" + currentPage + \"&size=\" + studentsPerPage)\n            .then(response => {\n                dispatch(searchStudentsRequest(response.data.content));\n            })\n            .catch(error => {\n                dispatch(studentFailure(error.message));\n            });\n    };\n};\n\n\nconst searchStudentsRequest = students => {\n    return {\n        type: FETCH_SEARCH_STUDENTS_REQUEST,\n        students: students\n    };\n};\n\n\n"]},"metadata":{},"sourceType":"module"}