{"ast":null,"code":"var _jsxFileName = \"/home/michal/Desktop/projekty/java/SurfSchoolSchedule/SurfSchoolSchedule/surf-school-schedule/src/components/Lesson/Lesson.js\";\nimport React from 'react';\nimport { Form, Card, Col, Button } from 'react-bootstrap';\nimport { faSave, faUndo, faArrowLeft, faEdit, faPlusSquare, faLanguage } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport SuccessToast from '../SuccessToast';\nimport Instructor from '../Instructor/Instructor';\n\nclass Lesson extends React.Component {\n  constructor(props) {\n    super(props);\n    this.initialState = {\n      id: '',\n      date: '',\n      time: 0,\n      nrStudents: 0,\n      status: 0,\n      students: [],\n      instructors: [],\n      dates: [],\n      times: [],\n      instructor: {\n        id: '',\n        lastName: '',\n        firstName: '',\n        NrHoursWeek: 0,\n        NrHoursFull: 0,\n        WeekWage: 0\n      },\n      student: {\n        id: '',\n        lastName: '',\n        firstName: '',\n        idCardNr: '',\n        telNr: '',\n        paymentStatus: 0,\n        lessonHours: 0,\n        unpaidLessons: 0,\n        moneyOwing: 0,\n        moneyInAdvance: ''\n      }\n    };\n\n    this.findAllStudents = () => {\n      axios.get(\"http://localhost:8080/student-api/list?page=0&size=999999999&sortBy=paymentStatus&sortDir=desc\").then(response => response.data).then(data => {\n        this.setState({\n          students: data.content\n        });\n      });\n    };\n\n    this.findAllInstructors = () => {\n      axios.get(\"http://localhost:8080/instructor-api/list?page=0&size=999999999&sortBy=paymentStatus&sortDir=desc\").then(response => response.data).then(data => {\n        this.setState({\n          instructors: data.content\n        });\n      });\n    };\n\n    this.findLessonById = idLesson => {\n      axios.get(\"http://localhost:8080/lesson-api/\" + idLesson).then(response => {\n        if (response.data != null) {\n          this.setState({\n            id: response.data.id,\n            instructor: response.data.instructor,\n            student: response.data.student,\n            date: response.data.date,\n            time: response.data.time,\n            nrStudents: response.data.nrStudents,\n            status: response.data.status\n          });\n        }\n      }).catch(error => {\n        console.error(\"Error: \" + error);\n      });\n    };\n\n    this.returnToList = () => {\n      return this.props.history.push(\"/lessons\");\n    };\n\n    this.submitLesson = event => {\n      event.preventDefault(); //console.log(this.state.instructor);\n\n      let lesson = {\n        //  instructor: this.state.instructor,\n        //student: this.state.student,\n        date: this.state.date,\n        time: this.state.time,\n        nrStudents: this.state.nrStudents,\n        status: this.state.status\n      };\n      lesson.instructor = this.state.instructor;\n      lesson.student = this.state.student;\n      console.log(typeof esson.instructor);\n      console.log(typeof this.state.instructor);\n      axios.post(\"http://localhost:8080/lesson-api/list\", lesson).then(response => {\n        if (response.data != null) {\n          this.setState({\n            \"show\": true,\n            \"method\": \"post\"\n          });\n          setTimeout(() => this.setState({\n            \"show\": false\n          }), 3000);\n          setTimeout(() => this.returnToList(), 1000);\n        } else {\n          this.setState({\n            \"show\": false\n          });\n        }\n      });\n      this.setState(this.initialState);\n    };\n\n    this.updateLesson = event => {\n      event.preventDefault();\n      const lesson = {\n        id: this.state.id,\n        instructor: this.state.instructor,\n        student: this.state.student,\n        date: this.state.date,\n        time: this.state.time,\n        nrStudents: this.state.nrStudents,\n        status: this.state.status\n      };\n      axios.put(\"http://localhost:8080/lesson-api/\" + this.state.id, lesson).then(response => {\n        if (response.data != null) {\n          this.setState({\n            \"show\": true,\n            \"method\": \"put\"\n          });\n          setTimeout(() => this.setState({\n            \"show\": false\n          }), 3000);\n          setTimeout(() => this.returnToList(), 1000);\n        } else {\n          this.setState({\n            \"show\": false\n          });\n        }\n      });\n      this.setState(this.initialState);\n    };\n\n    this.resetLesson = () => {\n      this.setState(() => this.initialState);\n    };\n\n    this.lessonChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.state = this.initialState;\n    this.state.show = false;\n    this.state.method = 'post';\n    this.lessonChange = this.lessonChange.bind(this);\n    this.submitLesson = this.submitLesson.bind(this);\n  }\n\n  arrayWithHours() {\n    var arr = [],\n        i,\n        j;\n\n    for (i = 9; i < 21; i++) {\n      for (j = 0; j < 2; j++) {\n        arr.push(i + \":\" + (j === 0 ? \"00\" : 30 * j));\n      }\n    }\n\n    return arr;\n  }\n\n  addDays(date, days) {\n    var result = new Date(date);\n    result.setDate(result.getDate() + days);\n    return result;\n  }\n\n  getDateArray(start, end) {\n    var arr = new Array();\n    var dt = new Date(start);\n\n    while (dt <= end) {\n      arr.push(new Date(dt).toLocaleDateString(\"en-US\"));\n      dt.setDate(dt.getDate() + 1);\n    }\n\n    return arr;\n  }\n\n  componentDidMount() {\n    const idLesson = +this.props.match.params.id;\n\n    if (idLesson) {\n      this.findLessonById(idLesson);\n    }\n\n    this.findAllStudents();\n    this.findAllInstructors();\n    this.setDatesAndTimesArrays();\n  }\n\n  setDatesAndTimesArrays() {\n    this.setState({\n      dates: this.getDateArray(new Date(), this.addDays(new Date(), 7)),\n      times: this.arrayWithHours()\n    });\n  }\n\n  render() {\n    const {\n      student,\n      instructor,\n      date,\n      time\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        \"display\": this.state.show ? \"block\" : \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(SuccessToast, {\n      show: this.state.show,\n      message: this.state.method === \"put\" ? \"Lesson Updated Successfully\" : \"Lesson Saved Successfully.\",\n      type: \"success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Card, {\n      className: \"border border-dark bg-dark text-white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: this.state.id ? faEdit : faPlusSquare,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 25\n      }\n    }), \" \", this.state.id ? \"Update Lesson\" : \"Add New Lesson\"), /*#__PURE__*/React.createElement(Form, {\n      onReset: this.resetLesson,\n      onSubmit: this.state.id ? this.updateLesson : this.submitLesson,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridStudent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 37\n      }\n    }, \"Student\"), /*#__PURE__*/React.createElement(Form.Control, {\n      required: true,\n      as: \"select\",\n      name: \"student\",\n      value: student,\n      custom: true,\n      onChange: this.lessonChange,\n      className: \"bg-dark text-white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 37\n      }\n    }, this.state.students.map(student => /*#__PURE__*/React.createElement(\"option\", {\n      key: student.id,\n      value: student,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 45\n      }\n    }, student.lastName + \" \" + student.firstName)))), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridInstructor\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 37\n      }\n    }, \"Instructor\"), /*#__PURE__*/React.createElement(Form.Control, {\n      required: true,\n      as: \"select\",\n      autoComplete: \"off\",\n      name: \"instructor\",\n      value: instructor,\n      onChange: this.lessonChange,\n      className: \"bg-dark text-white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 37\n      }\n    }, this.state.instructors.map(instructor => /*#__PURE__*/React.createElement(\"option\", {\n      key: instructor.id,\n      value: instructor,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 45\n      }\n    }, instructor.lastName + \" \" + instructor.firstName))))), /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridDate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 37\n      }\n    }, \"Date\"), /*#__PURE__*/React.createElement(Form.Control, {\n      required: true,\n      as: \"select\",\n      autoComplete: \"off\",\n      name: \"date\",\n      value: date,\n      onChange: this.lessonChange,\n      className: \"bg-dark text-white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 37\n      }\n    }, this.state.dates.map(date => /*#__PURE__*/React.createElement(\"option\", {\n      key: date,\n      value: date,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 45\n      }\n    }, date)))), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridTime\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 37\n      }\n    }, \"Time\"), /*#__PURE__*/React.createElement(Form.Control, {\n      required: true,\n      as: \"select\",\n      autoComplete: \"off\",\n      name: \"time\",\n      value: time,\n      onChange: this.lessonChange,\n      className: \"bg-dark text-white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 37\n      }\n    }, this.state.times.map(time => /*#__PURE__*/React.createElement(\"option\", {\n      key: time,\n      value: time,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 45\n      }\n    }, time)))))), /*#__PURE__*/React.createElement(Card.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      size: \"sm\",\n      variant: \"primary\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faSave,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 37\n      }\n    }), \" \", this.state.id ? \"Update\" : \"Submit\"), '      ', /*#__PURE__*/React.createElement(Button, {\n      size: \"sm\",\n      variant: \"secondary\",\n      type: \"reset\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faUndo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 37\n      }\n    }), \"  Reset\")), '      ', /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      size: \"sm\",\n      variant: \"light\",\n      type: \"button\",\n      onClick: this.returnToList.bind(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faArrowLeft,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 37\n      }\n    }), \"  Return\"))))));\n  }\n\n}\n\nexport default Lesson;","map":{"version":3,"sources":["/home/michal/Desktop/projekty/java/SurfSchoolSchedule/SurfSchoolSchedule/surf-school-schedule/src/components/Lesson/Lesson.js"],"names":["React","Form","Card","Col","Button","faSave","faUndo","faArrowLeft","faEdit","faPlusSquare","faLanguage","FontAwesomeIcon","Link","axios","SuccessToast","Instructor","Lesson","Component","constructor","props","initialState","id","date","time","nrStudents","status","students","instructors","dates","times","instructor","lastName","firstName","NrHoursWeek","NrHoursFull","WeekWage","student","idCardNr","telNr","paymentStatus","lessonHours","unpaidLessons","moneyOwing","moneyInAdvance","findAllStudents","get","then","response","data","setState","content","findAllInstructors","findLessonById","idLesson","catch","error","console","returnToList","history","push","submitLesson","event","preventDefault","lesson","state","log","esson","post","setTimeout","updateLesson","put","resetLesson","lessonChange","target","name","value","show","method","bind","arrayWithHours","arr","i","j","addDays","days","result","Date","setDate","getDate","getDateArray","start","end","Array","dt","toLocaleDateString","componentDidMount","match","params","setDatesAndTimesArrays","render","map"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Form, Card, Col, Button } from 'react-bootstrap';\nimport { faSave, faUndo, faArrowLeft, faEdit, faPlusSquare, faLanguage } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport SuccessToast from '../SuccessToast';\nimport Instructor from '../Instructor/Instructor';\n\nclass Lesson extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = this.initialState;\n        this.state.show = false;\n\n        this.state.method = 'post';\n        this.lessonChange = this.lessonChange.bind(this);\n        this.submitLesson = this.submitLesson.bind(this);\n\n    }\n\n    initialState = {\n        id: '', date: '', time: 0, nrStudents: 0, status: 0, students: [], instructors: [], dates: [], times: [],\n        instructor: {\n            id: '', lastName: '', firstName: '', NrHoursWeek: 0, NrHoursFull: 0, WeekWage: 0\n        },\n        student: {\n            id: '', lastName: '', firstName: '', idCardNr: '', telNr: '', paymentStatus: 0, lessonHours: 0, unpaidLessons: 0, moneyOwing: 0, moneyInAdvance: ''\n        }\n    }\n\n\n    arrayWithHours() {\n        var arr = [], i, j;\n        for (i = 9; i < 21; i++) {\n            for (j = 0; j < 2; j++) {\n                arr.push(i + \":\" + (j === 0 ? \"00\" : 30 * j));\n            }\n        }\n        return arr;\n    };\n\n    addDays(date, days) {\n        var result = new Date(date);\n        result.setDate(result.getDate() + days);\n        return result;\n    }\n\n    getDateArray(start, end) {\n        var arr = new Array();\n        var dt = new Date(start);\n        while (dt <= end) {\n            arr.push((new Date(dt)).toLocaleDateString(\"en-US\"));\n            dt.setDate(dt.getDate() + 1);\n        }\n        return arr;\n    }\n\n    componentDidMount() {\n        const idLesson = +this.props.match.params.id;\n        if (idLesson) {\n            this.findLessonById(idLesson);\n        }\n        this.findAllStudents();\n        this.findAllInstructors();\n        this.setDatesAndTimesArrays();\n    };\n\n    setDatesAndTimesArrays() {\n        this.setState({\n            dates: this.getDateArray(new Date(), this.addDays(new Date(), 7)), times: this.arrayWithHours()\n        })\n    }\n\n    findAllStudents = () => {\n        axios.get(\"http://localhost:8080/student-api/list?page=0&size=999999999&sortBy=paymentStatus&sortDir=desc\")\n            .then(response => response.data)\n            .then((data) => {\n\n                this.setState({\n                    students: data.content\n                });\n            });\n    };\n\n\n\n    findAllInstructors = () => {\n        axios.get(\"http://localhost:8080/instructor-api/list?page=0&size=999999999&sortBy=paymentStatus&sortDir=desc\")\n            .then(response => response.data)\n            .then((data) => {\n                this.setState({\n                    instructors: data.content\n                });\n            });\n    };\n\n\n    findLessonById = (idLesson) => {\n        axios.get(\"http://localhost:8080/lesson-api/\" + idLesson)\n            .then(response => {\n                if (response.data != null) {\n                    this.setState({\n                        id: response.data.id,\n                        instructor: response.data.instructor,\n                        student: response.data.student,\n                        date: response.data.date,\n                        time: response.data.time,\n                        nrStudents: response.data.nrStudents,\n                        status: response.data.status,\n                    });\n\n                }\n            }).catch((error) => {\n                console.error(\"Error: \" + error);\n            });\n    };\n\n    returnToList = () => {\n        return this.props.history.push(\"/lessons\");\n    };\n\n    submitLesson = event => {\n        event.preventDefault();\n        //console.log(this.state.instructor);\n\n        let lesson = {\n          //  instructor: this.state.instructor,\n            //student: this.state.student,\n            date: this.state.date,\n            time: this.state.time,\n            nrStudents: this.state.nrStudents,\n            status: this.state.status\n        };\n       lesson.instructor = this.state.instructor;\n        lesson.student = this.state.student;\n        console.log(typeof(esson.instructor));\n        console.log(typeof(this.state.instructor));\n        axios.post(\"http://localhost:8080/lesson-api/list\", lesson)\n            .then(response => {\n                if (response.data != null) {\n                    this.setState({ \"show\": true, \"method\": \"post\" });\n                    setTimeout(() => this.setState({ \"show\": false }), 3000);\n                    setTimeout(() => this.returnToList(), 1000);\n                } else {\n                    this.setState({ \"show\": false });\n                }\n            });\n        this.setState(this.initialState);\n\n    };\n\n    updateLesson = event => {\n        event.preventDefault();\n\n        const lesson = {\n            id: this.state.id,\n            instructor: this.state.instructor,\n            student: this.state.student,\n            date: this.state.date,\n            time: this.state.time,\n            nrStudents: this.state.nrStudents,\n            status: this.state.status\n        };\n        axios.put(\"http://localhost:8080/lesson-api/\" + this.state.id, lesson)\n            .then(response => {\n                if (response.data != null) {\n                    this.setState({ \"show\": true, \"method\": \"put\" });\n                    setTimeout(() => this.setState({ \"show\": false }), 3000);\n                    setTimeout(() => this.returnToList(), 1000);\n                } else {\n                    this.setState({ \"show\": false });\n                }\n            });\n        this.setState(this.initialState);\n    }\n\n    resetLesson = () => {\n        this.setState(() => this.initialState);\n    };\n\n    lessonChange = event => {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    };\n\n    render() {\n        const { student, instructor, date, time } = this.state;\n        return (\n            <div>\n                <div style={{ \"display\": this.state.show ? \"block\" : \"none\" }}>\n                    <SuccessToast show={this.state.show} message={this.state.method === \"put\" ? \"Lesson Updated Successfully\" : \"Lesson Saved Successfully.\"} type=\"success\" />\n                </div>\n\n                <Card className={\"border border-dark bg-dark text-white\"}>\n                    <Card.Header>\n                        <FontAwesomeIcon icon={this.state.id ? faEdit : faPlusSquare} /> {this.state.id ? \"Update Lesson\" : \"Add New Lesson\"}\n                    </Card.Header>\n                    <Form onReset={this.resetLesson} onSubmit={this.state.id ? this.updateLesson : this.submitLesson}>\n                        <Card.Body>\n                            <Form.Row>\n                                <Form.Group as={Col} controlId=\"formGridStudent\">\n                                    <Form.Label>Student</Form.Label>\n                                    <Form.Control required as=\"select\"\n                                        name=\"student\"\n                                        value={student}\n                                        custom onChange={this.lessonChange}\n                                        className={\"bg-dark text-white\"} >\n                                        {this.state.students.map(student =>\n                                            <option key={student.id} value={student}>\n                                                {student.lastName + \" \" + student.firstName}\n                                            </option>\n                                        )}\n                                    </Form.Control>\n                                </Form.Group>\n\n                                <Form.Group as={Col} controlId=\"formGridInstructor\">\n                                    <Form.Label>Instructor</Form.Label>\n                                    <Form.Control required as=\"select\"\n                                        autoComplete=\"off\"\n                                        name=\"instructor\"\n                                        value={instructor}\n                                        onChange={this.lessonChange}\n                                        className={\"bg-dark text-white\"} >\n                                        {this.state.instructors.map(instructor =>\n                                            <option key={instructor.id} value={instructor}>\n                                                {instructor.lastName + \" \" + instructor.firstName}\n                                            </option>\n                                        )}\n                                    </Form.Control>\n                                </Form.Group>\n                            </Form.Row>\n\n                            <Form.Row>\n                                <Form.Group as={Col} controlId=\"formGridDate\">\n                                    <Form.Label>Date</Form.Label>\n                                    <Form.Control required as=\"select\"\n                                        autoComplete=\"off\"\n                                        name=\"date\"\n                                        value={date}\n                                        onChange={this.lessonChange}\n                                        className={\"bg-dark text-white\"} >\n                                        {this.state.dates.map(date =>\n                                            <option key={date} value={date}>\n                                                {date}\n                                            </option>\n                                        )}\n                                    </Form.Control>\n                                </Form.Group>\n\n                                <Form.Group as={Col} controlId=\"formGridTime\">\n                                    <Form.Label>Time</Form.Label>\n                                    <Form.Control required as=\"select\"\n                                        autoComplete=\"off\"\n                                        name=\"time\"\n                                        value={time}\n                                        onChange={this.lessonChange}\n                                        className={\"bg-dark text-white\"} >\n                                        {this.state.times.map(time =>\n                                            <option key={time} value={time}>\n                                                {time}\n                                            </option>\n                                        )}\n                                    </Form.Control>\n                                </Form.Group>\n                            </Form.Row>\n\n                        </Card.Body>\n\n                        <Card.Footer>\n                            <div>\n                                <Button size=\"sm\" variant=\"primary\" type=\"submit\">\n                                    <FontAwesomeIcon icon={faSave} /> {this.state.id ? \"Update\" : \"Submit\"}\n                                </Button>\n                                {'      '}\n\n                                <Button size=\"sm\" variant=\"secondary\" type=\"reset\">\n                                    <FontAwesomeIcon icon={faUndo} />  Reset\n                    </Button>\n                            </div>\n                            {'      '}\n                            <div>\n                                <Button size=\"sm\" variant=\"light\" type=\"button\" onClick={this.returnToList.bind()}>\n                                    <FontAwesomeIcon icon={faArrowLeft} />  Return\n                    </Button>\n                            </div>\n                        </Card.Footer>\n                    </Form >\n\n\n                </Card >\n            </div>\n        );\n    }\n\n}\nexport default Lesson;"]},"metadata":{},"sourceType":"module"}