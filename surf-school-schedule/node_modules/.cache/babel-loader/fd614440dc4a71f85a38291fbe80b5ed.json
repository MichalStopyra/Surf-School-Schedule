{"ast":null,"code":"import { SAVE_INSTRUCTOR_REQUEST, FETCH_INSTRUCTOR_REQUEST, UPDATE_INSTRUCTOR_REQUEST, DELETE_INSTRUCTOR_REQUEST, INSTRUCTOR_SUCCESS, INSTRUCTOR_FAILURE, FETCH_ALL_INSTRUCTORS_REQUEST, FETCH_ALL_INSTRUCTORS_SUCCESS } from \"./instructorTypes\";\nimport axios from 'axios';\nexport const fetchAllInstructors = (currentPage, size, sortDir) => {\n  return dispatch => {\n    console.log(\"asd\");\n    dispatch(fetchAllInstructorsRequest());\n    axios.get(\"http://localhost:8080/instructor-api/list?page=\" + 0 + \"&size=\" + size + \"&sortBy=paymentStatus&sortDir=\" + sortDir).then(response => {\n      dispatch(fetchAllInstructorsSuccess(response.data.content));\n    }).catch(error => {\n      dispatch(instructorFailure(error.message));\n    });\n  };\n};\n\nconst fetchAllInstructorsRequest = () => {\n  return {\n    type: FETCH_ALL_INSTRUCTORS_REQUEST\n  };\n};\n\nexport const saveInstructor = instructor => {\n  return dispatch => {\n    axios.post(\"http://localhost:8080/instructor-api/list\", instructor).then(response => {\n      //  dispatch(instructorSuccess(response.data));\n      dispatch(saveInstructorRequest(instructor));\n      console.log(this.props);\n    }).catch(error => {\n      console.log(error);\n      dispatch(instructorFailure(error));\n    });\n  };\n};\n\nconst saveInstructorRequest = instructor => {\n  return {\n    type: SAVE_INSTRUCTOR_REQUEST,\n    item: instructor\n  };\n};\n\nconst fetchInstructorRequest = () => {\n  return {\n    type: FETCH_INSTRUCTOR_REQUEST\n  };\n};\n\nexport const fetchInstructor = instructorId => {\n  return dispatch => {\n    dispatch(fetchInstructorRequest());\n    axios.get(\"http://localhost:8080/instructor-api/\" + instructorId).then(response => {\n      dispatch(instructorSuccess(response.data.content));\n    }).catch(error => {\n      dispatch(instructorFailure(error));\n    });\n  };\n};\n\nconst updateInstructorRequest = () => {\n  return {\n    type: UPDATE_INSTRUCTOR_REQUEST\n  };\n};\n\nexport const updateInstructor = instructor => {\n  return dispatch => {\n    dispatch(updateInstructorRequest());\n    axios.put(\"http://localhost:8080/instructor-api/\", instructor).then(response => {// dispatch(instructorSuccess(response.data));\n    }).catch(error => {\n      dispatch(instructorFailure(error));\n    });\n  };\n};\n\nconst deleteInstructorRequest = instructorId => {\n  return {\n    type: DELETE_INSTRUCTOR_REQUEST,\n    instructorId: instructorId\n  };\n};\n\nexport const deleteInstructor = instructorId => {\n  return dispatch => {\n    axios.delete(\"http://localhost:8080/instructor-api/list/\" + instructorId).then(response => {\n      dispatch(deleteInstructorRequest(instructorId)); //console.log(response);\n\n      dispatch(instructorSuccess(response.data));\n    }).catch(error => {\n      dispatch(instructorFailure(error));\n    });\n  };\n};\n\nconst instructorSuccess = instructor => {\n  return {\n    type: INSTRUCTOR_SUCCESS,\n    payload: instructor\n  };\n};\n\nconst instructorFailure = error => {\n  return {\n    type: INSTRUCTOR_FAILURE,\n    payload: error\n  };\n};\n\nconst fetchAllInstructorsSuccess = instructors => {\n  return {\n    type: FETCH_ALL_INSTRUCTORS_SUCCESS,\n    payload: instructors\n  };\n};","map":{"version":3,"sources":["/home/michal/Desktop/projekty/java/SurfSchoolSchedule/SurfSchoolSchedule/surf-school-schedule/src/services/instructor/instructorActions.js"],"names":["SAVE_INSTRUCTOR_REQUEST","FETCH_INSTRUCTOR_REQUEST","UPDATE_INSTRUCTOR_REQUEST","DELETE_INSTRUCTOR_REQUEST","INSTRUCTOR_SUCCESS","INSTRUCTOR_FAILURE","FETCH_ALL_INSTRUCTORS_REQUEST","FETCH_ALL_INSTRUCTORS_SUCCESS","axios","fetchAllInstructors","currentPage","size","sortDir","dispatch","console","log","fetchAllInstructorsRequest","get","then","response","fetchAllInstructorsSuccess","data","content","catch","error","instructorFailure","message","type","saveInstructor","instructor","post","saveInstructorRequest","props","item","fetchInstructorRequest","fetchInstructor","instructorId","instructorSuccess","updateInstructorRequest","updateInstructor","put","deleteInstructorRequest","deleteInstructor","delete","payload","instructors"],"mappings":"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","sourcesContent":["\nimport {SAVE_INSTRUCTOR_REQUEST, FETCH_INSTRUCTOR_REQUEST, UPDATE_INSTRUCTOR_REQUEST,\n     DELETE_INSTRUCTOR_REQUEST, INSTRUCTOR_SUCCESS, INSTRUCTOR_FAILURE,\n    FETCH_ALL_INSTRUCTORS_REQUEST, FETCH_ALL_INSTRUCTORS_SUCCESS} from \"./instructorTypes\";\nimport axios from 'axios';\n\nexport const fetchAllInstructors = (currentPage, size, sortDir) => {\n    return dispatch => {\n        console.log(\"asd\");\n\n        dispatch(fetchAllInstructorsRequest());\n        axios.get(\"http://localhost:8080/instructor-api/list?page=\" + 0 + \"&size=\" + size + \"&sortBy=paymentStatus&sortDir=\" + sortDir)\n            .then(response => {\n                dispatch(fetchAllInstructorsSuccess(response.data.content));\n            })\n            .catch(error => {\n                dispatch(instructorFailure(error.message));\n            });\n    };\n};\n\nconst fetchAllInstructorsRequest = () => {\n    return {\n        type: FETCH_ALL_INSTRUCTORS_REQUEST\n    };\n};\n\nexport const saveInstructor = instructor => {\n    return dispatch => {\n        axios.post(\"http://localhost:8080/instructor-api/list\", instructor)\n            .then(response => {\n              //  dispatch(instructorSuccess(response.data));\n              dispatch(saveInstructorRequest(instructor));\n\n                console.log(this.props);\n            })\n            .catch(error => {\n                console.log(error);\n                dispatch(instructorFailure(error));\n            });\n    };\n};\n\nconst saveInstructorRequest = instructor => { \n    return {\n        type: SAVE_INSTRUCTOR_REQUEST,\n        item: instructor\n    };\n};\n\nconst fetchInstructorRequest = () => {\n    return {\n        type: FETCH_INSTRUCTOR_REQUEST\n    };\n};\n\nexport const fetchInstructor = instructorId => {\n    return dispatch => {\n        dispatch(fetchInstructorRequest());\n        axios.get(\"http://localhost:8080/instructor-api/\"+instructorId)\n            .then(response => {\n                dispatch(instructorSuccess(response.data.content));\n            })\n            .catch(error => {\n                dispatch(instructorFailure(error));\n            });\n    };\n};\n\nconst updateInstructorRequest = () => {\n    return {\n        type: UPDATE_INSTRUCTOR_REQUEST\n    };\n};\n\nexport const updateInstructor = instructor => {\n    return dispatch => {\n        dispatch(updateInstructorRequest());\n        axios.put(\"http://localhost:8080/instructor-api/\", instructor)\n            .then(response => {\n               // dispatch(instructorSuccess(response.data));\n            })\n            .catch(error => {\n                dispatch(instructorFailure(error));\n            });\n    };\n};\n\nconst deleteInstructorRequest = instructorId => {\n    return {\n        type: DELETE_INSTRUCTOR_REQUEST,\n        instructorId: instructorId\n    };\n};\n\nexport const deleteInstructor = instructorId => {\n    return dispatch => {\n        axios.delete(\"http://localhost:8080/instructor-api/list/\"+instructorId)\n            .then(response => {\n                dispatch(deleteInstructorRequest(instructorId));\n                //console.log(response);\n                dispatch(instructorSuccess(response.data));\n            })\n            .catch(error => {\n                dispatch(instructorFailure(error));\n            });\n    };\n};\n\n\nconst instructorSuccess = instructor => {\n    return {\n        type: INSTRUCTOR_SUCCESS,\n        payload: instructor\n    };\n};\n\nconst instructorFailure = error => {\n    return {\n        type: INSTRUCTOR_FAILURE,\n        payload: error\n    };\n};\n\nconst fetchAllInstructorsSuccess = instructors => {\n    return {\n        type: FETCH_ALL_INSTRUCTORS_SUCCESS,\n        payload: instructors\n    };\n};\n\n\n"]},"metadata":{},"sourceType":"module"}