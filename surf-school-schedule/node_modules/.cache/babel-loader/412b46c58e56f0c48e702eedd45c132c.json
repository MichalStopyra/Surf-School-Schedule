{"ast":null,"code":"var _jsxFileName = \"/home/michal/Desktop/projekty/java/SurfSchoolSchedule/SurfSchoolSchedule/surf-school-schedule/src/components/Lesson/Lesson.js\";\nimport React from 'react';\nimport { Form, Card, Col, Button } from 'react-bootstrap';\nimport { faSave, faUndo, faArrowLeft, faEdit, faPlusSquare, faLanguage } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport SuccessToast from '../SuccessToast';\n\nclass Lesson extends React.Component {\n  constructor(props) {\n    super(props);\n    this.initialState = {\n      id: '',\n      instructor: '',\n      student: '',\n      date: '',\n      time: 0,\n      nrStudents: 0,\n      status: 0\n    };\n\n    this.findAllStudents = () => {\n      axios.get(\"http://localhost:8080/student-api/list\").then(response => response.data).then(data => {\n        this.setState({\n          students: data.content\n        });\n      });\n    };\n\n    this.findAllInstructors = () => {\n      axios.get(\"http://localhost:8080/instructor-api/list\").then(response => response.data).then(data => {\n        this.setState({\n          instructors: [{\n            value: '',\n            display: 'Select Instructor'\n          }].concat(data.content.map(instructor => {\n            return {\n              value: instructor,\n              display: instructor\n            };\n          }))\n        });\n      });\n    };\n\n    this.findLessonById = idLesson => {\n      axios.get(\"http://localhost:8080/lesson-api/\" + idLesson).then(response => {\n        if (response.data != null) {\n          this.setState({\n            id: response.data.id,\n            instructor: response.data.instructor,\n            student: response.data.student,\n            date: response.data.date,\n            time: response.data.time,\n            nrStudents: response.data.nrStudents,\n            status: response.data.status\n          });\n          console.log(response.data.instructor);\n        }\n      }).catch(error => {\n        console.error(\"Error: \" + error);\n      });\n    };\n\n    this.returnToList = () => {\n      return this.props.history.push(\"/lessons\");\n    };\n\n    this.submitLesson = event => {\n      event.preventDefault();\n      const lesson = {\n        instructor: this.state.instructor,\n        student: this.state.student,\n        date: this.state.date,\n        time: this.state.time,\n        nrStudents: this.state.nrStudents,\n        status: this.state.status\n      };\n      axios.post(\"http://localhost:8080/lesson-api/list\", lesson).then(response => {\n        if (response.data != null) {\n          this.setState({\n            \"show\": true,\n            \"method\": \"post\"\n          });\n          setTimeout(() => this.setState({\n            \"show\": false\n          }), 3000);\n          setTimeout(() => this.returnToList(), 1000);\n        } else {\n          this.setState({\n            \"show\": false\n          });\n        }\n      });\n      this.setState(this.initialState);\n    };\n\n    this.updateLesson = event => {\n      event.preventDefault();\n      const lesson = {\n        id: this.state.id,\n        instructor: this.state.instructor,\n        student: this.state.student,\n        date: this.state.date,\n        time: this.state.time,\n        nrStudents: this.state.nrStudents,\n        status: this.state.status\n      };\n      axios.put(\"http://localhost:8080/lesson-api/\" + this.state.id, lesson).then(response => {\n        if (response.data != null) {\n          this.setState({\n            \"show\": true,\n            \"method\": \"put\"\n          });\n          setTimeout(() => this.setState({\n            \"show\": false\n          }), 3000);\n          setTimeout(() => this.returnToList(), 1000);\n        } else {\n          this.setState({\n            \"show\": false\n          });\n        }\n      });\n      this.setState(this.initialState);\n    };\n\n    this.resetLesson = () => {\n      this.setState(() => this.initialState);\n    };\n\n    this.lessonChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.state = this.initialState;\n    this.state = {\n      show: false,\n      students: [],\n      instructors: []\n    };\n    this.state.method = 'post';\n    this.lessonChange = this.lessonChange.bind(this);\n    this.submitLesson = this.submitLesson.bind(this);\n  }\n\n  componentDidMount() {\n    const idLesson = +this.props.match.params.id;\n\n    if (idLesson) {\n      this.findLessonById(idLesson);\n    }\n\n    this.findAllStudents();\n    this.findAllInstructors(); //let st = this.state.students.map(st => st.lastName);\n\n    console.log(this.state.students);\n  }\n\n  findAllStudents(currentPage) {\n    currentPage -= 1;\n    let sortDirection = this.state.sortToggle ? \"asc\" : \"desc\";\n    axios.get(\"http://localhost:8080/student-api/list?page=\" + currentPage + \"&size=\" + this.state.studentsPerPage + \"&sortBy=paymentStatus&sortDir=\" + sortDirection).then(response => response.data).then(data => {\n      this.setState({\n        students: data.content,\n        totalPages: data.totalPages,\n        totalElements: data.totalElements,\n        currentPage: data.number + 1\n      });\n    });\n  }\n\n  render() {\n    const {\n      student,\n      instructor\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        \"display\": this.state.show ? \"block\" : \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(SuccessToast, {\n      show: this.state.show,\n      message: this.state.method === \"put\" ? \"Lesson Updated Successfully\" : \"Lesson Saved Successfully.\",\n      type: \"success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Card, {\n      className: \"border border-dark bg-dark text-white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: this.state.id ? faEdit : faPlusSquare,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 25\n      }\n    }), \" \", this.state.id ? \"Update Lesson\" : \"Add New Lesson\"), /*#__PURE__*/React.createElement(Form, {\n      onReset: this.resetLesson,\n      onSubmit: this.state.id ? this.updateLesson : this.submitLesson,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Card.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      size: \"sm\",\n      variant: \"primary\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faSave,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 37\n      }\n    }), \" \", this.state.id ? \"Update\" : \"Submit\"), '      ', /*#__PURE__*/React.createElement(Button, {\n      size: \"sm\",\n      variant: \"secondary\",\n      type: \"reset\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faUndo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 37\n      }\n    }), \"  Reset\")), '      ', /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      size: \"sm\",\n      variant: \"light\",\n      type: \"button\",\n      onClick: this.returnToList.bind(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faArrowLeft,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 37\n      }\n    }), \"  Return\"))))));\n  }\n\n}\n\nexport default Lesson;","map":{"version":3,"sources":["/home/michal/Desktop/projekty/java/SurfSchoolSchedule/SurfSchoolSchedule/surf-school-schedule/src/components/Lesson/Lesson.js"],"names":["React","Form","Card","Col","Button","faSave","faUndo","faArrowLeft","faEdit","faPlusSquare","faLanguage","FontAwesomeIcon","Link","axios","SuccessToast","Lesson","Component","constructor","props","initialState","id","instructor","student","date","time","nrStudents","status","findAllStudents","get","then","response","data","setState","students","content","findAllInstructors","instructors","value","display","concat","map","findLessonById","idLesson","console","log","catch","error","returnToList","history","push","submitLesson","event","preventDefault","lesson","state","post","setTimeout","updateLesson","put","resetLesson","lessonChange","target","name","show","method","bind","componentDidMount","match","params","currentPage","sortDirection","sortToggle","studentsPerPage","totalPages","totalElements","number","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Form, Card, Col, Button } from 'react-bootstrap';\nimport { faSave, faUndo, faArrowLeft, faEdit, faPlusSquare, faLanguage } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport SuccessToast from '../SuccessToast';\n\nclass Lesson extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = this.initialState;\n        this.state = {\n            show: false,\n            students: [],\n            instructors: []\n        };\n\n        this.state.method = 'post';\n        this.lessonChange = this.lessonChange.bind(this);\n        this.submitLesson = this.submitLesson.bind(this);\n\n    }\n\n    initialState = {\n        id: '', instructor: '', student: '', date: '', time: 0, nrStudents: 0, status: 0\n    }\n\n    componentDidMount() {\n        const idLesson = +this.props.match.params.id;\n        if (idLesson) {\n            this.findLessonById(idLesson);\n        }\n        this.findAllStudents();\n        this.findAllInstructors();\n        //let st = this.state.students.map(st => st.lastName);\n    console.log(this.state.students);\n    };\n\n    findAllStudents = () => {\n        axios.get(\"http://localhost:8080/student-api/list\")\n        .then(response => response.data)\n        .then((data) => {\n\n            this.setState({\n                    students: data.content\n            });\n        });\n    };\n\n\n    findAllStudents(currentPage) {\n        currentPage -= 1;\n        let sortDirection = this.state.sortToggle ? \"asc\" : \"desc\";\n        axios.get(\"http://localhost:8080/student-api/list?page=\" + currentPage + \"&size=\" + this.state.studentsPerPage + \"&sortBy=paymentStatus&sortDir=\" + sortDirection)\n            .then(response => response.data)\n            .then((data) => {\n                this.setState({\n                    students: data.content,\n                    totalPages: data.totalPages,\n                    totalElements: data.totalElements,\n                    currentPage: data.number + 1\n                });\n            });\n    }\n\n    findAllInstructors = () => {\n        axios.get(\"http://localhost:8080/instructor-api/list\")\n        .then(response => response.data)\n        .then((data) => {\n            this.setState({\n                    instructors: [{value:'', display: 'Select Instructor'}]\n                    .concat(data.content.map(instructor => {\n                        return {value: instructor, display: instructor}\n                    }))\n            });\n        });\n    };\n\n\n    findLessonById = (idLesson) => {\n        axios.get(\"http://localhost:8080/lesson-api/\" + idLesson)\n            .then(response => {\n                if (response.data != null) {\n                    this.setState({\n                        id: response.data.id,\n                        instructor: response.data.instructor,\n                        student: response.data.student,\n                        date: response.data.date,\n                        time: response.data.time,\n                        nrStudents: response.data.nrStudents,\n                        status: response.data.status,\n                    });\n                    console.log(response.data.instructor);\n\n                }\n            }).catch((error) => {\n                console.error(\"Error: \" + error);\n            });\n    };\n\n    returnToList = () => {\n        return this.props.history.push(\"/lessons\");\n    };\n\n    submitLesson = event => {\n        event.preventDefault();\n\n        const lesson = {\n            instructor: this.state.instructor,\n            student: this.state.student,\n            date: this.state.date,\n            time: this.state.time,\n            nrStudents: this.state.nrStudents,\n            status: this.state.status\n        };\n\n        axios.post(\"http://localhost:8080/lesson-api/list\", lesson)\n            .then(response => {\n                if (response.data != null) {\n                    this.setState({ \"show\": true, \"method\": \"post\" });\n                    setTimeout(() => this.setState({ \"show\": false }), 3000);\n                    setTimeout(() => this.returnToList(), 1000);\n                } else {\n                    this.setState({ \"show\": false });\n                }\n            });\n        this.setState(this.initialState);\n\n    };\n\n    updateLesson = event => {\n        event.preventDefault();\n\n        const lesson = {\n            id: this.state.id,\n            instructor: this.state.instructor,\n            student: this.state.student,\n            date: this.state.date,\n            time: this.state.time,\n            nrStudents: this.state.nrStudents,\n            status: this.state.status\n        };\n        axios.put(\"http://localhost:8080/lesson-api/\" + this.state.id, lesson)\n            .then(response => {\n                if (response.data != null) {\n                    this.setState({ \"show\": true, \"method\": \"put\" });\n                    setTimeout(() => this.setState({ \"show\": false }), 3000);\n                    setTimeout(() => this.returnToList(), 1000);\n                } else {\n                    this.setState({ \"show\": false });\n                }\n            });\n        this.setState(this.initialState);\n    }\n\n    resetLesson = () => {\n        this.setState(() => this.initialState);\n    };\n\n    lessonChange = event => {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    };\n\n    render() {\n        const { student, instructor } = this.state;\n        return (\n            <div>\n                <div style={{ \"display\": this.state.show ? \"block\" : \"none\" }}>\n                    <SuccessToast show={this.state.show} message={this.state.method === \"put\" ? \"Lesson Updated Successfully\" : \"Lesson Saved Successfully.\"} type=\"success\" />\n                </div>\n\n                <Card className={\"border border-dark bg-dark text-white\"}>\n                    <Card.Header>\n                        <FontAwesomeIcon icon={this.state.id ? faEdit : faPlusSquare} /> {this.state.id ? \"Update Lesson\" : \"Add New Lesson\"}\n                    </Card.Header>\n                    <Form onReset={this.resetLesson} onSubmit={this.state.id ? this.updateLesson : this.submitLesson}>\n                        <Card.Body>\n                            {/* <Form.Row>\n                                <Form.Group as={Col} controlId=\"formGridStudent\">\n                                    <Form.Label>Student</Form.Label>\n                                    <Form.Control required as=\"select\"\n                                        autoComplete=\"off\"\n                                        name=\"Student\"\n                                        value={student}\n                                        onChange={this.lessonChange}\n                                        className={\"bg-dark text-white\"} >\n                                        {this.state.students.map(student =>\n                                            <option key = {student.value} value = {student.value}>\n                                                {student.lastName.display}\n                                            </option>\n                                            )}\n                                            </Form.Control>\n                                </Form.Group>\n\n                                <Form.Group as={Col} controlId=\"formGridInstructor\">\n                                    <Form.Label>Instructor</Form.Label>\n                                    <Form.Control required as=\"select\"\n                                        autoComplete=\"off\"\n                                        name=\"Instructor\"\n                                        value={instructor}\n                                        onChange={this.lessonChange}\n                                        className={\"bg-dark text-white\"} >\n                                        {this.state.instructors.map(instructor =>\n                                            <option key = {instructor.value} value = {instructor.value}>\n                                                {instructor.lastName.display}\n                                            </option>\n                                            )}\n                                            </Form.Control>\n                                </Form.Group>\n                            </Form.Row> */}\n\n                        </Card.Body>\n\n                        <Card.Footer>\n                            <div>\n                                <Button size=\"sm\" variant=\"primary\" type=\"submit\">\n                                    <FontAwesomeIcon icon={faSave} /> {this.state.id ? \"Update\" : \"Submit\"}\n                                </Button>\n                                {'      '}\n\n                                <Button size=\"sm\" variant=\"secondary\" type=\"reset\">\n                                    <FontAwesomeIcon icon={faUndo} />  Reset\n                    </Button>\n                            </div>\n                            {'      '}\n                            <div>\n                                <Button size=\"sm\" variant=\"light\" type=\"button\" onClick={this.returnToList.bind()}>\n                                    <FontAwesomeIcon icon={faArrowLeft} />  Return\n                    </Button>\n                            </div>\n                        </Card.Footer>\n                    </Form >\n\n\n                </Card >\n            </div>\n        );\n    }\n\n}\nexport default Lesson;"]},"metadata":{},"sourceType":"module"}