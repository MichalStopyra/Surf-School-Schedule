{"ast":null,"code":"var _jsxFileName = \"/home/michal/Desktop/projekty/java/SurfSchoolSchedule/SurfSchoolSchedule/surf-school-schedule/src/components/Student/StudentSettle.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { Card, Table, ButtonGroup, Button, InputGroup, FormControl } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUsers, faWallet, faEdit, faTrash, faCalendarPlus, faStepBackward, faFastBackward, faStepForward, faFastForward, faSearch, faTimes, faCheckSquare } from '@fortawesome/free-solid-svg-icons';\nimport SuccessToast from '../SuccessToast';\nimport StudentLessonsList from './StudentLessonsList';\nimport { connect } from 'react-redux';\nimport { deleteLesson, fetchAllLessonsForStudent, searchLessons, updateLesson } from './../../services/index';\nimport './../../style/Style.css';\n\nclass StudentSettle extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.changePage = event => {\n      let target = parseInt(event.target.value);\n\n      if (this.props.lesson.searchedLesson) {\n        this.searchLesson(target);\n      } else {\n        let sortDirection = this.state.sortToggle ? \"asc\" : \"desc\";\n        this.props.fetchAllLessonsForStudent(+this.props.match.params.id, target, this.state.lessonsPerPage);\n      }\n\n      this.setState({\n        [event.target.name]: target\n      });\n    };\n\n    this.firstPage = () => {\n      let firstPage = 1;\n\n      if (this.props.lesson.currentPage > firstPage) {\n        this.props.lesson.currentPage = 1;\n\n        if (this.props.lesson.searchedLesson) {\n          this.searchLesson(this.props.lesson.currentPage);\n        } else {\n          let sortDirection = this.state.sortToggle ? \"asc\" : \"desc\";\n          this.props.fetchAllLessonsForStudent(+this.props.match.params.id, this.props.lesson.currentPage, this.state.lessonsPerPage);\n        }\n      }\n    };\n\n    this.prevPage = () => {\n      if (this.props.lesson.currentPage > 1) {\n        --this.props.lesson.currentPage;\n\n        if (this.props.lesson.searchedLesson) {\n          this.searchLesson(this.props.lesson.currentPage);\n        } else {\n          let sortDirection = this.state.sortToggle ? \"asc\" : \"desc\";\n          this.props.fetchAllLessonsForStudent(+this.props.match.params.id, this.props.lesson.currentPage, this.state.lessonsPerPage);\n        }\n      }\n    };\n\n    this.lastPage = () => {\n      let lessonsLength = this.state.lessons.length;\n      let lastPage = Math.ceil(this.props.totalElements / this.state.lessonsPerPage);\n\n      if (this.props.lesson.currentPage < lastPage) {\n        this.props.lesson.currentPage = lastPage;\n\n        if (this.props.lesson.searchedLesson) {\n          this.searchLesson(this.props.lesson.currentPage);\n        } else {\n          this.props.fetchAllLessonsForStudent(+this.props.match.params.id, this.props.lesson.currentPage, this.state.lessonsPerPage);\n        }\n      }\n    };\n\n    this.nextPage = () => {\n      if (this.state.currentPage < Math.ceil(this.props.totalElements / this.state.lessonsPerPage)) {\n        ++this.props.lesson.currentPage;\n\n        if (this.props.lesson.searchedLesson) {\n          this.searchLesson(this.props.lesson.currentPage);\n        } else {\n          let sortDirection = this.state.sortToggle ? \"asc\" : \"desc\";\n          this.props.fetchAllLessonsForStudent(+this.props.match.params.id, this.props.lesson.currentPage, this.state.lessonsPerPage);\n        }\n      }\n    };\n\n    this.searchChange = event => {\n      this.props.lesson.searchedLesson = event.target.value;\n      this.forceUpdate();\n    };\n\n    this.cancelSearch = () => {\n      this.props.lesson.searchedLesson = '';\n      this.props.fetchAllLessonsForStudent(+this.props.match.params.id, this.props.lesson.currentPage, this.state.lessonsPerPage);\n      this.forceUpdate();\n    };\n\n    this.lessonStatusChange = (lesson, newStatus) => {\n      lesson.status = newStatus;\n      this.props.updateLesson(lesson);\n      this.props.fetchAllLessonsForStudent(+this.props.match.params.id, this.props.lesson.currentPage, this.state.lessonsPerPage);\n    };\n\n    this.state = {\n      lessons: [],\n      currentPage: 1,\n      lessonsPerPage: 5,\n      searchedLesson: '',\n      sortToggle: false\n    };\n  }\n\n  componentDidMount() {\n    //  const idStudent = +this.props.match.params.id;\n    this.props.fetchAllLessonsForStudent(+this.props.match.params.id, this.props.lesson.currentPage, this.state.lessonsPerPage);\n    setTimeout(() => {\n      this.checkIfLessonInThePast();\n    }, 1000);\n  } //change status of lessons that have their date in the past (24 h back) and were not given into not given\n\n\n  checkIfLessonInThePast() {\n    let yesterday = new Date(new Date().setDate(new Date().getDate() - 1));\n    let length = this.props.lesson.lessons.length;\n    let renderFlag = false;\n\n    for (let i = 0; i < length; ++i) {\n      let temp = new Date(this.props.lesson.lessons[i].date);\n\n      if (this.props.lesson.lessons[i].status === \"To_Give\" && temp < yesterday) {\n        this.lessonStatusChange(this.props.lesson.lessons[i], 3); //flag so that component is not unnecessarily rendered \n\n        if (!renderFlag) renderFlag = true;\n      }\n    }\n\n    if (renderFlag) this.props.fetchAllLessonsForStudent(+this.props.match.params.id, this.props.lesson.currentPage, this.state.lessonsPerPage);\n  }\n\n  render() {\n    const searchedLesson = this.props.lesson.searchedLesson;\n    const totalPages = this.props.lesson.totalPages;\n    const totalElements = this.props.lesson.totalElements;\n    const lesson = this.props.lesson;\n    const lessons = this.props.lessons;\n    const currentPage = this.props.lesson.currentPage;\n    const pageNumCss = {\n      width: \"45px\",\n      border: \"1px solid #F8F8FF\",\n      color: \"#F8F8FF\",\n      textAlign: \"center\",\n      fontWeight: \"bold\"\n    };\n    const searchBoxCss = {\n      width: \"100px\",\n      border: \"1px solid #17A2B8\",\n      color: \"#17A2B8\",\n      textAlign: \"center\",\n      fontWeight: \"bold\"\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 13\n      }\n    });\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    lessons: state.lesson.lessons,\n    student: state.student.student\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchAllLessonsForStudent: (studentId, currentPage, size) => dispatch(fetchAllLessonsForStudent(studentId, currentPage, size)),\n    deleteLesson: lessonId => dispatch(deleteLesson(lessonId)),\n    searchLessons: (searchedLesson, currentPage, sizePage) => dispatch(searchLessons(searchedLesson, currentPage, sizePage)),\n    updateLesson: lesson => dispatch(updateLesson(lesson))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StudentSettle);","map":{"version":3,"sources":["/home/michal/Desktop/projekty/java/SurfSchoolSchedule/SurfSchoolSchedule/surf-school-schedule/src/components/Student/StudentSettle.js"],"names":["React","axios","Link","Card","Table","ButtonGroup","Button","InputGroup","FormControl","FontAwesomeIcon","faUsers","faWallet","faEdit","faTrash","faCalendarPlus","faStepBackward","faFastBackward","faStepForward","faFastForward","faSearch","faTimes","faCheckSquare","SuccessToast","StudentLessonsList","connect","deleteLesson","fetchAllLessonsForStudent","searchLessons","updateLesson","StudentSettle","Component","constructor","props","changePage","event","target","parseInt","value","lesson","searchedLesson","searchLesson","sortDirection","state","sortToggle","match","params","id","lessonsPerPage","setState","name","firstPage","currentPage","prevPage","lastPage","lessonsLength","lessons","length","Math","ceil","totalElements","nextPage","searchChange","forceUpdate","cancelSearch","lessonStatusChange","newStatus","status","componentDidMount","setTimeout","checkIfLessonInThePast","yesterday","Date","setDate","getDate","renderFlag","i","temp","date","render","totalPages","pageNumCss","width","border","color","textAlign","fontWeight","searchBoxCss","mapStateToProps","student","mapDispatchToProps","dispatch","studentId","size","lessonId","sizePage"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { Card, Table, ButtonGroup, Button, InputGroup, FormControl } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUsers, faWallet, faEdit, faTrash, faCalendarPlus, faStepBackward, faFastBackward, faStepForward, faFastForward, faSearch, faTimes, faCheckSquare } from '@fortawesome/free-solid-svg-icons';\nimport SuccessToast from '../SuccessToast';\nimport StudentLessonsList from './StudentLessonsList';\nimport { connect } from 'react-redux';\nimport { deleteLesson, fetchAllLessonsForStudent, searchLessons, updateLesson } from './../../services/index';\n\nimport './../../style/Style.css';\n\n\nclass StudentSettle extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            lessons: [],\n            currentPage: 1,\n            lessonsPerPage: 5,\n            searchedLesson: '',\n            sortToggle: false\n        };\n    }\n\n    componentDidMount() {\n              //  const idStudent = +this.props.match.params.id;\n\n        this.props.fetchAllLessonsForStudent(+this.props.match.params.id , this.props.lesson.currentPage, this.state.lessonsPerPage);\n        setTimeout(() => {\n            this.checkIfLessonInThePast();\n        }, 1000)\n    }\n\n\n    //change status of lessons that have their date in the past (24 h back) and were not given into not given\n    checkIfLessonInThePast() {\n        let yesterday = new Date(new Date().setDate(new Date().getDate() - 1));\n\n        let length = this.props.lesson.lessons.length;\n        let renderFlag = false;\n        for (let i = 0; i < length; ++i) {\n            let temp = new Date(this.props.lesson.lessons[i].date);\n            if (this.props.lesson.lessons[i].status === \"To_Give\" && temp < yesterday) {\n                this.lessonStatusChange(this.props.lesson.lessons[i], 3)\n                //flag so that component is not unnecessarily rendered \n                if (!renderFlag)\n                    renderFlag = true;\n            }\n        }\n        if (renderFlag)\n            this.props.fetchAllLessonsForStudent(+this.props.match.params.id, this.props.lesson.currentPage, this.state.lessonsPerPage);\n    };\n\n    changePage = event => {\n        let target = parseInt(event.target.value);\n        if (this.props.lesson.searchedLesson) {\n            this.searchLesson(target)\n        } else {\n            let sortDirection = this.state.sortToggle ? \"asc\" : \"desc\";\n            this.props.fetchAllLessonsForStudent(+this.props.match.params.id, target, this.state.lessonsPerPage);\n        }\n        this.setState({\n            [event.target.name]: target\n        });\n\n    };\n\n    firstPage = () => {\n        let firstPage = 1;\n\n        if (this.props.lesson.currentPage > firstPage) {\n            this.props.lesson.currentPage = 1;\n            if (this.props.lesson.searchedLesson) {\n                this.searchLesson(this.props.lesson.currentPage)\n            } else {\n                let sortDirection = this.state.sortToggle ? \"asc\" : \"desc\";\n                this.props.fetchAllLessonsForStudent(+this.props.match.params.id, this.props.lesson.currentPage, this.state.lessonsPerPage);\n            }\n        }\n    };\n\n    prevPage = () => {\n        if (this.props.lesson.currentPage > 1) {\n            --this.props.lesson.currentPage;\n            if (this.props.lesson.searchedLesson) {\n                this.searchLesson(this.props.lesson.currentPage)\n            } else {\n                let sortDirection = this.state.sortToggle ? \"asc\" : \"desc\";\n                this.props.fetchAllLessonsForStudent(+this.props.match.params.id, this.props.lesson.currentPage, this.state.lessonsPerPage);\n            }\n        }\n    };\n\n    lastPage = () => {\n        let lessonsLength = this.state.lessons.length;\n        let lastPage = Math.ceil(this.props.totalElements / this.state.lessonsPerPage);\n        if (this.props.lesson.currentPage < lastPage) {\n            this.props.lesson.currentPage = lastPage;\n            if (this.props.lesson.searchedLesson) {\n                this.searchLesson(this.props.lesson.currentPage)\n            } else {\n                this.props.fetchAllLessonsForStudent(+this.props.match.params.id, this.props.lesson.currentPage, this.state.lessonsPerPage);\n            }\n        }\n    };\n\n    nextPage = () => {\n        if (this.state.currentPage < Math.ceil(this.props.totalElements / this.state.lessonsPerPage)) {\n            ++this.props.lesson.currentPage;\n\n            if (this.props.lesson.searchedLesson) {\n                this.searchLesson(this.props.lesson.currentPage)\n            } else {\n                let sortDirection = this.state.sortToggle ? \"asc\" : \"desc\";\n                this.props.fetchAllLessonsForStudent(+this.props.match.params.id, this.props.lesson.currentPage, this.state.lessonsPerPage);\n            }\n        }\n    };\n\n    searchChange = event => {\n        this.props.lesson.searchedLesson = event.target.value;\n        this.forceUpdate();\n    };\n\n    cancelSearch = () => {\n        this.props.lesson.searchedLesson = '';\n        this.props.fetchAllLessonsForStudent(+this.props.match.params.id, this.props.lesson.currentPage, this.state.lessonsPerPage);\n        this.forceUpdate();\n    };\n\n\n    lessonStatusChange = (lesson, newStatus) => {\n        lesson.status = newStatus;\n        this.props.updateLesson(lesson);\n        this.props.fetchAllLessonsForStudent(+this.props.match.params.id, this.props.lesson.currentPage, this.state.lessonsPerPage);\n    }\n\n\n\n    render() {\n        const searchedLesson = this.props.lesson.searchedLesson;\n        const totalPages = this.props.lesson.totalPages;\n        const totalElements = this.props.lesson.totalElements;\n        const lesson = this.props.lesson;\n        const lessons = this.props.lessons;\n        const currentPage = this.props.lesson.currentPage;\n\n        const pageNumCss = {\n            width: \"45px\",\n            border: \"1px solid #F8F8FF\",\n            color: \"#F8F8FF\",\n            textAlign: \"center\",\n            fontWeight: \"bold\"\n        };\n\n        const searchBoxCss = {\n            width: \"100px\",\n            border: \"1px solid #17A2B8\",\n            color: \"#17A2B8\",\n            textAlign: \"center\",\n            fontWeight: \"bold\"\n        };\n\n\n        return (\n            <div>\n\n               \n            </div>\n        );\n    }\n\n}\n\nconst mapStateToProps = state => {\n    return {\n        lessons: state.lesson.lessons,\n        student: state.student.student\n    }\n};\n\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        fetchAllLessonsForStudent: (studentId, currentPage, size) => dispatch(fetchAllLessonsForStudent(studentId, currentPage, size)),\n        deleteLesson: (lessonId) => dispatch(deleteLesson(lessonId)),\n        searchLessons: (searchedLesson, currentPage, sizePage) => dispatch(searchLessons(searchedLesson, currentPage, sizePage)),\n        updateLesson: (lesson) => dispatch(updateLesson(lesson))\n    }\n\n};\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StudentSettle);"]},"metadata":{},"sourceType":"module"}