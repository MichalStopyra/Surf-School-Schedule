{"ast":null,"code":"import { SAVE_STUDENT_REQUEST, FETCH_STUDENT_REQUEST, UPDATE_STUDENT_REQUEST, DELETE_STUDENT_REQUEST, STUDENT_SUCCESS, STUDENT_FAILURE, FETCH_ALL_STUDENTS_REQUEST, FETCH_SEARCH_STUDENTS_REQUEST } from \"./studentTypes\";\nimport axios from 'axios';\nexport const fetchAllStudents = (currentPage, size, sortDir, addSelect) => {\n  --currentPage;\n  return dispatch => {\n    axios.get(\"http://localhost:8080/student-api/list?page=\" + currentPage + \"&size=\" + size + \"&sortBy=paymentStatus&sortDir=\" + sortDir).then(response => {\n      if (addSelect) response.data.content.unshift({\n        id: -1,\n        lastName: 'Select Student',\n        firstName: '',\n        idCardNr: '',\n        telNr: '',\n        paymentStatus: 0,\n        lessonHours: 0,\n        unpaidLessons: 0,\n        moneyOwing: 0,\n        moneyInAdvance: ''\n      });\n      dispatch(fetchAllStudentsRequest(response.data.content, response.data.totalPages, response.data.totalElements, sortDir));\n    }).catch(error => {\n      dispatch(studentFailure(error.message));\n    });\n  };\n};\n\nconst fetchAllStudentsRequest = (students, totalPages, totalElements, sortDirection) => {\n  return {\n    type: FETCH_ALL_STUDENTS_REQUEST,\n    payload: students,\n    totalPages: totalPages,\n    totalElements: totalElements,\n    sortDirection: sortDirection\n  };\n};\n\nexport const saveStudent = student => {\n  return dispatch => {\n    axios.post(\"http://localhost:8080/student-api/list\", student).then(response => {\n      dispatch(saveStudentRequest(student));\n    }).catch(error => {\n      console.log(error);\n      dispatch(studentFailure(error));\n    });\n  };\n};\n\nconst saveStudentRequest = student => {\n  return {\n    type: SAVE_STUDENT_REQUEST,\n    newItem: student\n  };\n};\n\nconst fetchStudentRequest = updatedStudent => {\n  return {\n    type: FETCH_STUDENT_REQUEST,\n    updatedStudent: updatedStudent\n  };\n};\n\nexport const fetchStudent = studentId => {\n  return dispatch => {\n    axios.get(\"http://localhost:8080/student-api/\" + studentId).then(response => {\n      dispatch(fetchStudentRequest(response.data)); //dispatch(studentSuccess(response.data.content));\n    }).catch(error => {\n      dispatch(studentFailure(error));\n    });\n  };\n};\n\nconst updateStudentRequest = student => {\n  return {\n    type: UPDATE_STUDENT_REQUEST,\n    updatedStudent: student\n  };\n};\n\nexport const updateStudent = student => {\n  //console.log(student);\n  // student.NrHoursWeek = 0;\n  // student.NrHoursFull = 0;\n  // student.WeekWage = 0;\n  //console.log(student);\n  return dispatch => {\n    axios.put(\"http://localhost:8080/student-api/\" + student.id, student).then(response => {\n      dispatch(updateStudentRequest(student)); // dispatch(studentSuccess(response.data));\n    }).catch(error => {\n      console.log(error);\n      dispatch(studentFailure(error));\n    });\n  };\n};\n\nconst deleteStudentRequest = studentId => {\n  return {\n    type: DELETE_STUDENT_REQUEST,\n    studentId: studentId\n  };\n};\n\nexport const deleteStudent = studentId => {\n  return dispatch => {\n    axios.delete(\"http://localhost:8080/student-api/list/\" + studentId).then(response => {\n      dispatch(deleteStudentRequest(studentId)); //console.log(response);\n\n      dispatch(studentSuccess(response.data));\n    }).catch(error => {\n      dispatch(studentFailure(error));\n    });\n  };\n};\n\nconst studentSuccess = student => {\n  return {\n    type: STUDENT_SUCCESS,\n    payload: student\n  };\n};\n\nconst studentFailure = error => {\n  return {\n    type: STUDENT_FAILURE,\n    payload: error\n  };\n};\n\nexport const searchStudents = (searchedValue, currentPage, studentsPerPage) => {\n  --currentPage;\n  return dispatch => {\n    axios.get(\"http://localhost:8080/student-api/search/\" + searchedValue + \"?page=\" + currentPage + \"&size=\" + studentsPerPage).then(response => {\n      dispatch(searchStudentsRequest(response.data.content));\n    }).catch(error => {\n      dispatch(studentFailure(error.message));\n    });\n  };\n};\n\nconst searchStudentsRequest = students => {\n  return {\n    type: FETCH_SEARCH_STUDENTS_REQUEST,\n    students: students\n  };\n};","map":{"version":3,"sources":["/home/michal/Desktop/projekty/java/SurfSchoolSchedule/SurfSchoolSchedule/surf-school-schedule/src/services/student/studentActions.js"],"names":["SAVE_STUDENT_REQUEST","FETCH_STUDENT_REQUEST","UPDATE_STUDENT_REQUEST","DELETE_STUDENT_REQUEST","STUDENT_SUCCESS","STUDENT_FAILURE","FETCH_ALL_STUDENTS_REQUEST","FETCH_SEARCH_STUDENTS_REQUEST","axios","fetchAllStudents","currentPage","size","sortDir","addSelect","dispatch","get","then","response","data","content","unshift","id","lastName","firstName","idCardNr","telNr","paymentStatus","lessonHours","unpaidLessons","moneyOwing","moneyInAdvance","fetchAllStudentsRequest","totalPages","totalElements","catch","error","studentFailure","message","students","sortDirection","type","payload","saveStudent","student","post","saveStudentRequest","console","log","newItem","fetchStudentRequest","updatedStudent","fetchStudent","studentId","updateStudentRequest","updateStudent","put","deleteStudentRequest","deleteStudent","delete","studentSuccess","searchStudents","searchedValue","studentsPerPage","searchStudentsRequest"],"mappings":"AAAA,SACIA,oBADJ,EAC0BC,qBAD1B,EACiDC,sBADjD,EAEIC,sBAFJ,EAE4BC,eAF5B,EAE6CC,eAF7C,EAGIC,0BAHJ,EAIIC,6BAJJ,QAKO,gBALP;AAMA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,gBAAgB,GAAG,CAACC,WAAD,EAAcC,IAAd,EAAoBC,OAApB,EAA6BC,SAA7B,KAA2C;AACvE,IAAEH,WAAF;AACA,SAAOI,QAAQ,IAAI;AAEfN,IAAAA,KAAK,CAACO,GAAN,CAAU,iDAAiDL,WAAjD,GAA+D,QAA/D,GAA0EC,IAA1E,GAAiF,gCAAjF,GAAoHC,OAA9H,EACKI,IADL,CACUC,QAAQ,IAAI;AACd,UAAIJ,SAAJ,EACII,QAAQ,CAACC,IAAT,CAAcC,OAAd,CAAsBC,OAAtB,CAA8B;AAC1BC,QAAAA,EAAE,EAAE,CAAC,CADqB;AAClBC,QAAAA,QAAQ,EAAE,gBADQ;AACUC,QAAAA,SAAS,EAAE,EADrB;AACyBC,QAAAA,QAAQ,EAAE,EADnC;AACuCC,QAAAA,KAAK,EAAE,EAD9C;AACkDC,QAAAA,aAAa,EAAE,CADjE;AACoEC,QAAAA,WAAW,EAAE,CADjF;AACoFC,QAAAA,aAAa,EAAE,CADnG;AACsGC,QAAAA,UAAU,EAAE,CADlH;AACqHC,QAAAA,cAAc,EAAE;AADrI,OAA9B;AAIJhB,MAAAA,QAAQ,CAACiB,uBAAuB,CAACd,QAAQ,CAACC,IAAT,CAAcC,OAAf,EAAwBF,QAAQ,CAACC,IAAT,CAAcc,UAAtC,EAAkDf,QAAQ,CAACC,IAAT,CAAce,aAAhE,EAA+ErB,OAA/E,CAAxB,CAAR;AACH,KARL,EASKsB,KATL,CASWC,KAAK,IAAI;AACZrB,MAAAA,QAAQ,CAACsB,cAAc,CAACD,KAAK,CAACE,OAAP,CAAf,CAAR;AACH,KAXL;AAYH,GAdD;AAeH,CAjBM;;AAmBP,MAAMN,uBAAuB,GAAG,CAACO,QAAD,EAAWN,UAAX,EAAuBC,aAAvB,EAAsCM,aAAtC,KAAwD;AACpF,SAAO;AACHC,IAAAA,IAAI,EAAElC,0BADH;AAEHmC,IAAAA,OAAO,EAAEH,QAFN;AAGHN,IAAAA,UAAU,EAAEA,UAHT;AAIHC,IAAAA,aAAa,EAAEA,aAJZ;AAKHM,IAAAA,aAAa,EAAEA;AALZ,GAAP;AAOH,CARD;;AAUA,OAAO,MAAMG,WAAW,GAAGC,OAAO,IAAI;AAClC,SAAO7B,QAAQ,IAAI;AACfN,IAAAA,KAAK,CAACoC,IAAN,CAAW,wCAAX,EAAqDD,OAArD,EACK3B,IADL,CACUC,QAAQ,IAAI;AACdH,MAAAA,QAAQ,CAAC+B,kBAAkB,CAACF,OAAD,CAAnB,CAAR;AACH,KAHL,EAIKT,KAJL,CAIWC,KAAK,IAAI;AACZW,MAAAA,OAAO,CAACC,GAAR,CAAYZ,KAAZ;AACArB,MAAAA,QAAQ,CAACsB,cAAc,CAACD,KAAD,CAAf,CAAR;AACH,KAPL;AAQH,GATD;AAUH,CAXM;;AAaP,MAAMU,kBAAkB,GAAGF,OAAO,IAAI;AAClC,SAAO;AACHH,IAAAA,IAAI,EAAExC,oBADH;AAEHgD,IAAAA,OAAO,EAAEL;AAFN,GAAP;AAIH,CALD;;AAOA,MAAMM,mBAAmB,GAAGC,cAAc,IAAI;AAC1C,SAAO;AACHV,IAAAA,IAAI,EAAEvC,qBADH;AAEHiD,IAAAA,cAAc,EAAEA;AAFb,GAAP;AAIH,CALD;;AAOA,OAAO,MAAMC,YAAY,GAAGC,SAAS,IAAI;AACrC,SAAOtC,QAAQ,IAAI;AACfN,IAAAA,KAAK,CAACO,GAAN,CAAU,uCAAuCqC,SAAjD,EACKpC,IADL,CACUC,QAAQ,IAAI;AACdH,MAAAA,QAAQ,CAACmC,mBAAmB,CAAChC,QAAQ,CAACC,IAAV,CAApB,CAAR,CADc,CAEd;AACH,KAJL,EAKKgB,KALL,CAKWC,KAAK,IAAI;AACZrB,MAAAA,QAAQ,CAACsB,cAAc,CAACD,KAAD,CAAf,CAAR;AACH,KAPL;AAQH,GATD;AAUH,CAXM;;AAaP,MAAMkB,oBAAoB,GAAGV,OAAO,IAAI;AACpC,SAAO;AACHH,IAAAA,IAAI,EAAEtC,sBADH;AAEHgD,IAAAA,cAAc,EAAEP;AAFb,GAAP;AAIH,CALD;;AAOA,OAAO,MAAMW,aAAa,GAAGX,OAAO,IAAI;AACpC;AACA;AACA;AACA;AACA;AAEA,SAAO7B,QAAQ,IAAI;AACfN,IAAAA,KAAK,CAAC+C,GAAN,CAAU,uCAAuCZ,OAAO,CAACtB,EAAzD,EAA6DsB,OAA7D,EACK3B,IADL,CACUC,QAAQ,IAAI;AACdH,MAAAA,QAAQ,CAACuC,oBAAoB,CAACV,OAAD,CAArB,CAAR,CADc,CAGd;AACH,KALL,EAMKT,KANL,CAMWC,KAAK,IAAI;AACZW,MAAAA,OAAO,CAACC,GAAR,CAAYZ,KAAZ;AACArB,MAAAA,QAAQ,CAACsB,cAAc,CAACD,KAAD,CAAf,CAAR;AACH,KATL;AAUH,GAXD;AAYH,CAnBM;;AAqBP,MAAMqB,oBAAoB,GAAGJ,SAAS,IAAI;AACtC,SAAO;AACHZ,IAAAA,IAAI,EAAErC,sBADH;AAEHiD,IAAAA,SAAS,EAAEA;AAFR,GAAP;AAIH,CALD;;AAOA,OAAO,MAAMK,aAAa,GAAGL,SAAS,IAAI;AACtC,SAAOtC,QAAQ,IAAI;AACfN,IAAAA,KAAK,CAACkD,MAAN,CAAa,4CAA4CN,SAAzD,EACKpC,IADL,CACUC,QAAQ,IAAI;AACdH,MAAAA,QAAQ,CAAC0C,oBAAoB,CAACJ,SAAD,CAArB,CAAR,CADc,CAEd;;AACAtC,MAAAA,QAAQ,CAAC6C,cAAc,CAAC1C,QAAQ,CAACC,IAAV,CAAf,CAAR;AACH,KALL,EAMKgB,KANL,CAMWC,KAAK,IAAI;AACZrB,MAAAA,QAAQ,CAACsB,cAAc,CAACD,KAAD,CAAf,CAAR;AACH,KARL;AASH,GAVD;AAWH,CAZM;;AAeP,MAAMwB,cAAc,GAAGhB,OAAO,IAAI;AAC9B,SAAO;AACHH,IAAAA,IAAI,EAAEpC,eADH;AAEHqC,IAAAA,OAAO,EAAEE;AAFN,GAAP;AAIH,CALD;;AAOA,MAAMP,cAAc,GAAGD,KAAK,IAAI;AAC5B,SAAO;AACHK,IAAAA,IAAI,EAAEnC,eADH;AAEHoC,IAAAA,OAAO,EAAEN;AAFN,GAAP;AAIH,CALD;;AAQA,OAAO,MAAMyB,cAAc,GAAG,CAACC,aAAD,EAAgBnD,WAAhB,EAA6BoD,eAA7B,KAAiD;AAC3E,IAAEpD,WAAF;AACA,SAAOI,QAAQ,IAAI;AACfN,IAAAA,KAAK,CAACO,GAAN,CAAU,8CAA8C8C,aAA9C,GAA8D,QAA9D,GAAyEnD,WAAzE,GAAuF,QAAvF,GAAkGoD,eAA5G,EACK9C,IADL,CACUC,QAAQ,IAAI;AACdH,MAAAA,QAAQ,CAACiD,qBAAqB,CAAC9C,QAAQ,CAACC,IAAT,CAAcC,OAAf,CAAtB,CAAR;AACH,KAHL,EAIKe,KAJL,CAIWC,KAAK,IAAI;AACZrB,MAAAA,QAAQ,CAACsB,cAAc,CAACD,KAAK,CAACE,OAAP,CAAf,CAAR;AACH,KANL;AAOH,GARD;AASH,CAXM;;AAcP,MAAM0B,qBAAqB,GAAGzB,QAAQ,IAAI;AACtC,SAAO;AACHE,IAAAA,IAAI,EAAEjC,6BADH;AAEH+B,IAAAA,QAAQ,EAAEA;AAFP,GAAP;AAIH,CALD","sourcesContent":["import {\n    SAVE_STUDENT_REQUEST, FETCH_STUDENT_REQUEST, UPDATE_STUDENT_REQUEST,\n    DELETE_STUDENT_REQUEST, STUDENT_SUCCESS, STUDENT_FAILURE,\n    FETCH_ALL_STUDENTS_REQUEST,\n    FETCH_SEARCH_STUDENTS_REQUEST\n} from \"./studentTypes\";\nimport axios from 'axios';\n\nexport const fetchAllStudents = (currentPage, size, sortDir, addSelect) => {\n    --currentPage;\n    return dispatch => {\n\n        axios.get(\"http://localhost:8080/student-api/list?page=\" + currentPage + \"&size=\" + size + \"&sortBy=paymentStatus&sortDir=\" + sortDir)\n            .then(response => {\n                if (addSelect)\n                    response.data.content.unshift({\n                        id: -1, lastName: 'Select Student', firstName: '', idCardNr: '', telNr: '', paymentStatus: 0, lessonHours: 0, unpaidLessons: 0, moneyOwing: 0, moneyInAdvance: ''\n                    });\n\n                dispatch(fetchAllStudentsRequest(response.data.content, response.data.totalPages, response.data.totalElements, sortDir));\n            })\n            .catch(error => {\n                dispatch(studentFailure(error.message));\n            });\n    };\n};\n\nconst fetchAllStudentsRequest = (students, totalPages, totalElements, sortDirection) => {\n    return {\n        type: FETCH_ALL_STUDENTS_REQUEST,\n        payload: students,\n        totalPages: totalPages,\n        totalElements: totalElements,\n        sortDirection: sortDirection\n    };\n};\n\nexport const saveStudent = student => {\n    return dispatch => {\n        axios.post(\"http://localhost:8080/student-api/list\", student)\n            .then(response => {\n                dispatch(saveStudentRequest(student));\n            })\n            .catch(error => {\n                console.log(error);\n                dispatch(studentFailure(error));\n            });\n    };\n};\n\nconst saveStudentRequest = student => {\n    return {\n        type: SAVE_STUDENT_REQUEST,\n        newItem: student\n    };\n};\n\nconst fetchStudentRequest = updatedStudent => {\n    return {\n        type: FETCH_STUDENT_REQUEST,\n        updatedStudent: updatedStudent\n    };\n};\n\nexport const fetchStudent = studentId => {\n    return dispatch => {\n        axios.get(\"http://localhost:8080/student-api/\" + studentId)\n            .then(response => {\n                dispatch(fetchStudentRequest(response.data));\n                //dispatch(studentSuccess(response.data.content));\n            })\n            .catch(error => {\n                dispatch(studentFailure(error));\n            });\n    };\n};\n\nconst updateStudentRequest = student => {\n    return {\n        type: UPDATE_STUDENT_REQUEST,\n        updatedStudent: student\n    };\n};\n\nexport const updateStudent = student => {\n    //console.log(student);\n    // student.NrHoursWeek = 0;\n    // student.NrHoursFull = 0;\n    // student.WeekWage = 0;\n    //console.log(student);\n\n    return dispatch => {\n        axios.put(\"http://localhost:8080/student-api/\" + student.id, student)\n            .then(response => {\n                dispatch(updateStudentRequest(student));\n\n                // dispatch(studentSuccess(response.data));\n            })\n            .catch(error => {\n                console.log(error);\n                dispatch(studentFailure(error));\n            });\n    };\n};\n\nconst deleteStudentRequest = studentId => {\n    return {\n        type: DELETE_STUDENT_REQUEST,\n        studentId: studentId\n    };\n};\n\nexport const deleteStudent = studentId => {\n    return dispatch => {\n        axios.delete(\"http://localhost:8080/student-api/list/\" + studentId)\n            .then(response => {\n                dispatch(deleteStudentRequest(studentId));\n                //console.log(response);\n                dispatch(studentSuccess(response.data));\n            })\n            .catch(error => {\n                dispatch(studentFailure(error));\n            });\n    };\n};\n\n\nconst studentSuccess = student => {\n    return {\n        type: STUDENT_SUCCESS,\n        payload: student\n    };\n};\n\nconst studentFailure = error => {\n    return {\n        type: STUDENT_FAILURE,\n        payload: error\n    };\n};\n\n\nexport const searchStudents = (searchedValue, currentPage, studentsPerPage) => {\n    --currentPage;\n    return dispatch => {\n        axios.get(\"http://localhost:8080/student-api/search/\" + searchedValue + \"?page=\" + currentPage + \"&size=\" + studentsPerPage)\n            .then(response => {\n                dispatch(searchStudentsRequest(response.data.content));\n            })\n            .catch(error => {\n                dispatch(studentFailure(error.message));\n            });\n    };\n};\n\n\nconst searchStudentsRequest = students => {\n    return {\n        type: FETCH_SEARCH_STUDENTS_REQUEST,\n        students: students\n    };\n};\n\n\n"]},"metadata":{},"sourceType":"module"}