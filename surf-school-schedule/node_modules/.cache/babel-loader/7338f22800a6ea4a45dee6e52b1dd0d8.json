{"ast":null,"code":"var _jsxFileName = \"/home/michal/Desktop/projekty/java/SurfSchoolSchedule/SurfSchoolSchedule/surf-school-schedule/src/components/Student/StudentSettle.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { Card, Table, ButtonGroup, Button, InputGroup, FormControl } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUsers, faWallet, faEdit, faTrash, faCalendarPlus, faStepBackward, faFastBackward, faStepForward, faFastForward, faSearch, faTimes, faCheckSquare } from '@fortawesome/free-solid-svg-icons';\nimport SuccessToast from '../SuccessToast';\nimport { connect } from 'react-redux';\nimport { deleteLesson, fetchAllLessons, searchLessons, updateLesson } from './../../services/index';\nimport './../../style/Style.css';\n\nclass StudentSettle extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.deleteLesson = idLesson => {\n      this.props.deleteLesson(idLesson);\n      setTimeout(() => {\n        if (this.props.lesson != null) {\n          this.setState({\n            \"show\": true\n          });\n          setTimeout(() => this.setState({\n            \"show\": false\n          }), 1000);\n        } else {\n          this.setState({\n            \"show\": false\n          });\n        }\n      }, 1000);\n      this.props.fetchAllLessons(this.props.lesson.currentPage, this.state.lessonsPerPage, this.props.lesson.sortDirection);\n    };\n\n    this.changePage = event => {\n      let target = parseInt(event.target.value);\n\n      if (this.props.lesson.searchedLesson) {\n        this.searchLesson(target);\n      } else {\n        let sortDirection = this.state.sortToggle ? \"asc\" : \"desc\";\n        this.props.fetchAllLessons(target, this.state.lessonsPerPage, this.props.lesson.sortDirection);\n      }\n\n      this.setState({\n        [event.target.name]: target\n      });\n    };\n\n    this.firstPage = () => {\n      let firstPage = 1;\n\n      if (this.props.lesson.currentPage > firstPage) {\n        this.props.lesson.currentPage = 1;\n\n        if (this.props.lesson.searchedLesson) {\n          this.searchLesson(this.props.lesson.currentPage);\n        } else {\n          let sortDirection = this.state.sortToggle ? \"asc\" : \"desc\";\n          this.props.fetchAllLessons(this.props.lesson.currentPage, this.state.lessonsPerPage, this.props.lesson.sortDirection);\n        }\n      }\n    };\n\n    this.prevPage = () => {\n      if (this.props.lesson.currentPage > 1) {\n        --this.props.lesson.currentPage;\n\n        if (this.props.lesson.searchedLesson) {\n          this.searchLesson(this.props.lesson.currentPage);\n        } else {\n          let sortDirection = this.state.sortToggle ? \"asc\" : \"desc\";\n          this.props.fetchAllLessons(this.props.lesson.currentPage, this.state.lessonsPerPage, this.props.lesson.sortDirection);\n        }\n      }\n    };\n\n    this.lastPage = () => {\n      let lessonsLength = this.state.lessons.length;\n      let lastPage = Math.ceil(this.props.totalElements / this.state.lessonsPerPage);\n\n      if (this.props.lesson.currentPage < lastPage) {\n        this.props.lesson.currentPage = lastPage;\n\n        if (this.props.lesson.searchedLesson) {\n          this.searchLesson(this.props.lesson.currentPage);\n        } else {\n          this.props.fetchAllLessons(this.props.lesson.currentPage, this.state.lessonsPerPage, this.props.lesson.sortDirection);\n        }\n      }\n    };\n\n    this.nextPage = () => {\n      if (this.state.currentPage < Math.ceil(this.props.totalElements / this.state.lessonsPerPage)) {\n        ++this.props.lesson.currentPage;\n\n        if (this.props.lesson.searchedLesson) {\n          this.searchLesson(this.props.lesson.currentPage);\n        } else {\n          let sortDirection = this.state.sortToggle ? \"asc\" : \"desc\";\n          this.props.fetchAllLessons(this.props.lesson.currentPage, this.state.lessonsPerPage, this.props.lesson.sortDirection);\n        }\n      }\n    };\n\n    this.searchChange = event => {\n      this.props.lesson.searchedLesson = event.target.value;\n      this.forceUpdate();\n    };\n\n    this.cancelSearch = () => {\n      this.props.lesson.searchedLesson = '';\n      this.props.fetchAllLessons(this.props.lesson.currentPage, this.state.lessonsPerPage, this.props.lesson.sortDirection);\n      this.forceUpdate();\n    };\n\n    this.sortData = () => {\n      if (this.props.lesson.sortDirection === \"asc\") this.props.lesson.sortDirection = \"desc\";else this.props.lesson.sortDirection = \"asc\";\n      this.props.fetchAllLessons(this.props.lesson.currentPage, this.state.lessonsPerPage, this.props.lesson.sortDirection);\n    };\n\n    this.searchLesson = currentPage => {\n      if (this.props.lesson.searchedLesson) this.props.searchLessons(this.props.lesson.searchedLesson, this.props.lesson.currentPage, this.props.lesson.lessonsPerPage);\n    };\n\n    this.lessonStatusChange = (lesson, newStatus) => {\n      lesson.status = newStatus;\n      this.props.updateLesson(lesson);\n      this.props.fetchAllLessons(this.props.lesson.currentPage, this.state.lessonsPerPage, this.props.lesson.sortDirection);\n    };\n\n    this.state = {\n      lessons: [],\n      currentPage: 1,\n      lessonsPerPage: 5,\n      searchedLesson: '',\n      sortToggle: false\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchAllLessons(this.props.lesson.currentPage, this.state.lessonsPerPage, this.props.lesson.sortDirection);\n    setTimeout(() => {\n      this.checkIfLessonInThePast();\n    }, 1000);\n  } //change status of lessons that have their date in the past (24 h back) and were not given into not given\n\n\n  checkIfLessonInThePast() {\n    let yesterday = new Date(new Date().setDate(new Date().getDate() - 1));\n    let length = this.props.lesson.lessons.length;\n    let renderFlag = false;\n\n    for (let i = 0; i < length; ++i) {\n      let temp = new Date(this.props.lesson.lessons[i].date);\n\n      if (this.props.lesson.lessons[i].status === \"To_Give\" && temp < yesterday) {\n        this.lessonStatusChange(this.props.lesson.lessons[i], 3); //flag so that component is not unnecessarily rendered \n\n        if (!renderFlag) renderFlag = true;\n      }\n    }\n\n    if (renderFlag) this.props.fetchAllLessons(this.props.lesson.currentPage, this.state.lessonsPerPage, this.props.lesson.sortDirection);\n  }\n\n  render() {\n    const searchedLesson = this.props.lesson.searchedLesson;\n    const totalPages = this.props.lesson.totalPages;\n    const totalElements = this.props.lesson.totalElements;\n    const lesson = this.props.lesson;\n    const lessons = this.props.lessons;\n    const currentPage = this.props.lesson.currentPage;\n    const sortDirection = this.props.lesson.sortDirection;\n    const pageNumCss = {\n      width: \"45px\",\n      border: \"1px solid #F8F8FF\",\n      color: \"#F8F8FF\",\n      textAlign: \"center\",\n      fontWeight: \"bold\"\n    };\n    const searchBoxCss = {\n      width: \"100px\",\n      border: \"1px solid #17A2B8\",\n      color: \"#17A2B8\",\n      textAlign: \"center\",\n      fontWeight: \"bold\"\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        \"float\": \"right\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Card, {\n      className: \" bg-dark text-white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        \"float\": \"left\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faWallet,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 29\n      }\n    }), \"     Settle Student \\\"name\\\"\"), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        \"float\": \"right\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup, {\n      size: \"sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      style: searchBoxCss,\n      className: \"bg-dark\",\n      name: \"searchedLesson\",\n      value: searchedLesson,\n      placeholder: \"Search\",\n      onChange: this.searchChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(InputGroup.Append, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      size: \"sm\",\n      variant: \"outline-info\",\n      type: \"button\",\n      onClick: this.searchLesson,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faSearch,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      size: \"sm\",\n      variant: \"outline-danger\",\n      type: \"button\",\n      onClick: this.cancelSearch,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faTimes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 41\n      }\n    })))))), /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      variant: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      onClick: this.sortData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 37\n      }\n    }, \" Date \", /*#__PURE__*/React.createElement(\"div\", {\n      className: this.state.sortToggle ? \"arrow arrow-down\" : \"arrow arrow-up\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 71\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 37\n      }\n    }, \"Time\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 37\n      }\n    }, \"How Long [h]\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 37\n      }\n    }, \"Nr of Students\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 37\n      }\n    }, \"Status\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 29\n      }\n    }, lessons.length === 0 ? /*#__PURE__*/React.createElement(\"tr\", {\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      colSpan: \"10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 41\n      }\n    }, \" No Lessons in the Data Base\")) : lessons.map(lesson => /*#__PURE__*/React.createElement(\"tr\", {\n      key: lesson.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 45\n      }\n    }, lesson.date), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 45\n      }\n    }, lesson.time), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 45\n      }\n    }, lesson.howLong), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 45\n      }\n    }, lesson.nrStudents), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 45\n      }\n    }, lesson.status)))))), /*#__PURE__*/React.createElement(Card.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        \"float\": \"left\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"add-lesson\",\n      className: \"nav-link\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(ButtonGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      size: \"lg\",\n      variant: \"outline-light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 37\n      }\n    }, \" \", /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faCalendarPlus,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 80\n      }\n    }), \" \"))), \"Page \", currentPage, \" of \", totalPages === 0 ? 1 : totalPages), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        \"float\": \"right\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup, {\n      size: \"sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup.Prepend, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"button\",\n      variant: \"outline-light\",\n      disabled: currentPage === 1 ? true : false,\n      onClick: this.firstPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faFastBackward,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 41\n      }\n    }), \" First\"), /*#__PURE__*/React.createElement(Button, {\n      type: \"button\",\n      variant: \"outline-light\",\n      disabled: currentPage === 1 ? true : false,\n      onClick: this.prevPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faStepBackward,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 41\n      }\n    }), \" Prev\")), /*#__PURE__*/React.createElement(FormControl, {\n      style: pageNumCss,\n      className: \"page-num bg-dark\",\n      name: \"currentPage\",\n      value: currentPage,\n      onChange: this.changePage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(InputGroup.Append, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"button\",\n      variant: \"outline-light\",\n      disabled: currentPage === totalPages ? true : false,\n      onClick: this.nextPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faStepForward,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 41\n      }\n    }), \" Next\"), /*#__PURE__*/React.createElement(Button, {\n      type: \"button\",\n      variant: \"outline-light\",\n      disabled: currentPage === totalPages ? true : false,\n      onClick: this.lastPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faFastForward,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 41\n      }\n    }), \" Last\")))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    lesson: state.lesson,\n    lessons: state.lesson.lessons,\n    totalPages: state.lesson.totalPages,\n    totalElements: state.lesson.totalElements,\n    currentPage: state.lesson.currentPage,\n    searchedLesson: state.lesson.searchedLesson,\n    sortDirection: state.lesson.sortDirection\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchAllLessons: (currentPage, size, sortDir) => dispatch(fetchAllLessons(currentPage, size, sortDir)),\n    deleteLesson: lessonId => dispatch(deleteLesson(lessonId)),\n    searchLessons: (searchedLesson, currentPage, sizePage) => dispatch(searchLessons(searchedLesson, currentPage, sizePage)),\n    updateLesson: lesson => dispatch(updateLesson(lesson))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StudentSettle);","map":{"version":3,"sources":["/home/michal/Desktop/projekty/java/SurfSchoolSchedule/SurfSchoolSchedule/surf-school-schedule/src/components/Student/StudentSettle.js"],"names":["React","axios","Link","Card","Table","ButtonGroup","Button","InputGroup","FormControl","FontAwesomeIcon","faUsers","faWallet","faEdit","faTrash","faCalendarPlus","faStepBackward","faFastBackward","faStepForward","faFastForward","faSearch","faTimes","faCheckSquare","SuccessToast","connect","deleteLesson","fetchAllLessons","searchLessons","updateLesson","StudentSettle","Component","constructor","props","idLesson","setTimeout","lesson","setState","currentPage","state","lessonsPerPage","sortDirection","changePage","event","target","parseInt","value","searchedLesson","searchLesson","sortToggle","name","firstPage","prevPage","lastPage","lessonsLength","lessons","length","Math","ceil","totalElements","nextPage","searchChange","forceUpdate","cancelSearch","sortData","lessonStatusChange","newStatus","status","componentDidMount","checkIfLessonInThePast","yesterday","Date","setDate","getDate","renderFlag","i","temp","date","render","totalPages","pageNumCss","width","border","color","textAlign","fontWeight","searchBoxCss","map","id","time","howLong","nrStudents","mapStateToProps","mapDispatchToProps","dispatch","size","sortDir","lessonId","sizePage"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { Card, Table, ButtonGroup, Button, InputGroup, FormControl } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUsers, faWallet, faEdit, faTrash, faCalendarPlus, faStepBackward, faFastBackward, faStepForward, faFastForward, faSearch, faTimes, faCheckSquare } from '@fortawesome/free-solid-svg-icons';\nimport SuccessToast from '../SuccessToast';\n\nimport { connect } from 'react-redux';\nimport { deleteLesson, fetchAllLessons, searchLessons, updateLesson } from './../../services/index';\n\nimport './../../style/Style.css';\n\n\nclass StudentSettle extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            lessons: [],\n            currentPage: 1,\n            lessonsPerPage: 5,\n            searchedLesson: '',\n            sortToggle: false\n        };\n    }\n\n    componentDidMount() {\n        this.props.fetchAllLessons(this.props.lesson.currentPage, this.state.lessonsPerPage, this.props.lesson.sortDirection);\n        setTimeout(() => {\n            this.checkIfLessonInThePast();\n        }, 1000)\n    }\n\n\n    //change status of lessons that have their date in the past (24 h back) and were not given into not given\n    checkIfLessonInThePast() {\n        let yesterday = new Date(new Date().setDate(new Date().getDate() - 1));\n\n        let length = this.props.lesson.lessons.length;\n        let renderFlag = false;\n        for (let i = 0; i < length; ++i) {\n            let temp = new Date(this.props.lesson.lessons[i].date);\n            if (this.props.lesson.lessons[i].status === \"To_Give\" && temp < yesterday) {\n                this.lessonStatusChange(this.props.lesson.lessons[i], 3)\n                //flag so that component is not unnecessarily rendered \n                if (!renderFlag)\n                    renderFlag = true;\n            }\n        }\n        if (renderFlag)\n            this.props.fetchAllLessons(this.props.lesson.currentPage, this.state.lessonsPerPage, this.props.lesson.sortDirection);\n    };\n\n    deleteLesson = (idLesson) => {\n\n        this.props.deleteLesson(idLesson);\n\n        setTimeout(() => {\n            if (this.props.lesson != null) {\n                this.setState({ \"show\": true });\n                setTimeout(() => this.setState({ \"show\": false }), 1000);\n\n            } else {\n                this.setState({ \"show\": false });\n            }\n        }, 1000);\n        this.props.fetchAllLessons(this.props.lesson.currentPage, this.state.lessonsPerPage, this.props.lesson.sortDirection);\n\n    };\n\n    changePage = event => {\n        let target = parseInt(event.target.value);\n        if (this.props.lesson.searchedLesson) {\n            this.searchLesson(target)\n        } else {\n            let sortDirection = this.state.sortToggle ? \"asc\" : \"desc\";\n            this.props.fetchAllLessons(target, this.state.lessonsPerPage, this.props.lesson.sortDirection);\n        }\n        this.setState({\n            [event.target.name]: target\n        });\n\n    };\n\n    firstPage = () => {\n        let firstPage = 1;\n\n        if (this.props.lesson.currentPage > firstPage) {\n            this.props.lesson.currentPage = 1;\n            if (this.props.lesson.searchedLesson) {\n                this.searchLesson(this.props.lesson.currentPage)\n            } else {\n                let sortDirection = this.state.sortToggle ? \"asc\" : \"desc\";\n                this.props.fetchAllLessons(this.props.lesson.currentPage, this.state.lessonsPerPage, this.props.lesson.sortDirection);\n            }\n        }\n    };\n\n    prevPage = () => {\n        if (this.props.lesson.currentPage > 1) {\n            --this.props.lesson.currentPage;\n            if (this.props.lesson.searchedLesson) {\n                this.searchLesson(this.props.lesson.currentPage)\n            } else {\n                let sortDirection = this.state.sortToggle ? \"asc\" : \"desc\";\n                this.props.fetchAllLessons(this.props.lesson.currentPage, this.state.lessonsPerPage, this.props.lesson.sortDirection);\n            }\n        }\n    };\n\n    lastPage = () => {\n        let lessonsLength = this.state.lessons.length;\n        let lastPage = Math.ceil(this.props.totalElements / this.state.lessonsPerPage);\n        if (this.props.lesson.currentPage < lastPage) {\n            this.props.lesson.currentPage = lastPage;\n            if (this.props.lesson.searchedLesson) {\n                this.searchLesson(this.props.lesson.currentPage)\n            } else {\n                this.props.fetchAllLessons(this.props.lesson.currentPage, this.state.lessonsPerPage, this.props.lesson.sortDirection);\n            }\n        }\n    };\n\n    nextPage = () => {\n        if (this.state.currentPage < Math.ceil(this.props.totalElements / this.state.lessonsPerPage)) {\n            ++this.props.lesson.currentPage;\n\n            if (this.props.lesson.searchedLesson) {\n                this.searchLesson(this.props.lesson.currentPage)\n            } else {\n                let sortDirection = this.state.sortToggle ? \"asc\" : \"desc\";\n                this.props.fetchAllLessons(this.props.lesson.currentPage, this.state.lessonsPerPage, this.props.lesson.sortDirection);\n            }\n        }\n    };\n\n    searchChange = event => {\n        this.props.lesson.searchedLesson = event.target.value;\n        this.forceUpdate();\n    };\n\n    cancelSearch = () => {\n        this.props.lesson.searchedLesson = '';\n        this.props.fetchAllLessons(this.props.lesson.currentPage, this.state.lessonsPerPage, this.props.lesson.sortDirection);\n        this.forceUpdate();\n    };\n\n    sortData = () => {\n        if (this.props.lesson.sortDirection === \"asc\")\n            this.props.lesson.sortDirection = \"desc\";\n        else\n            this.props.lesson.sortDirection = \"asc\";\n        this.props.fetchAllLessons(this.props.lesson.currentPage, this.state.lessonsPerPage, this.props.lesson.sortDirection);\n\n    }\n\n    searchLesson = (currentPage) => {\n        if (this.props.lesson.searchedLesson)\n            this.props.searchLessons(this.props.lesson.searchedLesson, this.props.lesson.currentPage, this.props.lesson.lessonsPerPage);\n    }\n\n\n    lessonStatusChange = (lesson, newStatus) => {\n        lesson.status = newStatus;\n        this.props.updateLesson(lesson);\n        this.props.fetchAllLessons(this.props.lesson.currentPage, this.state.lessonsPerPage, this.props.lesson.sortDirection);\n    }\n\n\n\n    render() {\n        const searchedLesson = this.props.lesson.searchedLesson;\n        const totalPages = this.props.lesson.totalPages;\n        const totalElements = this.props.lesson.totalElements;\n        const lesson = this.props.lesson;\n        const lessons = this.props.lessons;\n        const currentPage = this.props.lesson.currentPage;\n        const sortDirection = this.props.lesson.sortDirection;\n\n        const pageNumCss = {\n            width: \"45px\",\n            border: \"1px solid #F8F8FF\",\n            color: \"#F8F8FF\",\n            textAlign: \"center\",\n            fontWeight: \"bold\"\n        };\n\n        const searchBoxCss = {\n            width: \"100px\",\n            border: \"1px solid #17A2B8\",\n            color: \"#17A2B8\",\n            textAlign: \"center\",\n            fontWeight: \"bold\"\n        };\n\n\n        return (\n            <div>\n                <div style={{ \"float\": \"right\" }}>\n\n                </div>\n                <Card className={\" bg-dark text-white\"}>\n                    <Card.Header>\n                        <div style={{ \"float\": \"left\" }}>\n                            <FontAwesomeIcon icon={faWallet} />     Settle Student \"name\"\n                        </div>\n\n                        <div style={{ \"float\": \"right\" }}>\n                            <InputGroup size=\"sm\">\n                                <FormControl style={searchBoxCss} className={\"bg-dark\"} name=\"searchedLesson\" value={searchedLesson} placeholder=\"Search\"\n                                    onChange={this.searchChange} />\n                                <InputGroup.Append>\n                                    <Button size=\"sm\" variant=\"outline-info\" type=\"button\" onClick={this.searchLesson}>\n                                        <FontAwesomeIcon icon={faSearch} />\n                                    </Button>\n                                    <Button size=\"sm\" variant=\"outline-danger\" type=\"button\" onClick={this.cancelSearch}>\n                                        <FontAwesomeIcon icon={faTimes} />\n                                    </Button>\n                                </InputGroup.Append>\n                            </InputGroup>\n                        </div>\n\n                    </Card.Header>\n                    <Card.Body>\n                        <Table striped bordered hover variant=\"dark\">\n                            <thead>\n                                <tr>\n                                    <th onClick={this.sortData}> Date <div className={this.state.sortToggle ? \"arrow arrow-down\" : \"arrow arrow-up\"} /> </th>\n                                    <th>Time</th>\n                                    <th>How Long [h]</th>\n                                    <th>Nr of Students</th>\n                                    <th>Status</th>\n                                </tr>\n                            </thead>\n\n\n                            <tbody>\n                                {lessons.length === 0 ?\n                                    <tr align=\"center\">\n                                        <td colSpan=\"10\"> No Lessons in the Data Base</td>\n                                    </tr> :\n\n                                    lessons.map(lesson => (\n                                        <tr key={lesson.id}>\n                                            <td>{lesson.date}</td>\n                                            <td>{lesson.time}</td>\n                                            <td>{lesson.howLong}</td>\n                                            <td>{lesson.nrStudents}</td>\n                                            <td>{lesson.status}</td>\n\n                                        </tr>\n                                    ))\n                                }\n                            </tbody>\n                        </Table>\n                    </Card.Body>\n                    <Card.Footer>\n                        <div style={{ \"float\": \"left\" }}>\n                            <Link to={\"add-lesson\"} className=\"nav-link\">\n                                <ButtonGroup>\n                                    <Button size=\"lg\" variant=\"outline-light\"> <FontAwesomeIcon icon={faCalendarPlus} /> </Button>\n                                </ButtonGroup>\n                            </Link>\n                            Page {currentPage} of {totalPages === 0 ? 1 : totalPages}\n                        </div>\n\n                        <div style={{ \"float\": \"right\" }}>\n                            <InputGroup size=\"sm\">\n                                <InputGroup.Prepend>\n                                    <Button type=\"button\" variant=\"outline-light\" disabled={currentPage === 1 ? true : false}\n                                        onClick={this.firstPage}>\n                                        <FontAwesomeIcon icon={faFastBackward} /> First\n                                            </Button>\n                                    <Button type=\"button\" variant=\"outline-light\" disabled={currentPage === 1 ? true : false}\n                                        onClick={this.prevPage}>\n                                        <FontAwesomeIcon icon={faStepBackward} /> Prev\n                                            </Button>\n                                </InputGroup.Prepend>\n                                <FormControl style={pageNumCss} className={\"page-num bg-dark\"} name=\"currentPage\" value={currentPage}\n                                    onChange={this.changePage} />\n                                <InputGroup.Append>\n                                    <Button type=\"button\" variant=\"outline-light\" disabled={currentPage === totalPages ? true : false}\n                                        onClick={this.nextPage}>\n                                        <FontAwesomeIcon icon={faStepForward} /> Next\n                                            </Button>\n                                    <Button type=\"button\" variant=\"outline-light\" disabled={currentPage === totalPages ? true : false}\n                                        onClick={this.lastPage}>\n                                        <FontAwesomeIcon icon={faFastForward} /> Last\n                                            </Button>\n                                </InputGroup.Append>\n                            </InputGroup>\n                        </div>\n\n                    </Card.Footer>\n                </Card>\n            </div>\n        );\n    }\n\n}\n\nconst mapStateToProps = state => {\n    return {\n        lesson: state.lesson,\n        lessons: state.lesson.lessons,\n        totalPages: state.lesson.totalPages,\n        totalElements: state.lesson.totalElements,\n        currentPage: state.lesson.currentPage,\n        searchedLesson: state.lesson.searchedLesson,\n        sortDirection: state.lesson.sortDirection\n    }\n};\n\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        fetchAllLessons: (currentPage, size, sortDir) => dispatch(fetchAllLessons(currentPage, size, sortDir)),\n        deleteLesson: (lessonId) => dispatch(deleteLesson(lessonId)),\n        searchLessons: (searchedLesson, currentPage, sizePage) => dispatch(searchLessons(searchedLesson, currentPage, sizePage)),\n        updateLesson: (lesson) => dispatch(updateLesson(lesson))\n    }\n\n};\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StudentSettle);"]},"metadata":{},"sourceType":"module"}