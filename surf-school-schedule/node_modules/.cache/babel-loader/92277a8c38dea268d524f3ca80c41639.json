{"ast":null,"code":"var _jsxFileName = \"/home/michal/Desktop/projekty/java/SurfSchoolSchedule/SurfSchoolSchedule/surf-school-schedule/src/components/Lesson/Schedule.js\";\nimport { faArrowLeft, faArrowRight, faCalendarAlt, faCalendarPlus } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport axios from 'axios';\nimport React from 'react';\nimport { Button, ButtonGroup, Card, Table } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { deleteLesson, updateLesson } from '../../services/index';\nimport './../../style/Style.css';\nimport InstructorDay from './InstructorDay';\nimport LessonForm from './LessonForm';\n\nclass Schedule extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.changePage = event => {\n      let target = parseInt(event.target.value);\n\n      if (this.state.searchedLesson) {\n        this.searchLesson(target);\n      } else {\n        this.findAllLessons(target);\n      }\n\n      this.setState({\n        [event.target.name]: target\n      });\n    };\n\n    this.prevPage = () => {\n      let prevPage = this.state.currentPage - 1;\n\n      if (this.state.currentPage > 1) {\n        if (this.state.searchedLesson) {\n          this.searchLesson(prevPage);\n        } else {\n          this.findAllLessons(prevPage);\n        }\n      }\n    };\n\n    this.nextPage = () => {\n      let nextPage = this.state.currentPage + 1;\n\n      if (this.state.currentPage < Math.ceil(this.state.totalElements / this.state.lessonsPerPage)) {\n        if (this.state.searchedLesson) {\n          this.searchLesson(nextPage);\n        } else {\n          this.findAllLessons(nextPage);\n        }\n      }\n    };\n\n    this.lessonStatusChange = (lesson, newStatus) => {\n      if (!lesson) return;\n      lesson.status = newStatus;\n      this.props.updateLesson(lesson);\n    };\n\n    this.deleteLesson = (lesson, index) => {\n      if (!lesson) return;\n      let i = this.state.instructorDay[index].lessonsThisDay.indexOf(lesson);\n      console.log(this.props);\n      this.props.deleteLesson(lesson.id);\n      console.log(this.props);\n      let tempTab = this.state.instructorDay;\n\n      for (let j = 0; j < lesson.howLong; ++j) tempTab[index].lessonsThisDay[i + j] = null;\n\n      this.setState({\n        instructorDay: tempTab\n      });\n    };\n\n    this.changeShowForm = (instructor, instrIndex, lessonIndex, newLessonWasAdded, lesson, isUpdated) => {\n      if (this.state.showForm) {\n        this.setState({\n          \"showForm\": !this.state.showForm,\n          editedLesson: null\n        }); //if time of the lesson was changed - update schedule fields\n\n        if (isUpdated) {\n          let tempTab = this.state.instructorDay;\n\n          for (let j = 0; j < 3; ++j) {\n            if (lesson.howLong > j) tempTab[instrIndex].lessonsThisDay[lessonIndex + j] = lesson;else tempTab[instrIndex].lessonsThisDay[lessonIndex + j] = null;\n          }\n\n          this.setState({\n            instructorDay: tempTab\n          });\n          return;\n        }\n\n        if (newLessonWasAdded) {\n          //added lesson doesn't have id so i need to get it from data base\n          axios.get(\"http://localhost:8080/lesson-api/\" + lesson.instructor.id + \"/\" + lesson.date + \"?page=0&size=1&sortBy=id&sortDir=desc\").then(response => {\n            lesson.id = response.data.content[0].id;\n          }).catch(error => {\n            console.error(\"error: \" + error);\n          });\n          let tempTab = this.state.instructorDay;\n\n          for (let j = 0; j < lesson.howLong; ++j) tempTab[instrIndex].lessonsThisDay[lessonIndex + j] = lesson;\n\n          this.setState({\n            instructorDay: tempTab\n          });\n        }\n\n        return;\n      } else {\n        this.setState({\n          \"showForm\": !this.state.showForm,\n          \"instructor\": instructor,\n          \"lessonHour\": lessonIndex + 9 + \":00\",\n          \"lessonIndex\": lessonIndex,\n          \"instrIndex\": instrIndex\n        });\n      }\n    };\n\n    this.editLesson = (editedLesson, instrIndex, lessonIndex) => {\n      this.setState({\n        \"editedLesson\": editedLesson,\n        \"showForm\": true,\n        \"instructor\": editedLesson.instructor,\n        \"lessonHour\": editedLesson.time,\n        \"lessonIndex\": lessonIndex,\n        \"instrIndex\": instrIndex\n      });\n    };\n\n    this.changeDate = addedDays => {\n      let targetDay = new Date(this.state.date);\n      targetDay.setDate(targetDay.getDate() + addedDays);\n      this.setState({\n        date: targetDay.getMonth() + 1 + '-' + targetDay.getDate() + '-' + targetDay.getFullYear(),\n        dayName: targetDay.toLocaleString('en-us', {\n          weekday: 'long'\n        })\n      });\n      setTimeout(() => this.findAllInstructorsAndSchedules(this.state.date), 10);\n    };\n\n    let today = new Date();\n    this.state = {\n      date: today.getMonth() + 1 + '-' + today.getDate() + '-' + today.getFullYear(),\n      dayName: today.toLocaleString('en-us', {\n        weekday: 'long'\n      }),\n      instructor: '',\n      lessonHour: '',\n      instructors: [],\n      lessons: [],\n      instructorDay: [],\n      currentPage: 1,\n      lessonsPerPage: 5,\n      searchedLesson: '',\n      sortToggle: false,\n      showForm: false,\n      lessonIndex: '',\n      instrIndex: '',\n      editedLesson: ''\n    };\n  }\n\n  componentDidMount() {\n    this.findAllInstructorsAndSchedules(this.state.date);\n  }\n\n  findAllInstructorsAndSchedules(date) {\n    var instructors = [];\n    axios.get(\"http://localhost:8080/instructor-api/list?page=0&size=999999999&sortBy=firstName&sortDir=desc\").then(response => response.data).then(data => {\n      instructors = data.content;\n      this.findAllInstructorDay(instructors, date);\n    });\n  }\n\n  findAllInstructorDay(instructors, date) {\n    let allInstrDayTable = [];\n    let tabLength = instructors.length;\n\n    for (let i = 0; i < tabLength; ++i) {\n      let instructor = instructors[i];\n      axios.get(\"http://localhost:8080/lesson-api/\" + instructor.id + \"/\" + date).then(response => {\n        if (response.data != null) {\n          let tempInstrDay = {\n            instructor: '',\n            lessonsThisDay: []\n          };\n          tempInstrDay.instructor = instructor; //save when the lessons start \n\n          let tab = response.data.content; //save lessons at specific indexes in array - representing gour of the lesson\n\n          tab.forEach(function (element) {\n            //get hour and create index\n            let time = element.time;\n            time = time.split(\":\")[0]; //first lesson starts at 9 so minus 9 to get index in the array\n\n            let index = time - 9; //if lesson is 1 hour long -add it to array once; if longer than 1 hour - duplicate it in array\n\n            for (let j = 0; j < element.howLong; ++j) {\n              tempInstrDay.lessonsThisDay[index + j] = element;\n            }\n          });\n          allInstrDayTable[i] = tempInstrDay;\n        }\n      });\n    }\n\n    this.setState({\n      instructorDay: allInstrDayTable\n    });\n    setTimeout(() => this.forceUpdate(), 500);\n  } //change status of lessons that have their date in the past and were not given into not given\n\n\n  checkIfLessonInThePast() {\n    let today = new Date();\n\n    for (let i = 0; i < this.state.lessons.length; ++i) {\n      let temp = new Date(this.state.lessons[i].date);\n\n      if (this.state.lessons[i].status === \"To_Give\" && temp < today) {\n        this.lessonStatusChange(this.state.lessons[i], 3);\n      }\n    }\n  }\n\n  render() {\n    const {\n      instructorDay\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(LessonForm, {\n      instructor: this.state.instructor,\n      lessonHour: this.state.lessonHour,\n      date: this.state.date,\n      instrIndex: this.state.instrIndex,\n      lessonIndex: this.state.lessonIndex,\n      editedLesson: this.state.editedLesson,\n      showForm: this.state.showForm,\n      handleClose: (instructor, instrIndex, lessonIndex, refresh, lesson, isUdpated) => this.changeShowForm(instructor, instrIndex, lessonIndex, refresh, lesson, isUdpated),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Card, {\n      className: \"border border-dark bg-dark text-white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"container\",\n      style: {\n        \"clear\": \"both\",\n        \"display\": \"flex\",\n        \"justifyContent\": \"space-between\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        \"textAlign\": \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"outline-light\",\n      onClick: () => this.changeDate(-1),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 25\n      }\n    }, \" \", /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faArrowLeft,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 93\n      }\n    }), \" \"), '  ', /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faCalendarAlt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 29\n      }\n    }), \"   \", this.state.dayName, \" \", this.state.date, ' ', /*#__PURE__*/React.createElement(Button, {\n      variant: \"outline-light\",\n      onClick: () => this.changeDate(1),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 29\n      }\n    }, \" \", /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faArrowRight,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 97\n      }\n    }), \" \")), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        \"textAlign\": \"right\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"add-lesson\",\n      className: \"nav-link\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(ButtonGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      size: \"lg\",\n      variant: \"outline-light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 37\n      }\n    }, \" \", /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faCalendarPlus,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 80\n      }\n    }), \" \")))))), /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      variant: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 37\n      }\n    }, \"Instructor\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 37\n      }\n    }, \"9:00\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 37\n      }\n    }, \"10:00\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 37\n      }\n    }, \"11:00\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 37\n      }\n    }, \"12:00\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 37\n      }\n    }, \"13:00\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 37\n      }\n    }, \"14:00\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 37\n      }\n    }, \"15:00\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 37\n      }\n    }, \"16:00\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 37\n      }\n    }, \"17:00\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 37\n      }\n    }, \"18:00\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 37\n      }\n    }, \"19:00\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 37\n      }\n    }, \"20:00\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(InstructorDay, {\n      instructorDay: instructorDay,\n      lessonStatusChange: (lesson, newStatus) => this.lessonStatusChange(lesson, newStatus),\n      deleteLesson: (lesson, index) => this.deleteLesson(lesson, index),\n      changeShowForm: (instructor, instrIndex, lessonIndex, refresh, lesson, updated) => this.changeShowForm(instructor, instrIndex, lessonIndex, refresh, lesson, updated),\n      editLesson: (editedLesson, instrIndex, lessonIndex) => this.editLesson(editedLesson, instrIndex, lessonIndex),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 33\n      }\n    })))), /*#__PURE__*/React.createElement(Card.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    lesson: state.lesson\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateLesson: lesson => dispatch(updateLesson(lesson)),\n    deleteLesson: lesson => dispatch(deleteLesson(lesson))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Schedule);","map":{"version":3,"sources":["/home/michal/Desktop/projekty/java/SurfSchoolSchedule/SurfSchoolSchedule/surf-school-schedule/src/components/Lesson/Schedule.js"],"names":["faArrowLeft","faArrowRight","faCalendarAlt","faCalendarPlus","FontAwesomeIcon","axios","React","Button","ButtonGroup","Card","Table","connect","Link","deleteLesson","updateLesson","InstructorDay","LessonForm","Schedule","Component","constructor","props","changePage","event","target","parseInt","value","state","searchedLesson","searchLesson","findAllLessons","setState","name","prevPage","currentPage","nextPage","Math","ceil","totalElements","lessonsPerPage","lessonStatusChange","lesson","newStatus","status","index","i","instructorDay","lessonsThisDay","indexOf","console","log","id","tempTab","j","howLong","changeShowForm","instructor","instrIndex","lessonIndex","newLessonWasAdded","isUpdated","showForm","editedLesson","get","date","then","response","data","content","catch","error","editLesson","time","changeDate","addedDays","targetDay","Date","setDate","getDate","getMonth","getFullYear","dayName","toLocaleString","weekday","setTimeout","findAllInstructorsAndSchedules","today","lessonHour","instructors","lessons","sortToggle","componentDidMount","findAllInstructorDay","allInstrDayTable","tabLength","length","tempInstrDay","tab","forEach","element","split","forceUpdate","checkIfLessonInThePast","temp","render","refresh","isUdpated","updated","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import { faArrowLeft, faArrowRight, faCalendarAlt, faCalendarPlus } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport axios from 'axios';\nimport React from 'react';\nimport { Button, ButtonGroup, Card, Table } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { deleteLesson, updateLesson } from '../../services/index';\nimport './../../style/Style.css';\nimport InstructorDay from './InstructorDay';\nimport LessonForm from './LessonForm';\n\n\n\n\n\n\n\nclass Schedule extends React.Component {\n\n    constructor(props) {\n        super(props);\n        let today = new Date();\n        this.state = {\n            date: today.getMonth() + 1 + '-' + today.getDate() + '-' + today.getFullYear(),\n            dayName: today.toLocaleString('en-us', {weekday: 'long'}),\n            instructor: '',\n            lessonHour: '',\n            instructors: [],\n            lessons: [],\n            instructorDay: [],\n            currentPage: 1,\n            lessonsPerPage: 5,\n            searchedLesson: '',\n            sortToggle: false,\n            showForm: false,\n            lessonIndex: '',\n            instrIndex: '',\n            editedLesson: ''\n        };\n\n    }\n\n    componentDidMount() {\n        this.findAllInstructorsAndSchedules(this.state.date);\n    }\n\n\n    findAllInstructorsAndSchedules(date) {\n        var instructors = [];\n\n        axios.get(\"http://localhost:8080/instructor-api/list?page=0&size=999999999&sortBy=firstName&sortDir=desc\")\n            .then(response => response.data)\n            .then((data) => {\n                instructors = data.content;\n                this.findAllInstructorDay(instructors, date);\n            });\n\n    }\n\n    findAllInstructorDay(instructors, date) {\n        let allInstrDayTable = [];\n        let tabLength = instructors.length;\n        for (let i = 0; i < tabLength; ++i) {\n            let instructor = instructors[i]\n            axios.get(\"http://localhost:8080/lesson-api/\" + instructor.id + \"/\" + date)\n                .then(response => {\n                    if (response.data != null) {\n                        let tempInstrDay = {\n                            instructor: '',\n                            lessonsThisDay: []\n                        };\n\n                        tempInstrDay.instructor = instructor;\n                        //save when the lessons start \n                        let tab = response.data.content;\n                        //save lessons at specific indexes in array - representing gour of the lesson\n\n                        tab.forEach(function (element) {\n                            //get hour and create index\n                            let time = element.time;\n                            time = time.split(\":\")[0];\n                            //first lesson starts at 9 so minus 9 to get index in the array\n                            let index = time - 9;\n\n                            //if lesson is 1 hour long -add it to array once; if longer than 1 hour - duplicate it in array\n                            for (let j = 0; j < element.howLong; ++j) {\n                                tempInstrDay.lessonsThisDay[index + j] = element;\n                            }\n                        });\n                        allInstrDayTable[i] = tempInstrDay;\n                    }\n                })\n        }\n        this.setState({\n            instructorDay: allInstrDayTable\n        });\n        setTimeout(() => this.forceUpdate(), 500);\n    }\n\n    //change status of lessons that have their date in the past and were not given into not given\n    checkIfLessonInThePast() {\n        let today = new Date();\n\n        for (let i = 0; i < this.state.lessons.length; ++i) {\n            let temp = new Date(this.state.lessons[i].date);\n            if (this.state.lessons[i].status === \"To_Give\" && temp < today) {\n                this.lessonStatusChange(this.state.lessons[i], 3)\n            }\n        }\n    };\n\n\n    changePage = event => {\n        let target = parseInt(event.target.value);\n        if (this.state.searchedLesson) {\n            this.searchLesson(target)\n        } else {\n            this.findAllLessons(target);\n        }\n        this.setState({\n            [event.target.name]: target\n        });\n\n    };\n\n    prevPage = () => {\n        let prevPage = this.state.currentPage - 1;\n        if (this.state.currentPage > 1) {\n            if (this.state.searchedLesson) {\n                this.searchLesson(prevPage)\n            } else {\n                this.findAllLessons(prevPage);\n            }\n        }\n    };\n\n    nextPage = () => {\n        let nextPage = this.state.currentPage + 1;\n        if (this.state.currentPage < Math.ceil(this.state.totalElements / this.state.lessonsPerPage)) {\n            if (this.state.searchedLesson) {\n                this.searchLesson(nextPage)\n            } else {\n                this.findAllLessons(nextPage);\n            }\n        }\n    };\n\n    lessonStatusChange = (lesson, newStatus) => {\n        if (!lesson)\n            return;\n        lesson.status = newStatus;\n\n        this.props.updateLesson(lesson);\n    };\n\n    deleteLesson = (lesson, index) => {\n        if (!lesson)\n            return;\n        let i = this.state.instructorDay[index].lessonsThisDay.indexOf(lesson);\n        console.log(this.props);\n        this.props.deleteLesson(lesson.id);\n\n        console.log(this.props);\n\n        let tempTab = this.state.instructorDay;\n        for (let j = 0; j < lesson.howLong; ++j)\n            tempTab[index].lessonsThisDay[i + j] = null;\n        this.setState({\n            instructorDay: tempTab\n        });\n\n    };\n\n\n    //if close form => change showForm to hide it and update lesson list\n    //if open form => get instructor and hour to pre-fill the form\n    changeShowForm = (instructor, instrIndex, lessonIndex, newLessonWasAdded, lesson, isUpdated) => {\n        if (this.state.showForm) {\n            this.setState({\n                \"showForm\": !this.state.showForm,\n                editedLesson: null\n\n            });\n            //if time of the lesson was changed - update schedule fields\n            if (isUpdated) {\n                let tempTab = this.state.instructorDay;\n                for (let j = 0; j < 3; ++j) {\n                    if (lesson.howLong > j)\n                        tempTab[instrIndex].lessonsThisDay[lessonIndex + j] = lesson;\n                    else\n                        tempTab[instrIndex].lessonsThisDay[lessonIndex + j] = null;\n                }\n                this.setState({\n                    instructorDay: tempTab\n                });\n\n                return;\n            }\n            if (newLessonWasAdded) {\n                //added lesson doesn't have id so i need to get it from data base\n                axios.get(\"http://localhost:8080/lesson-api/\" + lesson.instructor.id + \"/\" + lesson.date + \"?page=0&size=1&sortBy=id&sortDir=desc\")\n                    .then(response => {\n                        lesson.id = response.data.content[0].id;\n                    })\n                    .catch(error => {\n                        console.error(\"error: \" + error)\n                    });\n\n                let tempTab = this.state.instructorDay;\n                for (let j = 0; j < lesson.howLong; ++j)\n                    tempTab[instrIndex].lessonsThisDay[lessonIndex + j] = lesson;\n                this.setState({\n                    instructorDay: tempTab\n                });\n            }\n            return;\n        }\n        else {\n            this.setState({\n                \"showForm\": !this.state.showForm,\n                \"instructor\": instructor,\n                \"lessonHour\": lessonIndex + 9 + \":00\",\n                \"lessonIndex\": lessonIndex,\n                \"instrIndex\": instrIndex\n            });\n        }\n    }\n\n\n    editLesson = (editedLesson, instrIndex, lessonIndex) => {\n        this.setState({\n            \"editedLesson\": editedLesson,\n            \"showForm\": true,\n            \"instructor\": editedLesson.instructor,\n            \"lessonHour\": editedLesson.time,\n            \"lessonIndex\": lessonIndex,\n            \"instrIndex\": instrIndex\n        });\n\n\n    }\n\n    changeDate = (addedDays) => { \n        let targetDay = new Date(this.state.date);\n        targetDay.setDate(targetDay.getDate() + addedDays);\n\n        this.setState({\n            date: targetDay.getMonth() + 1 + '-' + targetDay.getDate() + '-' + targetDay.getFullYear(),\n            dayName: targetDay.toLocaleString('en-us', {weekday: 'long'})\n        });\n        setTimeout(() =>         this.findAllInstructorsAndSchedules(this.state.date)\n        , 10);\n\n    }\n\n    render() {\n        const { instructorDay } = this.state;\n        return (\n            <div>\n                <LessonForm instructor={this.state.instructor} lessonHour={this.state.lessonHour} date={this.state.date}\n                    instrIndex={this.state.instrIndex} lessonIndex={this.state.lessonIndex}\n                    editedLesson={this.state.editedLesson}\n                    showForm={this.state.showForm} handleClose={(instructor, instrIndex, lessonIndex, refresh, lesson, isUdpated) =>\n                        this.changeShowForm(instructor, instrIndex, lessonIndex, refresh, lesson, isUdpated)} ></LessonForm>\n                <Card className={\"border border-dark bg-dark text-white\"}>\n                    <Card.Header>\n                        <div id=\"container\" style={{\"clear\":\"both\", \"display\": \"flex\", \"justifyContent\":\"space-between\"}}>\n                        <div style={{ \"textAlign\": \"center\"}} >\n                        <Button variant=\"outline-light\" onClick={()=>this.changeDate(-1)} > <FontAwesomeIcon icon={faArrowLeft} /> </Button>{'  '}\n                            <FontAwesomeIcon icon={faCalendarAlt} />   {this.state.dayName} {this.state.date}{' '}\n                            <Button variant=\"outline-light\" onClick={()=>this.changeDate(1)}  > <FontAwesomeIcon icon={faArrowRight} /> </Button>\n                        </div>\n                        <div style={{ \"textAlign\": \"right\"}}>\n                        <Link to={\"add-lesson\"} className=\"nav-link\">\n                                <ButtonGroup>\n                                    <Button size=\"lg\" variant=\"outline-light\"> <FontAwesomeIcon icon={faCalendarPlus} /> </Button>\n                                </ButtonGroup>\n                            </Link>\n                        </div>\n                        </div>\n\n                    </Card.Header>\n                    <Card.Body>\n                        <Table striped bordered hover variant=\"dark\">\n                            <thead>\n                                <tr>\n                                    <th>Instructor</th>\n                                    <th>9:00</th>\n                                    <th>10:00</th>\n                                    <th>11:00</th>\n                                    <th>12:00</th>\n                                    <th>13:00</th>\n                                    <th>14:00</th>\n                                    <th>15:00</th>\n                                    <th>16:00</th>\n                                    <th>17:00</th>\n                                    <th>18:00</th>\n                                    <th>19:00</th>\n                                    <th>20:00</th>\n\n                                </tr>\n                            </thead>\n\n                            <tbody>\n\n                                <InstructorDay instructorDay={instructorDay}\n                                    lessonStatusChange={(lesson, newStatus) => this.lessonStatusChange(lesson, newStatus)}\n                                    deleteLesson={(lesson, index) => this.deleteLesson(lesson, index)}\n                                    changeShowForm={(instructor, instrIndex, lessonIndex, refresh, lesson, updated) => this.changeShowForm(instructor, instrIndex, lessonIndex, refresh, lesson, updated)}\n                                    editLesson={(editedLesson, instrIndex, lessonIndex) => this.editLesson(editedLesson, instrIndex, lessonIndex)} />\n                            </tbody>\n\n\n                        </Table>\n                    </Card.Body>\n                    <Card.Footer>\n\n\n\n                    </Card.Footer>\n                </Card>\n            </div>\n\n        );\n    }\n\n\n}\n\nconst mapStateToProps = state => {\n    return {\n        lesson: state.lesson,\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        updateLesson: (lesson) => dispatch(updateLesson(lesson)),\n        deleteLesson: (lesson) => dispatch(deleteLesson(lesson))\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Schedule);"]},"metadata":{},"sourceType":"module"}