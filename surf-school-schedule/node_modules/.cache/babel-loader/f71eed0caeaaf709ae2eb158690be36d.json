{"ast":null,"code":"import _classCallCheck from\"/home/michal/Desktop/projekty/java/SurfSchoolSchedule/SurfSchoolSchedule/surf-school-schedule/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/michal/Desktop/projekty/java/SurfSchoolSchedule/SurfSchoolSchedule/surf-school-schedule/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/michal/Desktop/projekty/java/SurfSchoolSchedule/SurfSchoolSchedule/surf-school-schedule/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/michal/Desktop/projekty/java/SurfSchoolSchedule/SurfSchoolSchedule/surf-school-schedule/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import axios from'axios';import{Link}from'react-router-dom';import{Alert,Card,Table,ButtonGroup,Button,InputGroup,FormControl}from'react-bootstrap';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faMoneyCheckAlt,faEdit,faTrash,faPlusSquare}from'@fortawesome/free-solid-svg-icons';import SuccessToast from'../SuccessToast';import'./../../style/Style.css';import{connect}from'react-redux';import{deletePriceTable as _deletePriceTable,fetchAllPriceTables as _fetchAllPriceTables}from'./../../services/index';var PriceTableList=/*#__PURE__*/function(_React$Component){_inherits(PriceTableList,_React$Component);var _super=_createSuper(PriceTableList);function PriceTableList(props){var _this;_classCallCheck(this,PriceTableList);_this=_super.call(this,props);_this.deletePriceTable=function(idPriceTable){_this.props.deletePriceTable(idPriceTable);setTimeout(function(){if(_this.props.priceTable!=null){_this.setState({\"show\":true});setTimeout(function(){return _this.setState({\"show\":false});},1000);}else{_this.setState({\"show\":false});}},1000);_this.props.fetchAllPriceTables();};_this.state={priceTables:[]//,\n// currentPage: 1,\n//   priceTablesPerPage: 5,\n//  searchedPriceTable: '',\n//sortToggle: true\n};return _this;}_createClass(PriceTableList,[{key:\"componentDidMount\",value:function componentDidMount(){this.props.fetchAllPriceTables();}},{key:\"render\",// changePage = event => {\n//     let target = parseInt(event.target.value);\n//     if (this.props.priceTable.searchedPriceTable) {\n//         this.searchPriceTable(target)\n//     } else {\n//         let sortDirection = this.state.sortToggle ? \"asc\" : \"desc\";\n//         this.props.fetchAllPriceTables(target, this.state.priceTablesPerPage, this.props.priceTable.sortDirection, false);\n//     }\n//     this.setState({\n//         [event.target.name]: target\n//     });\n// };\n// firstPage = () => {\n//     let firstPage = 1;\n//     if (this.props.priceTable.currentPage > firstPage) {\n//         this.props.priceTable.currentPage = 1;\n//         if (this.props.priceTable.searchedPriceTable) {\n//             this.searchPriceTable(this.props.priceTable.currentPage)\n//         } else {\n//             let sortDirection = this.state.sortToggle ? \"asc\" : \"desc\";\n//             this.props.fetchAllPriceTables(this.props.priceTable.currentPage, this.state.priceTablesPerPage, this.props.priceTable.sortDirection);\n//         }\n//     }\n// };\n// prevPage = () => {\n//     if (this.props.priceTable.currentPage > 1) {\n//         --this.props.priceTable.currentPage;\n//         if (this.props.priceTable.searchedPriceTable) {\n//             this.searchPriceTable(this.props.priceTable.currentPage)\n//         } else {\n//             let sortDirection = this.state.sortToggle ? \"asc\" : \"desc\";\n//             this.props.fetchAllPriceTables(this.props.priceTable.currentPage, this.state.priceTablesPerPage, this.props.priceTable.sortDirection, false);\n//         }\n//     }\n// };\n// lastPage = () => {\n//     let priceTablesLength = this.state.priceTables.length;\n//     let lastPage = Math.ceil(this.props.totalElements / this.state.priceTablesPerPage);\n//     if (this.props.priceTable.currentPage < lastPage) {\n//         this.props.priceTable.currentPage = lastPage;\n//         if (this.props.priceTable.searchedPriceTable) {\n//             this.searchPriceTable(this.props.priceTable.currentPage)\n//         } else {\n//             this.props.fetchAllPriceTables(this.props.priceTable.currentPage, this.state.priceTablesPerPage, this.props.priceTable.sortDirection);\n//         }\n//     }\n// };\n// nextPage = () => {\n//     if (this.state.currentPage < Math.ceil(this.props.totalElements / this.state.priceTablesPerPage)) {\n//         ++this.props.priceTable.currentPage;\n//         if (this.props.priceTable.searchedPriceTable) {\n//             this.searchPriceTable(this.props.priceTable.currentPage)\n//         } else {\n//             let sortDirection = this.state.sortToggle ? \"asc\" : \"desc\";\n//             this.props.fetchAllPriceTables(this.props.priceTable.currentPage, this.state.priceTablesPerPage, this.props.priceTable.sortDirection, false);\n//         }\n//     }\n// };\n// searchChange = event => {\n//     this.props.priceTable.searchedPriceTable = event.target.value;\n//     this.forceUpdate();\n// };\n// cancelSearch = () => {\n//     this.props.priceTable.searchedPriceTable = '';\n//     this.props.fetchAllPriceTables(this.props.priceTable.currentPage, this.state.priceTablesPerPage, this.props.priceTable.sortDirection, false);\n//     this.forceUpdate();\n// };\n// sortData = () => {\n//    // console.log(this.props.priceTable.sortDirection);\n//     if (this.props.priceTable.sortDirection === \"asc\")\n//         this.props.priceTable.sortDirection = \"desc\";\n//     else\n//         this.props.priceTable.sortDirection = \"asc\";\n//      //   console.log(this.props.priceTable.sortDirection);\n//     this.props.fetchAllPriceTables(this.props.priceTable.currentPage, this.state.priceTablesPerPage, this.props.priceTable.sortDirection, false);\n// }\n// searchPriceTable = (currentPage) => {\n//     if (this.props.priceTable.searchedPriceTable)\n//         this.props.searchPriceTables(this.props.priceTable.searchedPriceTable, this.props.priceTable.currentPage, this.props.priceTable.priceTablesPerPage);\n// }\nvalue:function render(){var _this2=this;// const searchedPriceTable = this.props.priceTable.searchedPriceTable;\n//const totalPages = this.props.priceTable.totalPages;\n//const totalElements = this.props.priceTable.totalElements;\nvar priceTable=this.props.priceTable;var priceTables=this.props.priceTables;//const currentPage = this.props.priceTable.currentPage;\n//const sortDirection = this.props.priceTable.sortDirection;\nvar pageNumCss={width:\"45px\",border:\"1px solid #F8F8FF\",color:\"#F8F8FF\",textAlign:\"center\",fontWeight:\"bold\"};var searchBoxCss={width:\"100px\",border:\"1px solid #17A2B8\",color:\"#17A2B8\",textAlign:\"center\",fontWeight:\"bold\"};return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{style:{\"display\":this.state.show?\"block\":\"none\"}},/*#__PURE__*/React.createElement(SuccessToast,{show:this.state.show,message:\"PriceTable Deleted Successfully.\",type:\"danger\"})),/*#__PURE__*/React.createElement(Card,{className:\"border border-dark bg-dark text-white\"},/*#__PURE__*/React.createElement(Card.Header,null,/*#__PURE__*/React.createElement(\"div\",{style:{\"float\":\"left\"}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faMoneyCheckAlt}),\"     PriceTables List\")),/*#__PURE__*/React.createElement(Card.Body,null,/*#__PURE__*/React.createElement(Table,{striped:true,bordered:true,hover:true,variant:\"dark\"},/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",null,\"Name\"),/*#__PURE__*/React.createElement(\"th\",null,\"Min nr hours\"),/*#__PURE__*/React.createElement(\"th\",null,\"1 Person [zl]\"),/*#__PURE__*/React.createElement(\"th\",null,\"2 People [zl/1 Person]\"),/*#__PURE__*/React.createElement(\"th\",null,\"3+ People [zl/1 Person]\"),/*#__PURE__*/React.createElement(\"th\",null,\"Actions\"))),/*#__PURE__*/React.createElement(\"tbody\",null,priceTables.length===0?/*#__PURE__*/React.createElement(\"tr\",{align:\"center\"},/*#__PURE__*/React.createElement(\"td\",{colSpan:\"10\"},\" No PriceTables in the Data Base\")):priceTables.map(function(priceTable,index){return/*#__PURE__*/React.createElement(\"tr\",{key:priceTable.id},/*#__PURE__*/React.createElement(\"td\",null,priceTable.name),/*#__PURE__*/React.createElement(\"td\",null,priceTable.minNrHours),/*#__PURE__*/React.createElement(\"td\",null,priceTable.onePPrice),/*#__PURE__*/React.createElement(\"td\",null,priceTable.twoPPrice),/*#__PURE__*/React.createElement(\"td\",null,priceTable.threePPrice),/*#__PURE__*/React.createElement(\"td\",null,/*#__PURE__*/React.createElement(ButtonGroup,null,/*#__PURE__*/React.createElement(Link,{to:\"editPriceTable/\"+priceTable.id},\" \",/*#__PURE__*/React.createElement(Button,{size:\"sm\",variant:\"outline-primary\"},\" \",/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faEdit}),\" \"),\" \"),/*#__PURE__*/React.createElement(Button,{size:\"sm\",variant:\"outline-danger\",onClick:_this2.deletePriceTable.bind(_this2,priceTable.id)},\" \",/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faTrash}),\" \"))));})))),/*#__PURE__*/React.createElement(Card.Footer,null,/*#__PURE__*/React.createElement(\"div\",{style:{\"float\":\"left\"}},/*#__PURE__*/React.createElement(Link,{to:\"add-priceTable\",className:\"nav-link\"},/*#__PURE__*/React.createElement(ButtonGroup,null,/*#__PURE__*/React.createElement(Button,{size:\"lg\",variant:\"outline-light\"},\" \",/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPlusSquare}),\" \")))))));}}]);return PriceTableList;}(React.Component);var mapStateToProps=function mapStateToProps(state){return{priceTable:state.priceTable,priceTables:state.priceTable.priceTables};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{fetchAllPriceTables:function fetchAllPriceTables(){return dispatch(_fetchAllPriceTables());},deletePriceTable:function deletePriceTable(priceTableId){return dispatch(_deletePriceTable(priceTableId));}};};export default connect(mapStateToProps,mapDispatchToProps)(PriceTableList);","map":{"version":3,"sources":["/home/michal/Desktop/projekty/java/SurfSchoolSchedule/SurfSchoolSchedule/surf-school-schedule/src/components/PriceTable/PriceTableList.js"],"names":["React","axios","Link","Alert","Card","Table","ButtonGroup","Button","InputGroup","FormControl","FontAwesomeIcon","faMoneyCheckAlt","faEdit","faTrash","faPlusSquare","SuccessToast","connect","deletePriceTable","fetchAllPriceTables","PriceTableList","props","idPriceTable","setTimeout","priceTable","setState","state","priceTables","pageNumCss","width","border","color","textAlign","fontWeight","searchBoxCss","show","length","map","index","id","name","minNrHours","onePPrice","twoPPrice","threePPrice","bind","Component","mapStateToProps","mapDispatchToProps","dispatch","priceTableId"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { Alert, Card, Table, ButtonGroup, Button, InputGroup, FormControl } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faMoneyCheckAlt, faEdit, faTrash, faPlusSquare} from '@fortawesome/free-solid-svg-icons';\nimport SuccessToast from '../SuccessToast';\n\nimport './../../style/Style.css';\n\n\nimport { connect } from 'react-redux';\nimport { deletePriceTable, fetchAllPriceTables } from './../../services/index';\n\nclass PriceTableList extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            priceTables: []//,\n            // currentPage: 1,\n            //   priceTablesPerPage: 5,\n            //  searchedPriceTable: '',\n            //sortToggle: true\n        };\n    }\n\n\n    componentDidMount() {\n        this.props.fetchAllPriceTables(/*this.props.priceTable.currentPage, this.state.priceTablesPerPage, this.props.priceTable.sortDirection*/);\n    }\n\n    deletePriceTable = (idPriceTable) => {\n\n        this.props.deletePriceTable(idPriceTable);\n\n        setTimeout(() => {\n            if (this.props.priceTable != null) {\n                this.setState({ \"show\": true });\n                setTimeout(() => this.setState({ \"show\": false }), 1000);\n\n            } else {\n                this.setState({ \"show\": false });\n            }\n        }, 1000);\n        this.props.fetchAllPriceTables(/*this.props.priceTable.currentPage, this.state.priceTablesPerPage, this.props.priceTable.sortDirection, false*/);\n\n    };\n\n    // changePage = event => {\n    //     let target = parseInt(event.target.value);\n    //     if (this.props.priceTable.searchedPriceTable) {\n    //         this.searchPriceTable(target)\n    //     } else {\n    //         let sortDirection = this.state.sortToggle ? \"asc\" : \"desc\";\n    //         this.props.fetchAllPriceTables(target, this.state.priceTablesPerPage, this.props.priceTable.sortDirection, false);\n    //     }\n    //     this.setState({\n    //         [event.target.name]: target\n    //     });\n\n    // };\n\n    // firstPage = () => {\n    //     let firstPage = 1;\n\n    //     if (this.props.priceTable.currentPage > firstPage) {\n    //         this.props.priceTable.currentPage = 1;\n    //         if (this.props.priceTable.searchedPriceTable) {\n    //             this.searchPriceTable(this.props.priceTable.currentPage)\n    //         } else {\n    //             let sortDirection = this.state.sortToggle ? \"asc\" : \"desc\";\n    //             this.props.fetchAllPriceTables(this.props.priceTable.currentPage, this.state.priceTablesPerPage, this.props.priceTable.sortDirection);\n    //         }\n    //     }\n    // };\n\n    // prevPage = () => {\n    //     if (this.props.priceTable.currentPage > 1) {\n    //         --this.props.priceTable.currentPage;\n    //         if (this.props.priceTable.searchedPriceTable) {\n    //             this.searchPriceTable(this.props.priceTable.currentPage)\n    //         } else {\n    //             let sortDirection = this.state.sortToggle ? \"asc\" : \"desc\";\n    //             this.props.fetchAllPriceTables(this.props.priceTable.currentPage, this.state.priceTablesPerPage, this.props.priceTable.sortDirection, false);\n    //         }\n    //     }\n    // };\n\n    // lastPage = () => {\n    //     let priceTablesLength = this.state.priceTables.length;\n    //     let lastPage = Math.ceil(this.props.totalElements / this.state.priceTablesPerPage);\n    //     if (this.props.priceTable.currentPage < lastPage) {\n    //         this.props.priceTable.currentPage = lastPage;\n    //         if (this.props.priceTable.searchedPriceTable) {\n    //             this.searchPriceTable(this.props.priceTable.currentPage)\n    //         } else {\n    //             this.props.fetchAllPriceTables(this.props.priceTable.currentPage, this.state.priceTablesPerPage, this.props.priceTable.sortDirection);\n    //         }\n    //     }\n    // };\n\n    // nextPage = () => {\n    //     if (this.state.currentPage < Math.ceil(this.props.totalElements / this.state.priceTablesPerPage)) {\n    //         ++this.props.priceTable.currentPage;\n\n    //         if (this.props.priceTable.searchedPriceTable) {\n    //             this.searchPriceTable(this.props.priceTable.currentPage)\n    //         } else {\n    //             let sortDirection = this.state.sortToggle ? \"asc\" : \"desc\";\n    //             this.props.fetchAllPriceTables(this.props.priceTable.currentPage, this.state.priceTablesPerPage, this.props.priceTable.sortDirection, false);\n    //         }\n    //     }\n    // };\n\n    // searchChange = event => {\n    //     this.props.priceTable.searchedPriceTable = event.target.value;\n    //     this.forceUpdate();\n    // };\n\n    // cancelSearch = () => {\n    //     this.props.priceTable.searchedPriceTable = '';\n    //     this.props.fetchAllPriceTables(this.props.priceTable.currentPage, this.state.priceTablesPerPage, this.props.priceTable.sortDirection, false);\n    //     this.forceUpdate();\n    // };\n\n    // sortData = () => {\n    //    // console.log(this.props.priceTable.sortDirection);\n    //     if (this.props.priceTable.sortDirection === \"asc\")\n    //         this.props.priceTable.sortDirection = \"desc\";\n    //     else\n    //         this.props.priceTable.sortDirection = \"asc\";\n    //      //   console.log(this.props.priceTable.sortDirection);\n\n    //     this.props.fetchAllPriceTables(this.props.priceTable.currentPage, this.state.priceTablesPerPage, this.props.priceTable.sortDirection, false);\n\n    // }\n\n    // searchPriceTable = (currentPage) => {\n    //     if (this.props.priceTable.searchedPriceTable)\n    //         this.props.searchPriceTables(this.props.priceTable.searchedPriceTable, this.props.priceTable.currentPage, this.props.priceTable.priceTablesPerPage);\n    // }\n\n    render() {\n        // const searchedPriceTable = this.props.priceTable.searchedPriceTable;\n        //const totalPages = this.props.priceTable.totalPages;\n        //const totalElements = this.props.priceTable.totalElements;\n        const priceTable = this.props.priceTable;\n        const priceTables = this.props.priceTables;\n        //const currentPage = this.props.priceTable.currentPage;\n        //const sortDirection = this.props.priceTable.sortDirection;\n\n        const pageNumCss = {\n            width: \"45px\",\n            border: \"1px solid #F8F8FF\",\n            color: \"#F8F8FF\",\n            textAlign: \"center\",\n            fontWeight: \"bold\"\n        };\n\n        const searchBoxCss = {\n            width: \"100px\",\n            border: \"1px solid #17A2B8\",\n            color: \"#17A2B8\",\n            textAlign: \"center\",\n            fontWeight: \"bold\"\n        };\n\n\n        return (\n            <div>\n\n                <div style={{ \"display\": this.state.show ? \"block\" : \"none\" }}>\n                    <SuccessToast show={this.state.show} message=\"PriceTable Deleted Successfully.\" type=\"danger\" />\n                </div>\n\n                {/* {priceTableData.error ?\n                <Alert variant=\"danger\">\n                    {priceTableData.error}\n\n                </Alert> : */}\n                <Card className={\"border border-dark bg-dark text-white\"}>\n                    <Card.Header>\n                        <div style={{ \"float\": \"left\" }}>\n                            <FontAwesomeIcon icon={faMoneyCheckAlt} />     PriceTables List\n                        </div>\n\n\n                    </Card.Header>\n                    <Card.Body>\n                        <Table striped bordered hover variant=\"dark\">\n                            <thead>\n                                <tr>\n                                    <th>Name</th>\n                                    <th>Min nr hours</th>\n                                    <th>1 Person [zl]</th>\n                                    <th>2 People [zl/1 Person]</th>\n                                    <th>3+ People [zl/1 Person]</th>\n                                    <th>Actions</th>\n                                </tr>\n                            </thead>\n\n\n                            <tbody>\n                                {priceTables.length === 0 ?\n                                    <tr align=\"center\">\n                                        <td colSpan=\"10\"> No PriceTables in the Data Base</td>\n                                    </tr> :\n\n                                    priceTables.map((priceTable, index) => (\n                                        <tr key={priceTable.id}>\n                                            <td>{priceTable.name}</td>\n                                            <td>{priceTable.minNrHours}</td>\n                                            <td>{priceTable.onePPrice}</td>\n                                            <td>{priceTable.twoPPrice}</td>\n                                            <td>{priceTable.threePPrice}</td>\n                                            <td>\n                                                <ButtonGroup>\n                                                    <Link to={\"editPriceTable/\" + priceTable.id}> <Button size=\"sm\" variant=\"outline-primary\"> <FontAwesomeIcon icon={faEdit} /> </Button> </Link>\n                                                    <Button size=\"sm\" variant=\"outline-danger\" onClick={this.deletePriceTable.bind(this, priceTable.id)}> <FontAwesomeIcon icon={faTrash} /> </Button>\n                                                </ButtonGroup>\n                                            </td>\n\n                                        </tr>\n                                    ))\n                                }\n                            </tbody>\n                        </Table>\n                    </Card.Body>\n                    <Card.Footer>\n                        <div style={{ \"float\": \"left\" }}>\n                            <Link to={\"add-priceTable\"} className=\"nav-link\">\n                                <ButtonGroup>\n                                    <Button size=\"lg\" variant=\"outline-light\"> <FontAwesomeIcon icon={faPlusSquare} /> </Button>\n                                </ButtonGroup>\n                            </Link>\n                        </div>\n\n\n                    </Card.Footer>\n                </Card>\n\n            </div>\n        );\n    }\n\n}\n\nconst mapStateToProps = state => {\n    return {\n        priceTable: state.priceTable,\n        priceTables: state.priceTable.priceTables,\n    }\n};\n\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        fetchAllPriceTables: () => dispatch(fetchAllPriceTables() ),\n        deletePriceTable: (priceTableId) => dispatch(deletePriceTable(priceTableId)),\n    }\n\n};\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PriceTableList);"]},"metadata":{},"sourceType":"module"}